{"version":3,"sources":["./node_modules/@agm/core/agm-core.d.ts.AgmInfoWindow.html","./node_modules/@agm/core/agm-core.d.ts.AgmMap.html","./node_modules/@agm/core/fesm2015/agm-core.js","./node_modules/tslib/tslib.es6.js","./src/app/geolocalization/account-list/account-list.component.html","./src/app/geolocalization/account-list/account-list.component.ts","./src/app/geolocalization/account-register/account-register.component.html","./src/app/geolocalization/account-register/account-register.component.ts","./src/app/geolocalization/administration/administration.component.html","./src/app/geolocalization/administration/administration.component.ts","./src/app/geolocalization/command-base/command-base.component.html","./src/app/geolocalization/command-base/command-base.component.ts","./src/app/geolocalization/geolocalization-routing.module.ts","./src/app/geolocalization/geolocalization.component.html","./src/app/geolocalization/geolocalization.component.ts","./src/app/geolocalization/geolocalization.module.ts","./src/app/geolocalization/map/map.component.html","./src/app/geolocalization/map/map.component.ts","./src/app/geolocalization/messages/add-vehicle/add-vehicle.component.html","./src/app/geolocalization/messages/add-vehicle/add-vehicle.component.ts","./src/app/geolocalization/messages/register-success/register-success.component.html","./src/app/geolocalization/messages/register-success/register-success.component.ts","./src/app/geolocalization/messages/track-accounts-search/track-accounts-search.component.html","./src/app/geolocalization/messages/track-accounts-search/track-accounts-search.component.ts","./src/app/geolocalization/services/account.service.ts","./src/app/geolocalization/services/geolocalization.service.ts","./src/app/geolocalization/track-account/track-account.component.html","./src/app/geolocalization/track-account/track-account.component.ts","./src/app/geolocalization/track-accounts/track-accounts.component.html","./src/app/geolocalization/track-accounts/track-accounts.component.ts","./src/app/geolocalization/track-list/track-list.component.html","./src/app/geolocalization/track-list/track-list.component.ts","./src/app/geolocalization/tracker/tracker.component.html","./src/app/geolocalization/tracker/tracker.component.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;mGAAA,2JAAqC,IAC/B,0DAAY;;;;;;;4FCAJ,2LAAqE,KACrE,mJAA6B,IAC3B,0DAAY;;;;;;;;;;;;;;;;ACH5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAmE;AAC+L;AACnH;AACJ;AACxF;;AAEnD;AACA;AACA,gBAAgB,wDAAU;AAC1B,IAAI,gEAAU;AACd;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sCAAsC,6BAA6B,EAAE;AACrE;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA,mCAAmC,uBAAuB,EAAE;AAC5D,SAAS;AACT;AACA;AACA;AACA;AACA,6BAA6B;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA,yCAAyC,4CAA4C,EAAE;AACvF,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA,eAAe,oBAAoB;AACnC,iBAAiB,sBAAsB;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA,eAAe,sBAAsB;AACrC,iBAAiB,wBAAwB;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,+CAAU;AAC7B;AACA,mDAAmD,0CAA0C,EAAE;AAC/F,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,oBAAoB,kBAAkB;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,sBAAsB;AAC3B,KAAK,OAAO,oDAAM;AAClB;AACA,uBAAuB,wDAAU;AACjC,IAAI,gEAAU;AACd,IAAI,wDAAU,sCAAsC,oDAAM;AAC1D;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,gBAAgB;AAC/B,eAAe,oBAAoB;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,kBAAkB;AACjC,eAAe,sBAAsB;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,kCAAkC;AACjD;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,eAAe,mCAAmC;AAClD,eAAe,0CAA0C;AACzD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA,SAAS;AACT;AACA;AACA;AACA,KAAK;AACL;AACA,eAAe,wDAAU;AACzB,IAAI,gEAAU;AACd,IAAI,wDAAU;AACd;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+CAA+C,wBAAwB;AACvE;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uDAAuD,2CAA2C;AAClG;AACA;AACA;AACA,UAAU,iBAAiB;AAC3B;AACA,gBAAgB,6BAA6B,oBAAoB,EAAE;AACnE;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,wDAAU;AACV,IAAI,2DAAK;AACT,IAAI,wDAAU;AACd;AACA,oBAAoB,wDAAU;AAC9B,IAAI,+DAAS;AACb;AACA,KAAK;AACL,IAAI,wDAAU;AACd;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB,8CAA8C;AACnE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sDAAsD,qBAAqB,8CAA8C,EAAE,EAAE;AAC7H;AACA;AACA,sDAAsD,uCAAuC,EAAE;AAC/F;AACA;AACA,sDAAsD,yCAAyC,EAAE;AACjG;AACA;AACA,sDAAsD,qCAAqC,EAAE;AAC7F;AACA;AACA,sDAAsD,mCAAmC,EAAE;AAC3F;AACA;AACA;AACA;AACA;AACA,mBAAmB,+CAAU;AAC7B;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,KAAK,6BAA6B;AAClC,KAAK,OAAO,oDAAM;AAClB;AACA,gBAAgB,wDAAU;AAC1B,IAAI,gEAAU;AACd,IAAI,wDAAU,6CAA6C,oDAAM;AACjE;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gCAAgC,0DAAY;AAC5C;AACA;AACA;AACA,+BAA+B,0DAAY;AAC3C;AACA;AACA;AACA,kCAAkC,0DAAY;AAC9C;AACA;AACA;AACA,wBAAwB,0DAAY;AACpC;AACA;AACA;AACA,2BAA2B,0DAAY;AACvC;AACA;AACA;AACA,6BAA6B,0DAAY;AACzC;AACA;AACA;AACA,6BAA6B,0DAAY;AACzC;AACA;AACA;AACA,6BAA6B,0DAAY;AACzC;AACA;AACA;AACA,4BAA4B,0DAAY;AACxC;AACA;AACA;AACA,6BAA6B,0DAAY;AACzC;AACA;AACA;AACA,2BAA2B,0DAAY;AACvC;AACA;AACA;AACA,gCAAgC,0DAAY;AAC5C;AACA;AACA;AACA,8BAA8B,0DAAY;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC,sCAAsC,EAAE;AAC3E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0FAA0F,uCAAuC;AACjI;AACA;AACA,2CAA2C,UAAU,mDAAmD,EAAE;AAC1G;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA,uDAAuD,iBAAiB,EAAE;AAC1E;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,sCAAsC;AACvD,iBAAiB,sCAAsC;AACvD;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,wDAAU;AACV,IAAI,2DAAK;AACT,IAAI,wDAAU;AACd;AACA,wDAAU;AACV,IAAI,2DAAK;AACT,IAAI,wDAAU;AACd;AACA,wDAAU;AACV,IAAI,2DAAK;AACT,IAAI,wDAAU;AACd;AACA,wDAAU;AACV,IAAI,2DAAK;AACT,IAAI,wDAAU;AACd;AACA,wDAAU;AACV,IAAI,2DAAK;AACT,IAAI,wDAAU;AACd;AACA,wDAAU;AACV,IAAI,2DAAK;AACT,IAAI,wDAAU;AACd;AACA,wDAAU;AACV,IAAI,2DAAK;AACT,IAAI,wDAAU;AACd;AACA,wDAAU;AACV,IAAI,2DAAK;AACT,IAAI,wDAAU;AACd;AACA,wDAAU;AACV,IAAI,2DAAK;AACT,IAAI,wDAAU;AACd;AACA,wDAAU;AACV,IAAI,2DAAK;AACT,IAAI,wDAAU;AACd;AACA,wDAAU;AACV,IAAI,2DAAK;AACT,IAAI,wDAAU;AACd;AACA,wDAAU;AACV,IAAI,2DAAK;AACT,IAAI,wDAAU;AACd;AACA,wDAAU;AACV,IAAI,2DAAK;AACT,IAAI,wDAAU;AACd;AACA,wDAAU;AACV,IAAI,2DAAK;AACT,IAAI,wDAAU;AACd;AACA,wDAAU;AACV,IAAI,4DAAM;AACV,IAAI,wDAAU,gBAAgB,0DAAY;AAC1C;AACA,wDAAU;AACV,IAAI,4DAAM;AACV,IAAI,wDAAU,gBAAgB,0DAAY;AAC1C;AACA,wDAAU;AACV,IAAI,4DAAM;AACV,IAAI,wDAAU,gBAAgB,0DAAY;AAC1C;AACA,wDAAU;AACV,IAAI,4DAAM;AACV,IAAI,wDAAU,gBAAgB,0DAAY;AAC1C;AACA,wDAAU;AACV,IAAI,4DAAM;AACV,IAAI,wDAAU,gBAAgB,0DAAY;AAC1C;AACA,wDAAU;AACV,IAAI,4DAAM;AACV,IAAI,wDAAU,gBAAgB,0DAAY;AAC1C;AACA,wDAAU;AACV,IAAI,4DAAM;AACV,IAAI,wDAAU,gBAAgB,0DAAY;AAC1C;AACA,wDAAU;AACV,IAAI,4DAAM;AACV,IAAI,wDAAU,gBAAgB,0DAAY;AAC1C;AACA,wDAAU;AACV,IAAI,4DAAM;AACV,IAAI,wDAAU,gBAAgB,0DAAY;AAC1C;AACA,wDAAU;AACV,IAAI,4DAAM;AACV,IAAI,wDAAU,gBAAgB,0DAAY;AAC1C;AACA,wDAAU;AACV,IAAI,4DAAM;AACV,IAAI,wDAAU,gBAAgB,0DAAY;AAC1C;AACA,wDAAU;AACV,IAAI,4DAAM;AACV,IAAI,wDAAU,gBAAgB,0DAAY;AAC1C;AACA,wDAAU;AACV,IAAI,4DAAM;AACV,IAAI,wDAAU,gBAAgB,0DAAY;AAC1C;AACA,0BAA0B,wDAAU;AACpC,IAAI,+DAAS;AACb;AACA,KAAK;AACL,IAAI,wDAAU;AACd;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,mBAAmB,+CAAU;AAC7B;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,KAAK,6BAA6B;AAClC,KAAK,OAAO,oDAAM;AAClB;AACA,mBAAmB,wDAAU;AAC7B,IAAI,gEAAU;AACd,IAAI,wDAAU,6CAA6C,oDAAM;AACjE;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,YAAY;AACvB,WAAW,uBAAuB;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B,0DAAY;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,2DAA2D;AACxE;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,UAAU,iBAAiB;AAC3B;AACA,gBAAgB,wBAAwB,oBAAoB,EAAE;AAC9D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,wDAAU;AACV,IAAI,4DAAM;AACV,IAAI,wDAAU,gBAAgB,0DAAY;AAC1C;AACA,wDAAU;AACV,IAAI,2DAAK;AACT,IAAI,wDAAU;AACd;AACA,wDAAU;AACV,IAAI,2DAAK;AACT,IAAI,wDAAU;AACd;AACA,gCAAgC,wDAAU;AAC1C,IAAI,+DAAS;AACb;AACA,KAAK;AACL,IAAI,wDAAU;AACd;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4CAA4C,oDAAe;AAC3D,qCAAqC,oDAAe;AACpD,uBAAuB,iDAAI,qBAAqB,8DAAO,gCAAgC,6DAAM,oCAAoC,gEAAS,SAAS,kDAAK,cAAc,0DAAG,4DAA4D,kEAAW;AAChP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB,WAAW,GAAG,WAAW;AAC3C;AACA;AACA;AACA,KAAK;AACL;AACA,mBAAmB,wDAAU;AAC7B,IAAI,gEAAU;AACd,IAAI,wDAAU;AACd;;AAEA;AACA;AACA,kFAAkF,wBAAwB;AAC1G;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B,4CAAO;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB,2EAAoB,4EAA4E,gEAAS;AAC3H;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,wCAAwC,OAAO,kDAAI,EAAE,GAAG;AAC7D,KAAK;AACL;AACA,wDAAU;AACV,IAAI,2DAAK;AACT,IAAI,wDAAU;AACd;AACA,eAAe,wDAAU;AACzB,IAAI,+DAAS;AACb;AACA,KAAK;AACL,IAAI,qDAAO,IAAI,0DAAI;AACnB,IAAI,wDAAU;AACd;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,uDAAS;AACxB;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA,oEAAoE,8CAA8C;AAClH;AACA;AACA;AACA;AACA;AACA,sDAAsD,0BAA0B,EAAE;AAClF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,uDAAS;AACxB;AACA;AACA,SAAS;AACT;AACA;AACA,uDAAuD,uDAAS;AAChE;AACA,2BAA2B,8CAA8C;AACzE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,+CAAU;AAC7B;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA,KAAK,6BAA6B;AAClC,KAAK,OAAO,oDAAM;AAClB;AACA,gBAAgB,wDAAU;AAC1B,IAAI,gEAAU;AACd,IAAI,wDAAU,6CAA6C,oDAAM;AACjE;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gCAAgC;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,+CAAU;AAC7B;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA,KAAK,6BAA6B;AAClC,KAAK,OAAO,oDAAM,EAAE;AACpB,KAAK;AACL;AACA,oBAAoB,wDAAU;AAC9B,IAAI,gEAAU;AACd,IAAI,wDAAU,6CAA6C,oDAAM;AACjE;AACA;;AAEA;AACA;AACA;AACA,iDAAiD,gBAAgB;AACjE;AACA;AACA;AACA,WAAW,YAAY;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC,0DAAY;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC,sCAAsC,EAAE;AAC3E;AACA;AACA;AACA;AACA;AACA,YAAY,2CAA2C;AACvD;AACA;AACA;AACA;AACA,+DAA+D,6BAA6B,EAAE;AAC9F;AACA;AACA,UAAU,iBAAiB;AAC3B;AACA,gBAAgB,+CAA+C;AAC/D;AACA,mBAAmB,gDAAgD;AACnE;AACA;AACA;AACA,KAAK,0BAA0B;AAC/B,KAAK,OAAO,wDAAU;AACtB;AACA,wDAAU;AACV,IAAI,2DAAK;AACT,IAAI,wDAAU;AACd;AACA,wDAAU;AACV,IAAI,2DAAK;AACT,IAAI,wDAAU;AACd;AACA,wDAAU;AACV,IAAI,2DAAK;AACT,IAAI,wDAAU;AACd;AACA,wDAAU;AACV,IAAI,2DAAK;AACT,IAAI,wDAAU;AACd;AACA,wDAAU;AACV,IAAI,2DAAK;AACT,IAAI,wDAAU;AACd;AACA,wDAAU;AACV,IAAI,2DAAK;AACT,IAAI,wDAAU;AACd;AACA,wDAAU;AACV,IAAI,4DAAM;AACV,IAAI,wDAAU,gBAAgB,0DAAY;AAC1C;AACA,kCAAkC,wDAAU;AAC5C,IAAI,+DAAS;AACb;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,IAAI,wDAAU,0CAA0C,wDAAU;AAClE;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,mBAAmB,+CAAU;AAC7B;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA,KAAK,6BAA6B;AAClC,KAAK,OAAO,oDAAM;AAClB;AACA,kBAAkB,wDAAU;AAC5B,IAAI,gEAAU;AACd,IAAI,wDAAU,6CAA6C,oDAAM;AACjE;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B,0DAAY;AAC1C;AACA;AACA;AACA,yCAAyC,0DAAY;AACrD;AACA;AACA;AACA;AACA;AACA,gCAAgC,0DAAY;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,IAAI;AACb;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,2DAA2D;AACxE,aAAa,oFAAoF;AACjG,aAAa,kEAAkE;AAC/E;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,UAAU,iBAAiB;AAC3B;AACA,gBAAgB,uBAAuB,oBAAoB,EAAE;AAC7D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,wDAAU;AACV,IAAI,2DAAK;AACT,IAAI,wDAAU;AACd;AACA,wDAAU;AACV,IAAI,2DAAK;AACT,IAAI,wDAAU;AACd;AACA,wDAAU;AACV,IAAI,2DAAK;AACT,IAAI,wDAAU;AACd;AACA,wDAAU;AACV,IAAI,2DAAK;AACT,IAAI,wDAAU;AACd;AACA,wDAAU;AACV,IAAI,2DAAK;AACT,IAAI,wDAAU;AACd;AACA,wDAAU;AACV,IAAI,2DAAK;AACT,IAAI,wDAAU;AACd;AACA,wDAAU;AACV,IAAI,4DAAM;AACV,IAAI,wDAAU,gBAAgB,0DAAY;AAC1C;AACA,wDAAU;AACV,IAAI,4DAAM;AACV,IAAI,wDAAU,gBAAgB,0DAAY;AAC1C;AACA,wDAAU;AACV,IAAI,4DAAM;AACV,IAAI,wDAAU,gBAAgB,0DAAY;AAC1C;AACA,8BAA8B,wDAAU;AACxC,IAAI,+DAAS;AACb;AACA,KAAK;AACL,IAAI,wDAAU;AACd;;AAEA;AACA;AACA,WAAW,6DAAgB,6GAA6G,sDAAsD;AAC9L;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0CAA0C,QAAQ;AAClD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mDAAmD,2BAA2B,EAAE;AAChF;AACA;AACA,qDAAqD,uBAAuB,EAAE;AAC9E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,+CAAU;AAC7B;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA,eAAe,uDAAS;AACxB;AACA;AACA;AACA,sCAAsC,gEAAS,EAAE,2BAA2B;AAC5E,YAAY,gEAAS,kBAAkB,kDAAK;AAC5C;AACA,sBAAsB,0DAAG,iBAAiB,8CAA8C;AACxF,sBAAsB,gEAAS,EAAE,mDAAmD;AACpF,YAAY,2DAAI;AAChB,YAAY,0DAAG,GAAG,uCAAuC;AACzD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA,KAAK,6BAA6B;AAClC,KAAK,OAAO,oDAAM;AAClB;AACA,iBAAiB,wDAAU;AAC3B,IAAI,gEAAU;AACd,IAAI,wDAAU,6CAA6C,oDAAM;AACjE;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB;AACpB,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B,8BAA8B,iBAAiB,EAAE,EAAE,EAAE;AACnF;AACA;AACA,eAAe,uDAAS;AACxB;AACA;AACA;AACA;AACA;AACA;AACA,kEAAkE,eAAe;AACjF,SAAS;AACT;AACA;AACA,sDAAsD,uBAAuB,EAAE;AAC/E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA,eAAe,uDAAS;AACxB;AACA;AACA,SAAS;AACT;AACA;AACA,eAAe,uDAAS;AACxB;AACA,SAAS;AACT;AACA;AACA,mBAAmB,+CAAU;AAC7B;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA,eAAe,uDAAS;AACxB;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,KAAK,6BAA6B;AAClC,KAAK,OAAO,oDAAM;AAClB;AACA,sCAAsC,wDAAU;AAChD,IAAI,gEAAU;AACd,IAAI,wDAAU,6CAA6C,oDAAM;AACjE;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,eAAe,+CAAU;AACzB;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,KAAK,6BAA6B;AAClC,KAAK,OAAO,oDAAM;AAClB;AACA,mBAAmB,wDAAU;AAC7B,IAAI,gEAAU;AACd,IAAI,wDAAU,6CAA6C,oDAAM;AACjE;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,YAAY;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2GAA2G,mBAAmB;AAC9H;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6DAA6D;AAC7D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B,0DAAY;AACxC;AACA;AACA;AACA;AACA,iCAAiC,0DAAY;AAC7C;AACA;AACA;AACA;AACA,+BAA+B,0DAAY;AAC3C;AACA;AACA;AACA,gCAAgC,0DAAY;AAC5C;AACA;AACA;AACA,gCAAgC,0DAAY;AAC5C;AACA;AACA;AACA,mCAAmC,0DAAY;AAC/C;AACA;AACA;AACA,wBAAwB,0DAAY;AACpC;AACA;AACA;AACA,8BAA8B,0DAAY;AAC1C;AACA;AACA;AACA;AACA,4BAA4B,0DAAY;AACxC;AACA;AACA;AACA,+BAA+B,0DAAY;AAC3C;AACA;AACA;AACA,YAAY,wEAAgB;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB,oDAAoD;AACzE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC,sCAAsC,EAAE;AAC3E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wCAAwC,0CAA0C;AAClF,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA,4DAA4D,gCAAgC,EAAE;AAC9F,SAAS;AACT;AACA;AACA;AACA;AACA,kEAAkE,sCAAsC,EAAE;AAC1G,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA,iFAAiF,wBAAwB,EAAE;AAC3G;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,wCAAwC;AACrD,aAAa,kDAAkD;AAC/D,aAAa,8CAA8C;AAC3D;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,OAAO,wDAAU,EAAE;AACxB,KAAK,6BAA6B;AAClC,KAAK,6BAA6B,OAAO,oDAAM,SAAS,yDAAW,IAAI,GAAG;AAC1E,KAAK,yBAAyB;AAC9B,KAAK,OAAO,oDAAM;AAClB;AACA,wDAAU;AACV,IAAI,2DAAK;AACT,IAAI,wDAAU;AACd;AACA,wDAAU;AACV,IAAI,2DAAK;AACT,IAAI,wDAAU;AACd;AACA,wDAAU;AACV,IAAI,2DAAK;AACT,IAAI,wDAAU;AACd;AACA,wDAAU;AACV,IAAI,2DAAK;AACT,IAAI,wDAAU;AACd;AACA,wDAAU;AACV,IAAI,2DAAK;AACT,IAAI,wDAAU;AACd;AACA,wDAAU;AACV,IAAI,2DAAK;AACT,IAAI,wDAAU;AACd;AACA,wDAAU;AACV,IAAI,2DAAK;AACT,IAAI,wDAAU;AACd;AACA,wDAAU;AACV,IAAI,2DAAK;AACT,IAAI,wDAAU;AACd;AACA,wDAAU;AACV,IAAI,2DAAK;AACT,IAAI,wDAAU;AACd;AACA,wDAAU;AACV,IAAI,2DAAK;AACT,IAAI,wDAAU;AACd;AACA,wDAAU;AACV,IAAI,2DAAK;AACT,IAAI,wDAAU;AACd;AACA,wDAAU;AACV,IAAI,2DAAK;AACT,IAAI,wDAAU;AACd;AACA,wDAAU;AACV,IAAI,2DAAK;AACT,IAAI,wDAAU;AACd;AACA,wDAAU;AACV,IAAI,2DAAK;AACT,IAAI,wDAAU;AACd;AACA,wDAAU;AACV,IAAI,2DAAK;AACT,IAAI,wDAAU;AACd;AACA,wDAAU;AACV,IAAI,2DAAK;AACT,IAAI,wDAAU;AACd;AACA,wDAAU;AACV,IAAI,2DAAK;AACT,IAAI,wDAAU;AACd;AACA,wDAAU;AACV,IAAI,2DAAK;AACT,IAAI,wDAAU;AACd;AACA,wDAAU;AACV,IAAI,2DAAK;AACT,IAAI,wDAAU;AACd;AACA,wDAAU;AACV,IAAI,2DAAK;AACT,IAAI,wDAAU;AACd;AACA,wDAAU;AACV,IAAI,2DAAK;AACT,IAAI,wDAAU;AACd;AACA,wDAAU;AACV,IAAI,2DAAK;AACT,IAAI,wDAAU;AACd;AACA,wDAAU;AACV,IAAI,2DAAK;AACT,IAAI,wDAAU;AACd;AACA,wDAAU;AACV,IAAI,2DAAK;AACT,IAAI,wDAAU;AACd;AACA,wDAAU;AACV,IAAI,2DAAK;AACT,IAAI,wDAAU;AACd;AACA,wDAAU;AACV,IAAI,2DAAK;AACT,IAAI,wDAAU;AACd;AACA,wDAAU;AACV,IAAI,2DAAK;AACT,IAAI,wDAAU;AACd;AACA,wDAAU;AACV,IAAI,2DAAK;AACT,IAAI,wDAAU;AACd;AACA,wDAAU;AACV,IAAI,2DAAK;AACT,IAAI,wDAAU;AACd;AACA,wDAAU;AACV,IAAI,2DAAK;AACT,IAAI,wDAAU;AACd;AACA,wDAAU;AACV,IAAI,2DAAK;AACT,IAAI,wDAAU;AACd;AACA,wDAAU;AACV,IAAI,2DAAK;AACT,IAAI,wDAAU;AACd;AACA,wDAAU;AACV,IAAI,2DAAK;AACT,IAAI,wDAAU;AACd;AACA,wDAAU;AACV,IAAI,2DAAK;AACT,IAAI,wDAAU;AACd;AACA,wDAAU;AACV,IAAI,2DAAK;AACT,IAAI,wDAAU;AACd;AACA,wDAAU;AACV,IAAI,2DAAK;AACT,IAAI,wDAAU;AACd;AACA,wDAAU;AACV,IAAI,2DAAK;AACT,IAAI,wDAAU;AACd;AACA,wDAAU;AACV,IAAI,2DAAK;AACT,IAAI,wDAAU;AACd;AACA,wDAAU;AACV,IAAI,4DAAM;AACV,IAAI,wDAAU,gBAAgB,0DAAY;AAC1C;AACA,wDAAU;AACV,IAAI,4DAAM;AACV,IAAI,wDAAU,gBAAgB,0DAAY;AAC1C;AACA,wDAAU;AACV,IAAI,4DAAM;AACV,IAAI,wDAAU,gBAAgB,0DAAY;AAC1C;AACA,wDAAU;AACV,IAAI,4DAAM;AACV,IAAI,wDAAU,gBAAgB,0DAAY;AAC1C;AACA,wDAAU;AACV,IAAI,4DAAM;AACV,IAAI,wDAAU,gBAAgB,0DAAY;AAC1C;AACA,wDAAU;AACV,IAAI,4DAAM;AACV,IAAI,wDAAU,gBAAgB,0DAAY;AAC1C;AACA,wDAAU;AACV,IAAI,4DAAM;AACV,IAAI,wDAAU,gBAAgB,0DAAY;AAC1C;AACA,wDAAU;AACV,IAAI,4DAAM;AACV,IAAI,wDAAU,gBAAgB,0DAAY;AAC1C;AACA,wDAAU;AACV,IAAI,4DAAM;AACV,IAAI,wDAAU,gBAAgB,0DAAY;AAC1C;AACA,wDAAU;AACV,IAAI,4DAAM;AACV,IAAI,wDAAU,gBAAgB,0DAAY;AAC1C;AACA,oBAAoB,wDAAU;AAC9B,IAAI,+DAAS;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,IAAI,qDAAO,IAAI,4DAAM,CAAC,yDAAW;AACjC,IAAI,wDAAU,uBAAuB,wDAAU;AAC/C;AACA;AACA;AACA,QAAQ,oDAAM;AACd;;AAEA;AACA;AACA;AACA,4CAA4C,aAAa;AACzD;AACA;AACA;AACA,WAAW,YAAY;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC,0DAAY;AAC/C;AACA;AACA;AACA,+BAA+B,0DAAY;AAC3C;AACA;AACA;AACA,kCAAkC,0DAAY;AAC9C;AACA;AACA;AACA,oCAAoC,0DAAY;AAChD;AACA;AACA;AACA,6BAA6B,0DAAY;AACzC;AACA;AACA;AACA,wBAAwB,0DAAY;AACpC;AACA;AACA;AACA,2BAA2B,0DAAY;AACvC;AACA;AACA;AACA,6BAA6B,0DAAY;AACzC;AACA;AACA;AACA,4BAA4B,0DAAY;AACxC;AACA,8BAA8B,uDAAS;AACvC;AACA;AACA,sCAAsC,kDAAa;AACnD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sCAAsC,UAAU,0CAA0C,EAAE;AAC5F;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,iCAAiC,UAAU,2CAA2C,EAAE;AACxF,SAAS;AACT;AACA;AACA;AACA,4BAA4B,UAAU,2CAA2C,EAAE;AACnF,SAAS;AACT;AACA;AACA;AACA,+BAA+B,UAAU,2CAA2C,EAAE;AACtF,SAAS;AACT;AACA;AACA;AACA,iCAAiC,UAAU,2CAA2C,EAAE;AACxF,SAAS;AACT;AACA;AACA;AACA,gCAAgC,UAAU,2CAA2C,EAAE;AACvF,SAAS;AACT;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,UAAU,iBAAiB;AAC3B;AACA,gBAAgB,2CAA2C;AAC3D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,wDAAU;AACV,IAAI,2DAAK;AACT,IAAI,wDAAU;AACd;AACA,wDAAU;AACV,IAAI,2DAAK;AACT,IAAI,wDAAU;AACd;AACA,wDAAU;AACV,IAAI,2DAAK;AACT,IAAI,wDAAU;AACd;AACA,wDAAU;AACV,IAAI,2DAAK;AACT,IAAI,wDAAU;AACd;AACA,wDAAU;AACV,IAAI,2DAAK;AACT,IAAI,wDAAU;AACd;AACA,wDAAU;AACV,IAAI,2DAAK;AACT,IAAI,wDAAU;AACd;AACA,wDAAU;AACV,IAAI,2DAAK;AACT,IAAI,wDAAU;AACd;AACA,wDAAU;AACV,IAAI,2DAAK;AACT,IAAI,wDAAU;AACd;AACA,wDAAU;AACV,IAAI,2DAAK;AACT,IAAI,wDAAU;AACd;AACA,wDAAU;AACV,IAAI,2DAAK;AACT,IAAI,wDAAU;AACd;AACA,wDAAU;AACV,IAAI,2DAAK;AACT,IAAI,wDAAU;AACd;AACA,wDAAU;AACV,IAAI,2DAAK;AACT,IAAI,wDAAU;AACd;AACA,wDAAU;AACV,IAAI,4DAAM;AACV,IAAI,wDAAU;AACd;AACA,wDAAU;AACV,IAAI,4DAAM;AACV,IAAI,wDAAU,gBAAgB,0DAAY;AAC1C;AACA,wDAAU;AACV,IAAI,4DAAM;AACV,IAAI,wDAAU,gBAAgB,0DAAY;AAC1C;AACA,wDAAU;AACV,IAAI,4DAAM;AACV,IAAI,wDAAU,gBAAgB,0DAAY;AAC1C;AACA,wDAAU;AACV,IAAI,4DAAM;AACV,IAAI,wDAAU,gBAAgB,0DAAY;AAC1C;AACA,wDAAU;AACV,IAAI,4DAAM;AACV,IAAI,wDAAU,gBAAgB,0DAAY;AAC1C;AACA,wDAAU;AACV,IAAI,4DAAM;AACV,IAAI,wDAAU,gBAAgB,0DAAY;AAC1C;AACA,wDAAU;AACV,IAAI,4DAAM;AACV,IAAI,wDAAU,gBAAgB,0DAAY;AAC1C;AACA,wDAAU;AACV,IAAI,4DAAM;AACV,IAAI,wDAAU,gBAAgB,0DAAY;AAC1C;AACA,wDAAU;AACV,IAAI,qEAAe;AACnB,IAAI,wDAAU,gBAAgB,uDAAS;AACvC;AACA,0BAA0B,wDAAU;AACpC,IAAI,+DAAS;AACb;AACA;AACA,aAAa,0CAA0C,gEAAU,qBAAqB;AACtF;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,IAAI,wDAAU;AACd;;AAEA;AACA;AACA,sCAAsC;AACtC;AACA;AACA;AACA,WAAW,YAAY;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA,QAAQ,mBAAmB;AAC3B,QAAQ,mBAAmB;AAC3B,QAAQ,mBAAmB;AAC3B,QAAQ,mBAAmB;AAC3B,QAAQ;AACR;AACA;AACA;AACA,QAAQ,mBAAmB;AAC3B,QAAQ,mBAAmB;AAC3B,QAAQ,mBAAmB;AAC3B,QAAQ,mBAAmB;AAC3B,QAAQ;AACR;AACA,QAAQ,kBAAkB;AAC1B,QAAQ,kBAAkB;AAC1B,QAAQ,kBAAkB;AAC1B,QAAQ,kBAAkB;AAC1B,QAAQ;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8DAA8D;AAC9D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B,0DAAY;AACzC;AACA;AACA;AACA,gCAAgC,0DAAY;AAC5C;AACA;AACA;AACA,4BAA4B,0DAAY;AACxC;AACA;AACA;AACA,+BAA+B,0DAAY;AAC3C;AACA;AACA;AACA,iCAAiC,0DAAY;AAC7C;AACA;AACA;AACA,iCAAiC,0DAAY;AAC7C;AACA;AACA;AACA,iCAAiC,0DAAY;AAC7C;AACA;AACA;AACA,gCAAgC,0DAAY;AAC5C;AACA;AACA;AACA,iCAAiC,0DAAY;AAC7C;AACA;AACA;AACA,+BAA+B,0DAAY;AAC3C;AACA;AACA;AACA,kCAAkC,0DAAY;AAC9C;AACA;AACA;AACA,mCAAmC,0DAAY;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,0DAA0D;AACvE,aAAa,gEAAgE;AAC7E,aAAa,wDAAwD;AACrE,aAAa,8DAA8D;AAC3E,aAAa,kEAAkE;AAC/E,aAAa,kEAAkE;AAC/E,aAAa,kEAAkE;AAC/E,aAAa,gEAAgE;AAC7E,aAAa,kEAAkE;AAC/E,aAAa,8DAA8D;AAC3E,aAAa,oEAAoE;AACjF;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,IAAI;AACb;AACA;AACA,UAAU,iBAAiB;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,wDAAU;AACV,IAAI,2DAAK;AACT,IAAI,wDAAU;AACd;AACA,wDAAU;AACV,IAAI,2DAAK;AACT,IAAI,wDAAU;AACd;AACA,wDAAU;AACV,IAAI,2DAAK;AACT,IAAI,wDAAU;AACd;AACA,wDAAU;AACV,IAAI,2DAAK;AACT,IAAI,wDAAU;AACd;AACA,wDAAU;AACV,IAAI,2DAAK;AACT,IAAI,wDAAU;AACd;AACA,wDAAU;AACV,IAAI,2DAAK;AACT,IAAI,wDAAU;AACd;AACA,wDAAU;AACV,IAAI,2DAAK;AACT,IAAI,wDAAU;AACd;AACA,wDAAU;AACV,IAAI,2DAAK;AACT,IAAI,wDAAU;AACd;AACA,wDAAU;AACV,IAAI,2DAAK;AACT,IAAI,wDAAU;AACd;AACA,wDAAU;AACV,IAAI,2DAAK;AACT,IAAI,wDAAU;AACd;AACA,wDAAU;AACV,IAAI,2DAAK;AACT,IAAI,wDAAU;AACd;AACA,wDAAU;AACV,IAAI,2DAAK;AACT,IAAI,wDAAU;AACd;AACA,wDAAU;AACV,IAAI,4DAAM;AACV,IAAI,wDAAU,gBAAgB,0DAAY;AAC1C;AACA,wDAAU;AACV,IAAI,4DAAM;AACV,IAAI,wDAAU,gBAAgB,0DAAY;AAC1C;AACA,wDAAU;AACV,IAAI,4DAAM;AACV,IAAI,wDAAU,gBAAgB,0DAAY;AAC1C;AACA,wDAAU;AACV,IAAI,4DAAM;AACV,IAAI,wDAAU,gBAAgB,0DAAY;AAC1C;AACA,wDAAU;AACV,IAAI,4DAAM;AACV,IAAI,wDAAU,gBAAgB,0DAAY;AAC1C;AACA,wDAAU;AACV,IAAI,4DAAM;AACV,IAAI,wDAAU,gBAAgB,0DAAY;AAC1C;AACA,wDAAU;AACV,IAAI,4DAAM;AACV,IAAI,wDAAU,gBAAgB,0DAAY;AAC1C;AACA,wDAAU;AACV,IAAI,4DAAM;AACV,IAAI,wDAAU,gBAAgB,0DAAY;AAC1C;AACA,wDAAU;AACV,IAAI,4DAAM;AACV,IAAI,wDAAU,gBAAgB,0DAAY;AAC1C;AACA,wDAAU;AACV,IAAI,4DAAM;AACV,IAAI,wDAAU,gBAAgB,0DAAY;AAC1C;AACA,wDAAU;AACV,IAAI,4DAAM;AACV,IAAI,wDAAU,gBAAgB,0DAAY;AAC1C;AACA,wDAAU;AACV,IAAI,4DAAM;AACV,IAAI,wDAAU;AACd;AACA,4BAA4B,wDAAU;AACtC,IAAI,+DAAS;AACb;AACA,KAAK;AACL,IAAI,wDAAU;AACd;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wDAAU;AACV,IAAI,2DAAK;AACT,IAAI,wDAAU;AACd;AACA,wDAAU;AACV,IAAI,2DAAK;AACT,IAAI,wDAAU;AACd;AACA,wDAAU;AACV,IAAI,2DAAK;AACT,IAAI,wDAAU;AACd;AACA,wDAAU;AACV,IAAI,2DAAK;AACT,IAAI,wDAAU;AACd;AACA,wDAAU;AACV,IAAI,2DAAK;AACT,IAAI,wDAAU;AACd;AACA,wDAAU;AACV,IAAI,2DAAK;AACT,IAAI,wDAAU;AACd;AACA,wDAAU;AACV,IAAI,2DAAK;AACT,IAAI,wDAAU;AACd;AACA,wDAAU;AACV,IAAI,2DAAK;AACT,IAAI,wDAAU;AACd;AACA,wDAAU;AACV,IAAI,2DAAK;AACT,IAAI,wDAAU;AACd;AACA,wDAAU;AACV,IAAI,2DAAK;AACT,IAAI,wDAAU;AACd;AACA,wDAAU;AACV,IAAI,2DAAK;AACT,IAAI,wDAAU;AACd;AACA,wDAAU;AACV,IAAI,2DAAK;AACT,IAAI,wDAAU;AACd;AACA,wDAAU;AACV,IAAI,2DAAK;AACT,IAAI,wDAAU;AACd;AACA,kBAAkB,wDAAU;AAC5B,IAAI,+DAAS,EAAE,6CAA6C;AAC5D;;AAEA;AACA;AACA,oEAAoE;AACpE;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC,0DAAY;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yCAAyC,gEAAS,EAAE,0CAA0C,GAAG,0DAAG,eAAe,mBAAmB;AACtI;AACA;AACA,wDAAU;AACV,IAAI,2DAAK;AACT,IAAI,wDAAU;AACd;AACA,wDAAU;AACV,IAAI,2DAAK;AACT,IAAI,wDAAU;AACd;AACA,wDAAU;AACV,IAAI,4DAAM;AACV,IAAI,wDAAU,gBAAgB,0DAAY;AAC1C;AACA,wCAAwC,wDAAU;AAClD,IAAI,+DAAS;AACb;AACA;AACA,aAAa,0CAA0C,gEAAU,4BAA4B;AAC7F;AACA,KAAK;AACL,IAAI,wDAAU;AACd;;AAEA;AACA;AACA;AACA,wCAAwC;AACxC;AACA;AACA;AACA,WAAW,YAAY;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B,0DAAY;AACzC;AACA;AACA;AACA,gCAAgC,0DAAY;AAC5C;AACA;AACA;AACA,4BAA4B,0DAAY;AACxC;AACA;AACA;AACA,+BAA+B,0DAAY;AAC3C;AACA;AACA;AACA,iCAAiC,0DAAY;AAC7C;AACA;AACA;AACA,iCAAiC,0DAAY;AAC7C;AACA;AACA;AACA,iCAAiC,0DAAY;AAC7C;AACA;AACA;AACA,gCAAgC,0DAAY;AAC5C;AACA;AACA;AACA,iCAAiC,0DAAY;AAC7C;AACA;AACA;AACA,+BAA+B,0DAAY;AAC3C;AACA;AACA;AACA,kCAAkC,0DAAY;AAC9C;AACA;AACA;AACA,kCAAkC,0DAAY;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iEAAiE,kDAAkD,EAAE;AACrH;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,0DAA0D;AACvE,aAAa,gEAAgE;AAC7E,aAAa,wDAAwD;AACrE,aAAa,8DAA8D;AAC3E,aAAa,kEAAkE;AAC/E,aAAa,kEAAkE;AAC/E,aAAa,kEAAkE;AAC/E,aAAa,gEAAgE;AAC7E,aAAa,kEAAkE;AAC/E,aAAa,8DAA8D;AAC3E,aAAa,oEAAoE;AACjF;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU,iBAAiB;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,wDAAU;AACV,IAAI,2DAAK;AACT,IAAI,wDAAU;AACd;AACA,wDAAU;AACV,IAAI,2DAAK;AACT,IAAI,wDAAU;AACd;AACA,wDAAU;AACV,IAAI,2DAAK;AACT,IAAI,wDAAU;AACd;AACA,wDAAU;AACV,IAAI,2DAAK;AACT,IAAI,wDAAU;AACd;AACA,wDAAU;AACV,IAAI,2DAAK;AACT,IAAI,wDAAU;AACd;AACA,wDAAU;AACV,IAAI,2DAAK;AACT,IAAI,wDAAU;AACd;AACA,wDAAU;AACV,IAAI,2DAAK;AACT,IAAI,wDAAU;AACd;AACA,wDAAU;AACV,IAAI,2DAAK;AACT,IAAI,wDAAU;AACd;AACA,wDAAU;AACV,IAAI,2DAAK;AACT,IAAI,wDAAU;AACd;AACA,wDAAU;AACV,IAAI,4DAAM;AACV,IAAI,wDAAU,gBAAgB,0DAAY;AAC1C;AACA,wDAAU;AACV,IAAI,4DAAM;AACV,IAAI,wDAAU,gBAAgB,0DAAY;AAC1C;AACA,wDAAU;AACV,IAAI,4DAAM;AACV,IAAI,wDAAU,gBAAgB,0DAAY;AAC1C;AACA,wDAAU;AACV,IAAI,4DAAM;AACV,IAAI,wDAAU,gBAAgB,0DAAY;AAC1C;AACA,wDAAU;AACV,IAAI,4DAAM;AACV,IAAI,wDAAU,gBAAgB,0DAAY;AAC1C;AACA,wDAAU;AACV,IAAI,4DAAM;AACV,IAAI,wDAAU,gBAAgB,0DAAY;AAC1C;AACA,wDAAU;AACV,IAAI,4DAAM;AACV,IAAI,wDAAU,gBAAgB,0DAAY;AAC1C;AACA,wDAAU;AACV,IAAI,4DAAM;AACV,IAAI,wDAAU,gBAAgB,0DAAY;AAC1C;AACA,wDAAU;AACV,IAAI,4DAAM;AACV,IAAI,wDAAU,gBAAgB,0DAAY;AAC1C;AACA,wDAAU;AACV,IAAI,4DAAM;AACV,IAAI,wDAAU,gBAAgB,0DAAY;AAC1C;AACA,wDAAU;AACV,IAAI,4DAAM;AACV,IAAI,wDAAU,gBAAgB,0DAAY;AAC1C;AACA,wDAAU;AACV,IAAI,4DAAM;AACV,IAAI,wDAAU;AACd;AACA,wDAAU;AACV,IAAI,qEAAe;AACnB,IAAI,wDAAU,gBAAgB,uDAAS;AACvC;AACA,wDAAU;AACV,IAAI,qEAAe;AACnB,IAAI,wDAAU,gBAAgB,uDAAS;AACvC;AACA,8BAA8B,wDAAU;AACxC,IAAI,+DAAS;AACb;AACA,KAAK;AACL,IAAI,wDAAU;AACd;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gCAAgC,0DAAY;AAC5C;AACA;AACA;AACA,kCAAkC,0DAAY;AAC9C;AACA;AACA;AACA,qCAAqC,0DAAY;AACjD;AACA;AACA;AACA,wBAAwB,0DAAY;AACpC;AACA;AACA;AACA,2BAA2B,0DAAY;AACvC;AACA;AACA;AACA,6BAA6B,0DAAY;AACzC;AACA;AACA;AACA,6BAA6B,0DAAY;AACzC;AACA;AACA;AACA,6BAA6B,0DAAY;AACzC;AACA;AACA;AACA,4BAA4B,0DAAY;AACxC;AACA;AACA;AACA,6BAA6B,0DAAY;AACzC;AACA;AACA;AACA,2BAA2B,0DAAY;AACvC;AACA;AACA;AACA,8BAA8B,0DAAY;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA,qCAAqC,mDAAmD;AACxF,yBAAyB;AACzB;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,wDAAU;AACV,IAAI,2DAAK;AACT,IAAI,wDAAU;AACd;AACA,wDAAU;AACV,IAAI,2DAAK;AACT,IAAI,wDAAU;AACd;AACA,wDAAU;AACV,IAAI,2DAAK;AACT,IAAI,wDAAU;AACd;AACA,wDAAU;AACV,IAAI,2DAAK;AACT,IAAI,wDAAU;AACd;AACA,wDAAU;AACV,IAAI,2DAAK;AACT,IAAI,wDAAU;AACd;AACA,wDAAU;AACV,IAAI,2DAAK;AACT,IAAI,wDAAU;AACd;AACA,wDAAU;AACV,IAAI,2DAAK;AACT,IAAI,wDAAU;AACd;AACA,wDAAU;AACV,IAAI,2DAAK;AACT,IAAI,wDAAU;AACd;AACA,wDAAU;AACV,IAAI,2DAAK;AACT,IAAI,wDAAU;AACd;AACA,wDAAU;AACV,IAAI,2DAAK;AACT,IAAI,wDAAU;AACd;AACA,wDAAU;AACV,IAAI,2DAAK;AACT,IAAI,wDAAU;AACd;AACA,wDAAU;AACV,IAAI,2DAAK;AACT,IAAI,wDAAU;AACd;AACA,wDAAU;AACV,IAAI,2DAAK;AACT,IAAI,wDAAU;AACd;AACA,wDAAU;AACV,IAAI,2DAAK;AACT,IAAI,wDAAU;AACd;AACA,wDAAU;AACV,IAAI,2DAAK;AACT,IAAI,wDAAU;AACd;AACA,wDAAU;AACV,IAAI,4DAAM;AACV,IAAI,wDAAU,gBAAgB,0DAAY;AAC1C;AACA,wDAAU;AACV,IAAI,4DAAM;AACV,IAAI,wDAAU,gBAAgB,0DAAY;AAC1C;AACA,wDAAU;AACV,IAAI,4DAAM;AACV,IAAI,wDAAU,gBAAgB,0DAAY;AAC1C;AACA,wDAAU;AACV,IAAI,4DAAM;AACV,IAAI,wDAAU,gBAAgB,0DAAY;AAC1C;AACA,wDAAU;AACV,IAAI,4DAAM;AACV,IAAI,wDAAU,gBAAgB,0DAAY;AAC1C;AACA,wDAAU;AACV,IAAI,4DAAM;AACV,IAAI,wDAAU,gBAAgB,0DAAY;AAC1C;AACA,wDAAU;AACV,IAAI,4DAAM;AACV,IAAI,wDAAU,gBAAgB,0DAAY;AAC1C;AACA,wDAAU;AACV,IAAI,4DAAM;AACV,IAAI,wDAAU,gBAAgB,0DAAY;AAC1C;AACA,wDAAU;AACV,IAAI,4DAAM;AACV,IAAI,wDAAU,gBAAgB,0DAAY;AAC1C;AACA,wDAAU;AACV,IAAI,4DAAM;AACV,IAAI,wDAAU,gBAAgB,0DAAY;AAC1C;AACA,wDAAU;AACV,IAAI,4DAAM;AACV,IAAI,wDAAU,gBAAgB,0DAAY;AAC1C;AACA,wDAAU;AACV,IAAI,4DAAM;AACV,IAAI,wDAAU,gBAAgB,0DAAY;AAC1C;AACA,gCAAgC,wDAAU;AAC1C,IAAI,+DAAS;AACb;AACA,KAAK;AACL,IAAI,wDAAU;AACd;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6CAA6C,wBAAwB;AACrE;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uDAAuD,2CAA2C;AAClG;AACA;AACA;AACA,UAAU,iBAAiB;AAC3B;AACA,gBAAgB,2BAA2B,oBAAoB,EAAE;AACjE;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,wDAAU;AACV,IAAI,2DAAK;AACT,IAAI,wDAAU;AACd;AACA,kBAAkB,wDAAU;AAC5B,IAAI,+DAAS;AACb;AACA,KAAK;AACL,IAAI,wDAAU;AACd;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,gCAAgC;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,0CAA0C;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,8BAA8B;AAC/B;AACA;AACA;AACA;AACA;AACA,CAAC,kDAAkD;AACnD;AACA;AACA;AACA,CAAC,8CAA8C;AAC/C;AACA;AACA;AACA;AACA;AACA,CAAC,4CAA4C;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,oDAAoD;AACrD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,wCAAwC;;AAEzC;AACA;AACA,yCAAyC,+CAAU;AACnD;AACA,SAAS;AACT,kBAAkB,0DAAG,gCAAgC,gEAAS,KAAK,kDAAa;AAChF,uCAAuC;AACvC;AACA;AACA;AACA;AACA,mCAAmC,gEAAS;AAC5C;AACA;AACA,kCAAkC,yDAAY;AAC9C,+CAA+C,gEAAS;AACxD;AACA,uBAAuB,+CAAE;AACzB;AACA,mBAAmB,uDAAU;AAC7B,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,8BAA8B,wEAAkB,EAAE,0CAA0C,wBAAwB,8DAAQ,iBAAiB,EAAE,0CAA0C;AACzL,cAAc,wDAAU;AACxB,IAAI,gEAAU,EAAE,qBAAqB;AACrC,IAAI,wDAAU;AACd;;AAEA;AACA,uBAAuB,eAAe;AACtC;AACA;AACA,yBAAyB,iBAAiB;AAC1C;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,CAAC,4DAA4D;AAC7D;AACA,oFAAoF;AACpF,2BAA2B;AAC3B;AACA,iCAAiC,4DAAc;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,wBAAwB;AACxB;AACA,oBAAoB;AACpB,SAAS;AACT;AACA,sBAAsB,UAAU,GAAG,YAAY;AAC/C,SAAS;AACT;AACA,kBAAkB,SAAS,IAAI,YAAY,GAAG,OAAO;AACrD;AACA;AACA;AACA,KAAK,gCAAgC,OAAO,sDAAQ,EAAE,GAAG,OAAO,oDAAM,iCAAiC,GAAG;AAC1G,KAAK,kBAAkB;AACvB,KAAK,oBAAoB;AACzB,KAAK,6BAA6B,OAAO,oDAAM,SAAS,uDAAS,IAAI;AACrE;AACA,oBAAoB,wDAAU;AAC9B,IAAI,gEAAU;AACd,IAAI,qDAAO,IAAI,8DAAQ,KAAK,qDAAO,IAAI,4DAAM;AAC7C,IAAI,qDAAO,IAAI,4DAAM,CAAC,uDAAS;AAC/B,IAAI,wDAAU;AACd;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+CAA+C,sDAAsD;AACrG,iBAAiB,mEAAmE;AACpF;AACA;AACA;AACA;AACA,kCAAkC,wDAAU;AAC5C,IAAI,8DAAQ,EAAE,4DAA4D;AAC1E;;AAEA;;AAEA;AACA;AACA;;AAEuuB;AACvuB;;;;;;;;;;;;;AC38IA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA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","file":"default~dashboard-dashboard-module-ngfactory~geolocalization-geolocalization-module-ngfactory-es2015.js","sourcesContent":["<div class='agm-info-window-content'>\n      <ng-content></ng-content>\n    </div>\n  ","\n              <div class='agm-map-container-inner sebm-google-map-container-inner'></div>\n              <div class='agm-map-content'>\n                <ng-content></ng-content>\n              </div>\n  ","import { __decorate, __metadata, __param, __awaiter } from 'tslib';\nimport { Injectable, NgZone, Input, Directive, EventEmitter, Output, Self, ElementRef, Component, Inject, PLATFORM_ID, QueryList, ContentChildren, forwardRef, ɵɵdefineInjectable, ɵɵinject, InjectionToken, Optional, LOCALE_ID, NgModule } from '@angular/core';\nimport { Observable, BehaviorSubject, from, timer, Subject, fromEventPattern, merge, ReplaySubject, bindCallback, of, throwError } from 'rxjs';\nimport { flatMap, sample, switchMap, map, shareReplay, distinctUntilChanged, takeUntil, startWith, skip, multicast } from 'rxjs/operators';\nimport { isPlatformServer } from '@angular/common';\n\nlet MapsAPILoader = class MapsAPILoader {\n};\nMapsAPILoader = __decorate([\n    Injectable()\n], MapsAPILoader);\n\n/**\n * Wrapper class that handles the communication with the Google Maps Javascript\n * API v3\n */\nlet GoogleMapsAPIWrapper = class GoogleMapsAPIWrapper {\n    constructor(_loader, _zone) {\n        this._loader = _loader;\n        this._zone = _zone;\n        this._map =\n            new Promise((resolve) => { this._mapResolver = resolve; });\n    }\n    createMap(el, mapOptions) {\n        return this._zone.runOutsideAngular(() => {\n            return this._loader.load().then(() => {\n                const map = new google.maps.Map(el, mapOptions);\n                this._mapResolver(map);\n                return;\n            });\n        });\n    }\n    setMapOptions(options) {\n        return this._zone.runOutsideAngular(() => {\n            this._map.then((m) => { m.setOptions(options); });\n        });\n    }\n    /**\n     * Creates a google map marker with the map context\n     */\n    createMarker(options = {}, addToMap = true) {\n        return this._zone.runOutsideAngular(() => {\n            return this._map.then((map) => {\n                if (addToMap) {\n                    options.map = map;\n                }\n                return new google.maps.Marker(options);\n            });\n        });\n    }\n    createInfoWindow(options) {\n        return this._zone.runOutsideAngular(() => {\n            return this._map.then(() => { return new google.maps.InfoWindow(options); });\n        });\n    }\n    /**\n     * Creates a google.map.Circle for the current map.\n     */\n    createCircle(options) {\n        return this._zone.runOutsideAngular(() => {\n            return this._map.then((map) => {\n                if (typeof options.strokePosition === 'string') {\n                    options.strokePosition = google.maps.StrokePosition[options.strokePosition];\n                }\n                options.map = map;\n                return new google.maps.Circle(options);\n            });\n        });\n    }\n    /**\n     * Creates a google.map.Rectangle for the current map.\n     */\n    createRectangle(options) {\n        return this._zone.runOutsideAngular(() => {\n            return this._map.then((map) => {\n                options.map = map;\n                return new google.maps.Rectangle(options);\n            });\n        });\n    }\n    createPolyline(options) {\n        return this._zone.runOutsideAngular(() => {\n            return this.getNativeMap().then((map) => {\n                let line = new google.maps.Polyline(options);\n                line.setMap(map);\n                return line;\n            });\n        });\n    }\n    createPolygon(options) {\n        return this._zone.runOutsideAngular(() => {\n            return this.getNativeMap().then((map) => {\n                let polygon = new google.maps.Polygon(options);\n                polygon.setMap(map);\n                return polygon;\n            });\n        });\n    }\n    /**\n     * Creates a new google.map.Data layer for the current map\n     */\n    createDataLayer(options) {\n        return this._zone.runOutsideAngular(() => {\n            return this._map.then(m => {\n                let data = new google.maps.Data(options);\n                data.setMap(m);\n                return data;\n            });\n        });\n    }\n    /**\n     * Creates a TransitLayer instance for a map\n     * @param {TransitLayerOptions} options - used for setting layer options\n     * @returns {Promise<TransitLayer>} a new transit layer object\n     */\n    createTransitLayer(options) {\n        return this._zone.runOutsideAngular(() => {\n            return this._map.then((map) => {\n                let newLayer = new google.maps.TransitLayer();\n                newLayer.setMap(options.visible ? map : null);\n                return newLayer;\n            });\n        });\n    }\n    /**\n     * Creates a BicyclingLayer instance for a map\n     * @param {BicyclingLayerOptions} options - used for setting layer options\n     * @returns {Promise<BicyclingLayer>} a new bicycling layer object\n     */\n    createBicyclingLayer(options) {\n        return this._zone.runOutsideAngular(() => {\n            return this._map.then((map) => {\n                let newLayer = new google.maps.BicyclingLayer();\n                newLayer.setMap(options.visible ? map : null);\n                return newLayer;\n            });\n        });\n    }\n    /**\n     * Determines if given coordinates are insite a Polygon path.\n     */\n    containsLocation(latLng, polygon) {\n        return google.maps.geometry.poly.containsLocation(latLng, polygon);\n    }\n    subscribeToMapEvent(eventName) {\n        return new Observable((observer) => {\n            this._map.then((m) => {\n                m.addListener(eventName, (arg) => { this._zone.run(() => observer.next(arg)); });\n            });\n        });\n    }\n    clearInstanceListeners() {\n        return this._zone.runOutsideAngular(() => {\n            this._map.then((map) => {\n                google.maps.event.clearInstanceListeners(map);\n            });\n        });\n    }\n    setCenter(latLng) {\n        return this._zone.runOutsideAngular(() => {\n            return this._map.then((map) => map.setCenter(latLng));\n        });\n    }\n    getZoom() {\n        return this._zone.runOutsideAngular(() => {\n            return this._map.then((map) => map.getZoom());\n        });\n    }\n    getBounds() {\n        return this._zone.runOutsideAngular(() => {\n            return this._map.then((map) => map.getBounds());\n        });\n    }\n    getMapTypeId() {\n        return this._zone.runOutsideAngular(() => {\n            return this._map.then((map) => map.getMapTypeId());\n        });\n    }\n    setZoom(zoom) {\n        return this._zone.runOutsideAngular(() => {\n            return this._map.then((map) => map.setZoom(zoom));\n        });\n    }\n    getCenter() {\n        return this._zone.runOutsideAngular(() => {\n            return this._map.then((map) => map.getCenter());\n        });\n    }\n    panTo(latLng) {\n        return this._zone.runOutsideAngular(() => {\n            return this._map.then((map) => map.panTo(latLng));\n        });\n    }\n    panBy(x, y) {\n        return this._zone.runOutsideAngular(() => {\n            return this._map.then((map) => map.panBy(x, y));\n        });\n    }\n    fitBounds(latLng, padding) {\n        return this._zone.runOutsideAngular(() => {\n            return this._map.then((map) => map.fitBounds(latLng, padding));\n        });\n    }\n    panToBounds(latLng, padding) {\n        return this._zone.runOutsideAngular(() => {\n            return this._map.then((map) => map.panToBounds(latLng, padding));\n        });\n    }\n    /**\n     * Returns the native Google Maps Map instance. Be careful when using this instance directly.\n     */\n    getNativeMap() { return this._map; }\n    /**\n     * Triggers the given event name on the map instance.\n     */\n    triggerMapEvent(eventName) {\n        return this._map.then((m) => google.maps.event.trigger(m, eventName));\n    }\n};\nGoogleMapsAPIWrapper.ctorParameters = () => [\n    { type: MapsAPILoader },\n    { type: NgZone }\n];\nGoogleMapsAPIWrapper = __decorate([\n    Injectable(),\n    __metadata(\"design:paramtypes\", [MapsAPILoader, NgZone])\n], GoogleMapsAPIWrapper);\n\n/**\n * This class manages Transit and Bicycling Layers for a Google Map instance.\n */\nlet LayerManager = class LayerManager {\n    constructor(_wrapper) {\n        this._wrapper = _wrapper;\n        this._layers = new Map();\n    }\n    /**\n     * Adds a transit layer to a map instance.\n     * @param {AgmTransitLayer} layer - a TransitLayer object\n     * @param {TransitLayerOptions} options - TransitLayerOptions options\n     * @returns void\n     */\n    addTransitLayer(layer, options) {\n        const newLayer = this._wrapper.createTransitLayer(options);\n        this._layers.set(layer, newLayer);\n    }\n    /**\n     * Adds a bicycling layer to a map instance.\n     * @param {AgmBicyclingLayer} layer - a bicycling layer object\n     * @param {BicyclingLayerOptions} options - BicyclingLayer options\n     * @returns void\n     */\n    addBicyclingLayer(layer, options) {\n        const newLayer = this._wrapper.createBicyclingLayer(options);\n        this._layers.set(layer, newLayer);\n    }\n    /**\n     * Deletes a map layer\n     * @param {AgmTransitLayer|AgmBicyclingLayer} layer - the layer to delete\n     * @returns  Promise<void>\n     */\n    deleteLayer(layer) {\n        return this._layers.get(layer).then(currentLayer => {\n            currentLayer.setMap(null);\n            this._layers.delete(layer);\n        });\n    }\n    /**\n     * Hide/Show a google map layer\n     * @param { AgmTransitLayer|AgmBicyclingLayer} layer - the layer to hide/show\n     * @param {TransitLayerOptions|BicyclingLayerOptions} options - used to set visibility of the layer\n     * @returns Promise<void>\n     */\n    toggleLayerVisibility(layer, options) {\n        return this._layers.get(layer).then(currentLayer => {\n            if (!options.visible) {\n                currentLayer.setMap(null);\n                return;\n            }\n            else {\n                return this._wrapper.getNativeMap().then((map) => {\n                    currentLayer.setMap(map);\n                });\n            }\n        });\n    }\n};\nLayerManager.ctorParameters = () => [\n    { type: GoogleMapsAPIWrapper }\n];\nLayerManager = __decorate([\n    Injectable(),\n    __metadata(\"design:paramtypes\", [GoogleMapsAPIWrapper])\n], LayerManager);\n\nlet layerId = 0;\n/*\n * This directive adds a bicycling layer to a google map instance\n * <agm-bicycling-layer [visible]=\"true|false\"> <agm-bicycling-layer>\n * */\nlet AgmBicyclingLayer = class AgmBicyclingLayer {\n    constructor(_manager) {\n        this._manager = _manager;\n        this._addedToManager = false;\n        this._id = (layerId++).toString();\n        /**\n         * Hide/show bicycling layer\n         */\n        this.visible = true;\n    }\n    ngOnInit() {\n        if (this._addedToManager) {\n            return;\n        }\n        this._manager.addBicyclingLayer(this, { visible: this.visible });\n        this._addedToManager = true;\n    }\n    ngOnChanges(changes) {\n        if (!this._addedToManager) {\n            return;\n        }\n        if (changes['visible'] != null) {\n            this._manager.toggleLayerVisibility(this, { visible: changes['visible'].currentValue });\n        }\n    }\n    /** @internal */\n    id() { return this._id; }\n    /** @internal */\n    toString() { return `AgmBicyclingLayer-${this._id.toString()}`; }\n    /** @internal */\n    ngOnDestroy() {\n        this._manager.deleteLayer(this);\n    }\n};\nAgmBicyclingLayer.ctorParameters = () => [\n    { type: LayerManager }\n];\n__decorate([\n    Input(),\n    __metadata(\"design:type\", Object)\n], AgmBicyclingLayer.prototype, \"visible\", void 0);\nAgmBicyclingLayer = __decorate([\n    Directive({\n        selector: 'agm-bicycling-layer',\n    }),\n    __metadata(\"design:paramtypes\", [LayerManager])\n], AgmBicyclingLayer);\n\nlet CircleManager = class CircleManager {\n    constructor(_apiWrapper, _zone) {\n        this._apiWrapper = _apiWrapper;\n        this._zone = _zone;\n        this._circles = new Map();\n    }\n    addCircle(circle) {\n        this._circles.set(circle, this._apiWrapper.createCircle({\n            center: { lat: circle.latitude, lng: circle.longitude },\n            clickable: circle.clickable,\n            draggable: circle.draggable,\n            editable: circle.editable,\n            fillColor: circle.fillColor,\n            fillOpacity: circle.fillOpacity,\n            radius: circle.radius,\n            strokeColor: circle.strokeColor,\n            strokeOpacity: circle.strokeOpacity,\n            strokePosition: circle.strokePosition,\n            strokeWeight: circle.strokeWeight,\n            visible: circle.visible,\n            zIndex: circle.zIndex,\n        }));\n    }\n    /**\n     * Removes the given circle from the map.\n     */\n    removeCircle(circle) {\n        return this._circles.get(circle).then((c) => {\n            c.setMap(null);\n            this._circles.delete(circle);\n        });\n    }\n    setOptions(circle, options) {\n        return this._circles.get(circle).then((c) => {\n            if (typeof options.strokePosition === 'string') {\n                options.strokePosition = google.maps.StrokePosition[options.strokePosition];\n            }\n            c.setOptions(options);\n        });\n    }\n    getBounds(circle) {\n        return this._circles.get(circle).then((c) => c.getBounds());\n    }\n    getCenter(circle) {\n        return this._circles.get(circle).then((c) => c.getCenter());\n    }\n    getRadius(circle) {\n        return this._circles.get(circle).then((c) => c.getRadius());\n    }\n    setCenter(circle) {\n        return this._circles.get(circle).then((c) => { return c.setCenter({ lat: circle.latitude, lng: circle.longitude }); });\n    }\n    setEditable(circle) {\n        return this._circles.get(circle).then((c) => { return c.setEditable(circle.editable); });\n    }\n    setDraggable(circle) {\n        return this._circles.get(circle).then((c) => { return c.setDraggable(circle.draggable); });\n    }\n    setVisible(circle) {\n        return this._circles.get(circle).then((c) => { return c.setVisible(circle.visible); });\n    }\n    setRadius(circle) {\n        return this._circles.get(circle).then((c) => { return c.setRadius(circle.radius); });\n    }\n    getNativeCircle(circle) {\n        return this._circles.get(circle);\n    }\n    createEventObservable(eventName, circle) {\n        return new Observable((observer) => {\n            let listener = null;\n            this._circles.get(circle).then((c) => {\n                listener = c.addListener(eventName, (e) => this._zone.run(() => observer.next(e)));\n            });\n            return () => {\n                if (listener !== null) {\n                    listener.remove();\n                }\n            };\n        });\n    }\n};\nCircleManager.ctorParameters = () => [\n    { type: GoogleMapsAPIWrapper },\n    { type: NgZone }\n];\nCircleManager = __decorate([\n    Injectable(),\n    __metadata(\"design:paramtypes\", [GoogleMapsAPIWrapper, NgZone])\n], CircleManager);\n\nvar AgmCircle_1;\nlet AgmCircle = AgmCircle_1 = class AgmCircle {\n    constructor(_manager) {\n        this._manager = _manager;\n        /**\n         * Indicates whether this Circle handles mouse events. Defaults to true.\n         */\n        this.clickable = true;\n        /**\n         * If set to true, the user can drag this circle over the map. Defaults to false.\n         */\n        // tslint:disable-next-line:no-input-rename\n        this.draggable = false;\n        /**\n         * If set to true, the user can edit this circle by dragging the control points shown at\n         * the center and around the circumference of the circle. Defaults to false.\n         */\n        this.editable = false;\n        /**\n         * The radius in meters on the Earth's surface.\n         */\n        this.radius = 0;\n        /**\n         * The stroke position. Defaults to CENTER.\n         * This property is not supported on Internet Explorer 8 and earlier.\n         */\n        this.strokePosition = 'CENTER';\n        /**\n         * The stroke width in pixels.\n         */\n        this.strokeWeight = 0;\n        /**\n         * Whether this circle is visible on the map. Defaults to true.\n         */\n        this.visible = true;\n        /**\n         * This event is fired when the circle's center is changed.\n         */\n        this.centerChange = new EventEmitter();\n        /**\n         * This event emitter gets emitted when the user clicks on the circle.\n         */\n        this.circleClick = new EventEmitter();\n        /**\n         * This event emitter gets emitted when the user clicks on the circle.\n         */\n        this.circleDblClick = new EventEmitter();\n        /**\n         * This event is repeatedly fired while the user drags the circle.\n         */\n        this.drag = new EventEmitter();\n        /**\n         * This event is fired when the user stops dragging the circle.\n         */\n        this.dragEnd = new EventEmitter();\n        /**\n         * This event is fired when the user starts dragging the circle.\n         */\n        this.dragStart = new EventEmitter();\n        /**\n         * This event is fired when the DOM mousedown event is fired on the circle.\n         */\n        this.mouseDown = new EventEmitter();\n        /**\n         * This event is fired when the DOM mousemove event is fired on the circle.\n         */\n        this.mouseMove = new EventEmitter();\n        /**\n         * This event is fired on circle mouseout.\n         */\n        this.mouseOut = new EventEmitter();\n        /**\n         * This event is fired on circle mouseover.\n         */\n        this.mouseOver = new EventEmitter();\n        /**\n         * This event is fired when the DOM mouseup event is fired on the circle.\n         */\n        this.mouseUp = new EventEmitter();\n        /**\n         * This event is fired when the circle's radius is changed.\n         */\n        this.radiusChange = new EventEmitter();\n        /**\n         * This event is fired when the circle is right-clicked on.\n         */\n        this.rightClick = new EventEmitter();\n        this._circleAddedToManager = false;\n        this._eventSubscriptions = [];\n    }\n    /** @internal */\n    ngOnInit() {\n        this._manager.addCircle(this);\n        this._circleAddedToManager = true;\n        this._registerEventListeners();\n    }\n    /** @internal */\n    ngOnChanges(changes) {\n        if (!this._circleAddedToManager) {\n            return;\n        }\n        if (changes['latitude'] || changes['longitude']) {\n            this._manager.setCenter(this);\n        }\n        if (changes['editable']) {\n            this._manager.setEditable(this);\n        }\n        if (changes['draggable']) {\n            this._manager.setDraggable(this);\n        }\n        if (changes['visible']) {\n            this._manager.setVisible(this);\n        }\n        if (changes['radius']) {\n            this._manager.setRadius(this);\n        }\n        this._updateCircleOptionsChanges(changes);\n    }\n    _updateCircleOptionsChanges(changes) {\n        let options = {};\n        let optionKeys = Object.keys(changes).filter(k => AgmCircle_1._mapOptions.indexOf(k) !== -1);\n        optionKeys.forEach((k) => { options[k] = changes[k].currentValue; });\n        if (optionKeys.length > 0) {\n            this._manager.setOptions(this, options);\n        }\n    }\n    _registerEventListeners() {\n        let events = new Map();\n        events.set('center_changed', this.centerChange);\n        events.set('click', this.circleClick);\n        events.set('dblclick', this.circleDblClick);\n        events.set('drag', this.drag);\n        events.set('dragend', this.dragEnd);\n        events.set('dragstart', this.dragStart);\n        events.set('mousedown', this.mouseDown);\n        events.set('mousemove', this.mouseMove);\n        events.set('mouseout', this.mouseOut);\n        events.set('mouseover', this.mouseOver);\n        events.set('mouseup', this.mouseUp);\n        events.set('radius_changed', this.radiusChange);\n        events.set('rightclick', this.rightClick);\n        events.forEach((eventEmitter, eventName) => {\n            this._eventSubscriptions.push(this._manager.createEventObservable(eventName, this).subscribe((value) => {\n                switch (eventName) {\n                    case 'radius_changed':\n                        this._manager.getRadius(this).then((radius) => eventEmitter.emit(radius));\n                        break;\n                    case 'center_changed':\n                        this._manager.getCenter(this).then((center) => eventEmitter.emit({ lat: center.lat(), lng: center.lng() }));\n                        break;\n                    default:\n                        eventEmitter.emit({ coords: { lat: value.latLng.lat(), lng: value.latLng.lng() } });\n                }\n            }));\n        });\n    }\n    /** @internal */\n    ngOnDestroy() {\n        this._eventSubscriptions.forEach(function (s) { s.unsubscribe(); });\n        this._eventSubscriptions = null;\n        this._manager.removeCircle(this);\n    }\n    /**\n     * Gets the LatLngBounds of this Circle.\n     */\n    getBounds() { return this._manager.getBounds(this); }\n    getCenter() { return this._manager.getCenter(this); }\n};\nAgmCircle._mapOptions = [\n    'fillColor', 'fillOpacity', 'strokeColor', 'strokeOpacity', 'strokePosition', 'strokeWeight',\n    'visible', 'zIndex', 'clickable',\n];\nAgmCircle.ctorParameters = () => [\n    { type: CircleManager }\n];\n__decorate([\n    Input(),\n    __metadata(\"design:type\", Number)\n], AgmCircle.prototype, \"latitude\", void 0);\n__decorate([\n    Input(),\n    __metadata(\"design:type\", Number)\n], AgmCircle.prototype, \"longitude\", void 0);\n__decorate([\n    Input(),\n    __metadata(\"design:type\", Object)\n], AgmCircle.prototype, \"clickable\", void 0);\n__decorate([\n    Input('circleDraggable'),\n    __metadata(\"design:type\", Object)\n], AgmCircle.prototype, \"draggable\", void 0);\n__decorate([\n    Input(),\n    __metadata(\"design:type\", Object)\n], AgmCircle.prototype, \"editable\", void 0);\n__decorate([\n    Input(),\n    __metadata(\"design:type\", String)\n], AgmCircle.prototype, \"fillColor\", void 0);\n__decorate([\n    Input(),\n    __metadata(\"design:type\", Number)\n], AgmCircle.prototype, \"fillOpacity\", void 0);\n__decorate([\n    Input(),\n    __metadata(\"design:type\", Object)\n], AgmCircle.prototype, \"radius\", void 0);\n__decorate([\n    Input(),\n    __metadata(\"design:type\", String)\n], AgmCircle.prototype, \"strokeColor\", void 0);\n__decorate([\n    Input(),\n    __metadata(\"design:type\", Number)\n], AgmCircle.prototype, \"strokeOpacity\", void 0);\n__decorate([\n    Input(),\n    __metadata(\"design:type\", String)\n], AgmCircle.prototype, \"strokePosition\", void 0);\n__decorate([\n    Input(),\n    __metadata(\"design:type\", Object)\n], AgmCircle.prototype, \"strokeWeight\", void 0);\n__decorate([\n    Input(),\n    __metadata(\"design:type\", Object)\n], AgmCircle.prototype, \"visible\", void 0);\n__decorate([\n    Input(),\n    __metadata(\"design:type\", Number)\n], AgmCircle.prototype, \"zIndex\", void 0);\n__decorate([\n    Output(),\n    __metadata(\"design:type\", EventEmitter)\n], AgmCircle.prototype, \"centerChange\", void 0);\n__decorate([\n    Output(),\n    __metadata(\"design:type\", EventEmitter)\n], AgmCircle.prototype, \"circleClick\", void 0);\n__decorate([\n    Output(),\n    __metadata(\"design:type\", EventEmitter)\n], AgmCircle.prototype, \"circleDblClick\", void 0);\n__decorate([\n    Output(),\n    __metadata(\"design:type\", EventEmitter)\n], AgmCircle.prototype, \"drag\", void 0);\n__decorate([\n    Output(),\n    __metadata(\"design:type\", EventEmitter)\n], AgmCircle.prototype, \"dragEnd\", void 0);\n__decorate([\n    Output(),\n    __metadata(\"design:type\", EventEmitter)\n], AgmCircle.prototype, \"dragStart\", void 0);\n__decorate([\n    Output(),\n    __metadata(\"design:type\", EventEmitter)\n], AgmCircle.prototype, \"mouseDown\", void 0);\n__decorate([\n    Output(),\n    __metadata(\"design:type\", EventEmitter)\n], AgmCircle.prototype, \"mouseMove\", void 0);\n__decorate([\n    Output(),\n    __metadata(\"design:type\", EventEmitter)\n], AgmCircle.prototype, \"mouseOut\", void 0);\n__decorate([\n    Output(),\n    __metadata(\"design:type\", EventEmitter)\n], AgmCircle.prototype, \"mouseOver\", void 0);\n__decorate([\n    Output(),\n    __metadata(\"design:type\", EventEmitter)\n], AgmCircle.prototype, \"mouseUp\", void 0);\n__decorate([\n    Output(),\n    __metadata(\"design:type\", EventEmitter)\n], AgmCircle.prototype, \"radiusChange\", void 0);\n__decorate([\n    Output(),\n    __metadata(\"design:type\", EventEmitter)\n], AgmCircle.prototype, \"rightClick\", void 0);\nAgmCircle = AgmCircle_1 = __decorate([\n    Directive({\n        selector: 'agm-circle',\n    }),\n    __metadata(\"design:paramtypes\", [CircleManager])\n], AgmCircle);\n\n/**\n * Manages all Data Layers for a Google Map instance.\n */\nlet DataLayerManager = class DataLayerManager {\n    constructor(_wrapper, _zone) {\n        this._wrapper = _wrapper;\n        this._zone = _zone;\n        this._layers = new Map();\n    }\n    /**\n     * Adds a new Data Layer to the map.\n     */\n    addDataLayer(layer) {\n        const newLayer = this._wrapper.createDataLayer({\n            style: layer.style,\n        })\n            .then(d => {\n            if (layer.geoJson) {\n                this.getDataFeatures(d, layer.geoJson).then(features => d.features = features);\n            }\n            return d;\n        });\n        this._layers.set(layer, newLayer);\n    }\n    deleteDataLayer(layer) {\n        this._layers.get(layer).then(l => {\n            l.setMap(null);\n            this._layers.delete(layer);\n        });\n    }\n    updateGeoJson(layer, geoJson) {\n        this._layers.get(layer).then(l => {\n            l.forEach(function (feature) {\n                l.remove(feature);\n                var index = l.features.indexOf(feature, 0);\n                if (index > -1) {\n                    l.features.splice(index, 1);\n                }\n            });\n            this.getDataFeatures(l, geoJson).then(features => l.features = features);\n        });\n    }\n    setDataOptions(layer, options) {\n        this._layers.get(layer).then(l => {\n            l.setControlPosition(options.controlPosition);\n            l.setControls(options.controls);\n            l.setDrawingMode(options.drawingMode);\n            l.setStyle(options.style);\n        });\n    }\n    /**\n     * Creates a Google Maps event listener for the given DataLayer as an Observable\n     */\n    createEventObservable(eventName, layer) {\n        return new Observable((observer) => {\n            this._layers.get(layer).then((d) => {\n                d.addListener(eventName, (e) => this._zone.run(() => observer.next(e)));\n            });\n        });\n    }\n    /**\n     * Extract features from a geoJson using google.maps Data Class\n     * @param d : google.maps.Data class instance\n     * @param geoJson : url or geojson object\n     */\n    getDataFeatures(d, geoJson) {\n        return new Promise((resolve, reject) => {\n            if (typeof geoJson === 'object') {\n                try {\n                    const features = d.addGeoJson(geoJson);\n                    resolve(features);\n                }\n                catch (e) {\n                    reject(e);\n                }\n            }\n            else if (typeof geoJson === 'string') {\n                d.loadGeoJson(geoJson, null, resolve);\n            }\n            else {\n                reject(`Impossible to extract features from geoJson: wrong argument type`);\n            }\n        });\n    }\n};\nDataLayerManager.ctorParameters = () => [\n    { type: GoogleMapsAPIWrapper },\n    { type: NgZone }\n];\nDataLayerManager = __decorate([\n    Injectable(),\n    __metadata(\"design:paramtypes\", [GoogleMapsAPIWrapper, NgZone])\n], DataLayerManager);\n\nvar AgmDataLayer_1;\nlet layerId$1 = 0;\n/**\n * AgmDataLayer enables the user to add data layers to the map.\n *\n * ### Example\n * ```typescript\n * import { Component } from 'angular2/core';\n * import { AgmMap, AgmDataLayer } from\n * 'angular-google-maps/core';\n *\n * @Component({\n *  selector: 'my-map-cmp',\n *  directives: [AgmMap, AgmDataLayer],\n *  styles: [`\n *    .agm-container {\n *      height: 300px;\n *    }\n * `],\n *  template: `\n * <agm-map [latitude]=\"lat\" [longitude]=\"lng\" [zoom]=\"zoom\">\n * \t  <agm-data-layer [geoJson]=\"geoJsonObject\" (layerClick)=\"clicked($event)\" [style]=\"styleFunc\">\n * \t  </agm-data-layer>\n * </agm-map>\n *  `\n * })\n * export class MyMapCmp {\n *   lat: number = -25.274449;\n *   lng: number = 133.775060;\n *   zoom: number = 5;\n *\n * clicked(clickEvent) {\n *    console.log(clickEvent);\n *  }\n *\n *  styleFunc(feature) {\n *    return ({\n *      clickable: false,\n *      fillColor: feature.getProperty('color'),\n *      strokeWeight: 1\n *    });\n *  }\n *\n *  geoJsonObject: Object = {\n *    \"type\": \"FeatureCollection\",\n *    \"features\": [\n *      {\n *        \"type\": \"Feature\",\n *        \"properties\": {\n *          \"letter\": \"G\",\n *          \"color\": \"blue\",\n *          \"rank\": \"7\",\n *          \"ascii\": \"71\"\n *        },\n *        \"geometry\": {\n *          \"type\": \"Polygon\",\n *          \"coordinates\": [\n *            [\n *              [123.61, -22.14], [122.38, -21.73], [121.06, -21.69], [119.66, -22.22], [119.00, -23.40],\n *              [118.65, -24.76], [118.43, -26.07], [118.78, -27.56], [119.22, -28.57], [120.23, -29.49],\n *              [121.77, -29.87], [123.57, -29.64], [124.45, -29.03], [124.71, -27.95], [124.80, -26.70],\n *              [124.80, -25.60], [123.61, -25.64], [122.56, -25.64], [121.72, -25.72], [121.81, -26.62],\n *              [121.86, -26.98], [122.60, -26.90], [123.57, -27.05], [123.57, -27.68], [123.35, -28.18],\n *              [122.51, -28.38], [121.77, -28.26], [121.02, -27.91], [120.49, -27.21], [120.14, -26.50],\n *              [120.10, -25.64], [120.27, -24.52], [120.67, -23.68], [121.72, -23.32], [122.43, -23.48],\n *              [123.04, -24.04], [124.54, -24.28], [124.58, -23.20], [123.61, -22.14]\n *            ]\n *          ]\n *        }\n *      },\n *      {\n *        \"type\": \"Feature\",\n *        \"properties\": {\n *          \"letter\": \"o\",\n *          \"color\": \"red\",\n *          \"rank\": \"15\",\n *          \"ascii\": \"111\"\n *        },\n *        \"geometry\": {\n *          \"type\": \"Polygon\",\n *          \"coordinates\": [\n *            [\n *              [128.84, -25.76], [128.18, -25.60], [127.96, -25.52], [127.88, -25.52], [127.70, -25.60],\n *              [127.26, -25.79], [126.60, -26.11], [126.16, -26.78], [126.12, -27.68], [126.21, -28.42],\n *              [126.69, -29.49], [127.74, -29.80], [128.80, -29.72], [129.41, -29.03], [129.72, -27.95],\n *              [129.68, -27.21], [129.33, -26.23], [128.84, -25.76]\n *            ],\n *            [\n *              [128.45, -27.44], [128.32, -26.94], [127.70, -26.82], [127.35, -27.05], [127.17, -27.80],\n *              [127.57, -28.22], [128.10, -28.42], [128.49, -27.80], [128.45, -27.44]\n *            ]\n *          ]\n *        }\n *      },\n *      {\n *        \"type\": \"Feature\",\n *        \"properties\": {\n *          \"letter\": \"o\",\n *          \"color\": \"yellow\",\n *          \"rank\": \"15\",\n *          \"ascii\": \"111\"\n *        },\n *        \"geometry\": {\n *          \"type\": \"Polygon\",\n *          \"coordinates\": [\n *            [\n *              [131.87, -25.76], [131.35, -26.07], [130.95, -26.78], [130.82, -27.64], [130.86, -28.53],\n *              [131.26, -29.22], [131.92, -29.76], [132.45, -29.87], [133.06, -29.76], [133.72, -29.34],\n *              [134.07, -28.80], [134.20, -27.91], [134.07, -27.21], [133.81, -26.31], [133.37, -25.83],\n *              [132.71, -25.64], [131.87, -25.76]\n *            ],\n *            [\n *              [133.15, -27.17], [132.71, -26.86], [132.09, -26.90], [131.74, -27.56], [131.79, -28.26],\n *              [132.36, -28.45], [132.93, -28.34], [133.15, -27.76], [133.15, -27.17]\n *            ]\n *          ]\n *        }\n *      },\n *      {\n *        \"type\": \"Feature\",\n *        \"properties\": {\n *          \"letter\": \"g\",\n *          \"color\": \"blue\",\n *          \"rank\": \"7\",\n *          \"ascii\": \"103\"\n *        },\n *        \"geometry\": {\n *          \"type\": \"Polygon\",\n *          \"coordinates\": [\n *            [\n *              [138.12, -25.04], [136.84, -25.16], [135.96, -25.36], [135.26, -25.99], [135, -26.90],\n *              [135.04, -27.91], [135.26, -28.88], [136.05, -29.45], [137.02, -29.49], [137.81, -29.49],\n *              [137.94, -29.99], [137.90, -31.20], [137.85, -32.24], [136.88, -32.69], [136.45, -32.36],\n *              [136.27, -31.80], [134.95, -31.84], [135.17, -32.99], [135.52, -33.43], [136.14, -33.76],\n *              [137.06, -33.83], [138.12, -33.65], [138.86, -33.21], [139.30, -32.28], [139.30, -31.24],\n *              [139.30, -30.14], [139.21, -28.96], [139.17, -28.22], [139.08, -27.41], [139.08, -26.47],\n *              [138.99, -25.40], [138.73, -25.00], [138.12, -25.04]\n *            ],\n *            [\n *              [137.50, -26.54], [136.97, -26.47], [136.49, -26.58], [136.31, -27.13], [136.31, -27.72],\n *              [136.58, -27.99], [137.50, -28.03], [137.68, -27.68], [137.59, -26.78], [137.50, -26.54]\n *            ]\n *          ]\n *        }\n *      },\n *      {\n *        \"type\": \"Feature\",\n *        \"properties\": {\n *          \"letter\": \"l\",\n *          \"color\": \"green\",\n *          \"rank\": \"12\",\n *          \"ascii\": \"108\"\n *        },\n *        \"geometry\": {\n *          \"type\": \"Polygon\",\n *          \"coordinates\": [\n *            [\n *              [140.14, -21.04], [140.31, -29.42], [141.67, -29.49], [141.59, -20.92], [140.14, -21.04]\n *            ]\n *          ]\n *        }\n *      },\n *      {\n *        \"type\": \"Feature\",\n *        \"properties\": {\n *          \"letter\": \"e\",\n *          \"color\": \"red\",\n *          \"rank\": \"5\",\n *          \"ascii\": \"101\"\n *        },\n *        \"geometry\": {\n *          \"type\": \"Polygon\",\n *          \"coordinates\": [\n *            [\n *              [144.14, -27.41], [145.67, -27.52], [146.86, -27.09], [146.82, -25.64], [146.25, -25.04],\n *              [145.45, -24.68], [144.66, -24.60], [144.09, -24.76], [143.43, -25.08], [142.99, -25.40],\n *              [142.64, -26.03], [142.64, -27.05], [142.64, -28.26], [143.30, -29.11], [144.18, -29.57],\n *              [145.41, -29.64], [146.46, -29.19], [146.64, -28.72], [146.82, -28.14], [144.84, -28.42],\n *              [144.31, -28.26], [144.14, -27.41]\n *            ],\n *            [\n *              [144.18, -26.39], [144.53, -26.58], [145.19, -26.62], [145.72, -26.35], [145.81, -25.91],\n *              [145.41, -25.68], [144.97, -25.68], [144.49, -25.64], [144, -25.99], [144.18, -26.39]\n *            ]\n *          ]\n *        }\n *      }\n *    ]\n *  };\n * }\n * ```\n */\nlet AgmDataLayer = AgmDataLayer_1 = class AgmDataLayer {\n    constructor(_manager) {\n        this._manager = _manager;\n        this._addedToManager = false;\n        this._id = (layerId$1++).toString();\n        this._subscriptions = [];\n        /**\n         * This event is fired when a feature in the layer is clicked.\n         */\n        this.layerClick = new EventEmitter();\n        /**\n         * The geoJson to be displayed\n         */\n        this.geoJson = null;\n    }\n    ngOnInit() {\n        if (this._addedToManager) {\n            return;\n        }\n        this._manager.addDataLayer(this);\n        this._addedToManager = true;\n        this._addEventListeners();\n    }\n    _addEventListeners() {\n        const listeners = [\n            { name: 'click', handler: (ev) => this.layerClick.emit(ev) },\n        ];\n        listeners.forEach((obj) => {\n            const os = this._manager.createEventObservable(obj.name, this).subscribe(obj.handler);\n            this._subscriptions.push(os);\n        });\n    }\n    /** @internal */\n    id() { return this._id; }\n    /** @internal */\n    toString() { return `AgmDataLayer-${this._id.toString()}`; }\n    /** @internal */\n    ngOnDestroy() {\n        this._manager.deleteDataLayer(this);\n        // unsubscribe all registered observable subscriptions\n        this._subscriptions.forEach(s => s.unsubscribe());\n    }\n    /** @internal */\n    ngOnChanges(changes) {\n        if (!this._addedToManager) {\n            return;\n        }\n        var geoJsonChange = changes['geoJson'];\n        if (geoJsonChange) {\n            this._manager.updateGeoJson(this, geoJsonChange.currentValue);\n        }\n        let dataOptions = {};\n        AgmDataLayer_1._dataOptionsAttributes.forEach(k => dataOptions[k] = changes.hasOwnProperty(k) ? changes[k].currentValue : this[k]);\n        this._manager.setDataOptions(this, dataOptions);\n    }\n};\nAgmDataLayer._dataOptionsAttributes = ['style'];\nAgmDataLayer.ctorParameters = () => [\n    { type: DataLayerManager }\n];\n__decorate([\n    Output(),\n    __metadata(\"design:type\", EventEmitter)\n], AgmDataLayer.prototype, \"layerClick\", void 0);\n__decorate([\n    Input(),\n    __metadata(\"design:type\", Object)\n], AgmDataLayer.prototype, \"geoJson\", void 0);\n__decorate([\n    Input(),\n    __metadata(\"design:type\", Function)\n], AgmDataLayer.prototype, \"style\", void 0);\nAgmDataLayer = AgmDataLayer_1 = __decorate([\n    Directive({\n        selector: 'agm-data-layer',\n    }),\n    __metadata(\"design:paramtypes\", [DataLayerManager])\n], AgmDataLayer);\n\n/**\n * Class to implement when you what to be able to make it work with the auto fit bounds feature\n * of AGM.\n */\nclass FitBoundsAccessor {\n}\n/**\n * The FitBoundsService is responsible for computing the bounds of the a single map.\n */\nlet FitBoundsService = class FitBoundsService {\n    constructor(loader) {\n        this._boundsChangeSampleTime$ = new BehaviorSubject(200);\n        this._includeInBounds$ = new BehaviorSubject(new Map());\n        this.bounds$ = from(loader.load()).pipe(flatMap(() => this._includeInBounds$), sample(this._boundsChangeSampleTime$.pipe(switchMap(time => timer(0, time)))), map(includeInBounds => this._generateBounds(includeInBounds)), shareReplay(1));\n    }\n    _generateBounds(includeInBounds) {\n        const bounds = new google.maps.LatLngBounds();\n        includeInBounds.forEach(b => bounds.extend(b));\n        return bounds;\n    }\n    addToBounds(latLng) {\n        const id = this._createIdentifier(latLng);\n        if (this._includeInBounds$.value.has(id)) {\n            return;\n        }\n        const map = this._includeInBounds$.value;\n        map.set(id, latLng);\n        this._includeInBounds$.next(map);\n    }\n    removeFromBounds(latLng) {\n        const map = this._includeInBounds$.value;\n        map.delete(this._createIdentifier(latLng));\n        this._includeInBounds$.next(map);\n    }\n    changeFitBoundsChangeSampleTime(timeMs) {\n        this._boundsChangeSampleTime$.next(timeMs);\n    }\n    getBounds$() {\n        return this.bounds$;\n    }\n    _createIdentifier(latLng) {\n        return `${latLng.lat}+${latLng.lng}`;\n    }\n};\nFitBoundsService.ctorParameters = () => [\n    { type: MapsAPILoader }\n];\nFitBoundsService = __decorate([\n    Injectable(),\n    __metadata(\"design:paramtypes\", [MapsAPILoader])\n], FitBoundsService);\n\n/**\n * Adds the given directive to the auto fit bounds feature when the value is true.\n * To make it work with you custom AGM component, you also have to implement the {@link FitBoundsAccessor} abstract class.\n * @example\n * <agm-marker [agmFitBounds]=\"true\"></agm-marker>\n */\nlet AgmFitBounds = class AgmFitBounds {\n    constructor(_fitBoundsAccessor, _fitBoundsService) {\n        this._fitBoundsAccessor = _fitBoundsAccessor;\n        this._fitBoundsService = _fitBoundsService;\n        /**\n         * If the value is true, the element gets added to the bounds of the map.\n         * Default: true.\n         */\n        this.agmFitBounds = true;\n        this._destroyed$ = new Subject();\n        this._latestFitBoundsDetails = null;\n    }\n    /**\n     * @internal\n     */\n    ngOnChanges() {\n        this._updateBounds();\n    }\n    /**\n     * @internal\n     */\n    ngOnInit() {\n        this._fitBoundsAccessor\n            .getFitBoundsDetails$()\n            .pipe(distinctUntilChanged((x, y) => x.latLng.lat === y.latLng.lat && x.latLng.lng === y.latLng.lng), takeUntil(this._destroyed$))\n            .subscribe(details => this._updateBounds(details));\n    }\n    /*\n     Either the location changed, or visible status changed.\n     Possible state changes are\n     invisible -> visible\n     visible -> invisible\n     visible -> visible (new location)\n    */\n    _updateBounds(newFitBoundsDetails) {\n        // either visibility will change, or location, so remove the old one anyway\n        if (this._latestFitBoundsDetails) {\n            this._fitBoundsService.removeFromBounds(this._latestFitBoundsDetails.latLng);\n            // don't set latestFitBoundsDetails to null, because we can toggle visibility from\n            // true -> false -> true, in which case we still need old value cached here\n        }\n        if (newFitBoundsDetails) {\n            this._latestFitBoundsDetails = newFitBoundsDetails;\n        }\n        if (!this._latestFitBoundsDetails) {\n            return;\n        }\n        if (this.agmFitBounds === true) {\n            this._fitBoundsService.addToBounds(this._latestFitBoundsDetails.latLng);\n        }\n    }\n    /**\n     * @internal\n     */\n    ngOnDestroy() {\n        this._destroyed$.next();\n        this._destroyed$.complete();\n        if (this._latestFitBoundsDetails !== null) {\n            this._fitBoundsService.removeFromBounds(this._latestFitBoundsDetails.latLng);\n        }\n    }\n};\nAgmFitBounds.ctorParameters = () => [\n    { type: FitBoundsAccessor, decorators: [{ type: Self }] },\n    { type: FitBoundsService }\n];\n__decorate([\n    Input(),\n    __metadata(\"design:type\", Object)\n], AgmFitBounds.prototype, \"agmFitBounds\", void 0);\nAgmFitBounds = __decorate([\n    Directive({\n        selector: '[agmFitBounds]',\n    }),\n    __param(0, Self()),\n    __metadata(\"design:paramtypes\", [FitBoundsAccessor,\n        FitBoundsService])\n], AgmFitBounds);\n\nlet MarkerManager = class MarkerManager {\n    constructor(_mapsWrapper, _zone) {\n        this._mapsWrapper = _mapsWrapper;\n        this._zone = _zone;\n        this._markers = new Map();\n    }\n    convertAnimation(uiAnim) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (uiAnim === null) {\n                return null;\n            }\n            else {\n                return this._mapsWrapper.getNativeMap().then(() => google.maps.Animation[uiAnim]);\n            }\n        });\n    }\n    deleteMarker(marker) {\n        const m = this._markers.get(marker);\n        if (m == null) {\n            // marker already deleted\n            return Promise.resolve();\n        }\n        return m.then((m) => {\n            return this._zone.run(() => {\n                m.setMap(null);\n                this._markers.delete(marker);\n            });\n        });\n    }\n    updateMarkerPosition(marker) {\n        return this._markers.get(marker).then((m) => m.setPosition({ lat: marker.latitude, lng: marker.longitude }));\n    }\n    updateTitle(marker) {\n        return this._markers.get(marker).then((m) => m.setTitle(marker.title));\n    }\n    updateLabel(marker) {\n        return this._markers.get(marker).then((m) => { m.setLabel(marker.label); });\n    }\n    updateDraggable(marker) {\n        return this._markers.get(marker).then((m) => m.setDraggable(marker.draggable));\n    }\n    updateIcon(marker) {\n        return this._markers.get(marker).then((m) => m.setIcon(marker.iconUrl));\n    }\n    updateOpacity(marker) {\n        return this._markers.get(marker).then((m) => m.setOpacity(marker.opacity));\n    }\n    updateVisible(marker) {\n        return this._markers.get(marker).then((m) => m.setVisible(marker.visible));\n    }\n    updateZIndex(marker) {\n        return this._markers.get(marker).then((m) => m.setZIndex(marker.zIndex));\n    }\n    updateClickable(marker) {\n        return this._markers.get(marker).then((m) => m.setClickable(marker.clickable));\n    }\n    updateAnimation(marker) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const m = yield this._markers.get(marker);\n            m.setAnimation(yield this.convertAnimation(marker.animation));\n        });\n    }\n    addMarker(marker) {\n        const markerPromise = new Promise((resolve) => __awaiter(this, void 0, void 0, function* () {\n            return this._mapsWrapper.createMarker({\n                position: { lat: marker.latitude, lng: marker.longitude },\n                label: marker.label,\n                draggable: marker.draggable,\n                icon: marker.iconUrl,\n                opacity: marker.opacity,\n                visible: marker.visible,\n                zIndex: marker.zIndex,\n                title: marker.title,\n                clickable: marker.clickable,\n                animation: yield this.convertAnimation(marker.animation),\n            }).then(resolve);\n        }));\n        this._markers.set(marker, markerPromise);\n    }\n    getNativeMarker(marker) {\n        return this._markers.get(marker);\n    }\n    createEventObservable(eventName, marker) {\n        return new Observable((observer) => {\n            this._markers.get(marker).then((m) => {\n                m.addListener(eventName, (e) => this._zone.run(() => observer.next(e)));\n            });\n        });\n    }\n};\nMarkerManager.ctorParameters = () => [\n    { type: GoogleMapsAPIWrapper },\n    { type: NgZone }\n];\nMarkerManager = __decorate([\n    Injectable(),\n    __metadata(\"design:paramtypes\", [GoogleMapsAPIWrapper, NgZone])\n], MarkerManager);\n\nlet InfoWindowManager = class InfoWindowManager {\n    constructor(_mapsWrapper, _zone, _markerManager) {\n        this._mapsWrapper = _mapsWrapper;\n        this._zone = _zone;\n        this._markerManager = _markerManager;\n        this._infoWindows = new Map();\n    }\n    deleteInfoWindow(infoWindow) {\n        const iWindow = this._infoWindows.get(infoWindow);\n        if (iWindow == null) {\n            // info window already deleted\n            return Promise.resolve();\n        }\n        return iWindow.then((i) => {\n            return this._zone.run(() => {\n                i.close();\n                this._infoWindows.delete(infoWindow);\n            });\n        });\n    }\n    setPosition(infoWindow) {\n        return this._infoWindows.get(infoWindow).then((i) => i.setPosition({\n            lat: infoWindow.latitude,\n            lng: infoWindow.longitude,\n        }));\n    }\n    setZIndex(infoWindow) {\n        return this._infoWindows.get(infoWindow)\n            .then((i) => i.setZIndex(infoWindow.zIndex));\n    }\n    open(infoWindow) {\n        return this._infoWindows.get(infoWindow).then((w) => {\n            if (infoWindow.hostMarker != null) {\n                return this._markerManager.getNativeMarker(infoWindow.hostMarker).then((marker) => {\n                    return this._mapsWrapper.getNativeMap().then((map) => w.open(map, marker));\n                });\n            }\n            return this._mapsWrapper.getNativeMap().then((map) => w.open(map));\n        });\n    }\n    close(infoWindow) {\n        return this._infoWindows.get(infoWindow).then((w) => w.close());\n    }\n    setOptions(infoWindow, options) {\n        return this._infoWindows.get(infoWindow).then((i) => i.setOptions(options));\n    }\n    addInfoWindow(infoWindow) {\n        const options = {\n            content: infoWindow.content,\n            maxWidth: infoWindow.maxWidth,\n            zIndex: infoWindow.zIndex,\n            disableAutoPan: infoWindow.disableAutoPan,\n        };\n        if (typeof infoWindow.latitude === 'number' && typeof infoWindow.longitude === 'number') {\n            options.position = { lat: infoWindow.latitude, lng: infoWindow.longitude };\n        }\n        const infoWindowPromise = this._mapsWrapper.createInfoWindow(options);\n        this._infoWindows.set(infoWindow, infoWindowPromise);\n    }\n    /**\n     * Creates a Google Maps event listener for the given InfoWindow as an Observable\n     */\n    createEventObservable(eventName, infoWindow) {\n        return new Observable((observer) => {\n            this._infoWindows.get(infoWindow).then((i) => {\n                i.addListener(eventName, (e) => this._zone.run(() => observer.next(e)));\n            });\n        });\n    }\n};\nInfoWindowManager.ctorParameters = () => [\n    { type: GoogleMapsAPIWrapper },\n    { type: NgZone },\n    { type: MarkerManager }\n];\nInfoWindowManager = __decorate([\n    Injectable(),\n    __metadata(\"design:paramtypes\", [GoogleMapsAPIWrapper, NgZone,\n        MarkerManager])\n], InfoWindowManager);\n\nvar AgmInfoWindow_1;\nlet infoWindowId = 0;\n/**\n * AgmInfoWindow renders a info window inside a {@link AgmMarker} or standalone.\n *\n * ### Example\n * ```typescript\n * import { Component } from '@angular/core';\n *\n * @Component({\n *  selector: 'my-map-cmp',\n *  styles: [`\n *    .agm-map-container {\n *      height: 300px;\n *    }\n * `],\n *  template: `\n *    <agm-map [latitude]=\"lat\" [longitude]=\"lng\" [zoom]=\"zoom\">\n *      <agm-marker [latitude]=\"lat\" [longitude]=\"lng\" [label]=\"'M'\">\n *        <agm-info-window [disableAutoPan]=\"true\">\n *          Hi, this is the content of the <strong>info window</strong>\n *        </agm-info-window>\n *      </agm-marker>\n *    </agm-map>\n *  `\n * })\n * ```\n */\nlet AgmInfoWindow = AgmInfoWindow_1 = class AgmInfoWindow {\n    constructor(_infoWindowManager, _el) {\n        this._infoWindowManager = _infoWindowManager;\n        this._el = _el;\n        /**\n         * Sets the open state for the InfoWindow. You can also call the open() and close() methods.\n         */\n        this.isOpen = false;\n        /**\n         * Emits an event when the info window is closed.\n         */\n        this.infoWindowClose = new EventEmitter();\n        this._infoWindowAddedToManager = false;\n        this._id = (infoWindowId++).toString();\n    }\n    ngOnInit() {\n        this.content = this._el.nativeElement.querySelector('.agm-info-window-content');\n        this._infoWindowManager.addInfoWindow(this);\n        this._infoWindowAddedToManager = true;\n        this._updateOpenState();\n        this._registerEventListeners();\n    }\n    /** @internal */\n    ngOnChanges(changes) {\n        if (!this._infoWindowAddedToManager) {\n            return;\n        }\n        if ((changes['latitude'] || changes['longitude']) && typeof this.latitude === 'number' &&\n            typeof this.longitude === 'number') {\n            this._infoWindowManager.setPosition(this);\n        }\n        if (changes['zIndex']) {\n            this._infoWindowManager.setZIndex(this);\n        }\n        if (changes['isOpen']) {\n            this._updateOpenState();\n        }\n        this._setInfoWindowOptions(changes);\n    }\n    _registerEventListeners() {\n        this._infoWindowManager.createEventObservable('closeclick', this).subscribe(() => {\n            this.isOpen = false;\n            this.infoWindowClose.emit();\n        });\n    }\n    _updateOpenState() {\n        this.isOpen ? this.open() : this.close();\n    }\n    _setInfoWindowOptions(changes) {\n        let options = {};\n        let optionKeys = Object.keys(changes).filter(k => AgmInfoWindow_1._infoWindowOptionsInputs.indexOf(k) !== -1);\n        optionKeys.forEach((k) => { options[k] = changes[k].currentValue; });\n        this._infoWindowManager.setOptions(this, options);\n    }\n    /**\n     * Opens the info window.\n     */\n    open() { return this._infoWindowManager.open(this); }\n    /**\n     * Closes the info window.\n     */\n    close() {\n        return this._infoWindowManager.close(this).then(() => { this.infoWindowClose.emit(); });\n    }\n    /** @internal */\n    id() { return this._id; }\n    /** @internal */\n    toString() { return 'AgmInfoWindow-' + this._id.toString(); }\n    /** @internal */\n    ngOnDestroy() { this._infoWindowManager.deleteInfoWindow(this); }\n};\nAgmInfoWindow._infoWindowOptionsInputs = ['disableAutoPan', 'maxWidth'];\nAgmInfoWindow.ctorParameters = () => [\n    { type: InfoWindowManager },\n    { type: ElementRef }\n];\n__decorate([\n    Input(),\n    __metadata(\"design:type\", Number)\n], AgmInfoWindow.prototype, \"latitude\", void 0);\n__decorate([\n    Input(),\n    __metadata(\"design:type\", Number)\n], AgmInfoWindow.prototype, \"longitude\", void 0);\n__decorate([\n    Input(),\n    __metadata(\"design:type\", Boolean)\n], AgmInfoWindow.prototype, \"disableAutoPan\", void 0);\n__decorate([\n    Input(),\n    __metadata(\"design:type\", Number)\n], AgmInfoWindow.prototype, \"zIndex\", void 0);\n__decorate([\n    Input(),\n    __metadata(\"design:type\", Number)\n], AgmInfoWindow.prototype, \"maxWidth\", void 0);\n__decorate([\n    Input(),\n    __metadata(\"design:type\", Object)\n], AgmInfoWindow.prototype, \"isOpen\", void 0);\n__decorate([\n    Output(),\n    __metadata(\"design:type\", EventEmitter)\n], AgmInfoWindow.prototype, \"infoWindowClose\", void 0);\nAgmInfoWindow = AgmInfoWindow_1 = __decorate([\n    Component({\n        selector: 'agm-info-window',\n        template: `<div class='agm-info-window-content'>\n      <ng-content></ng-content>\n    </div>\n  `\n    }),\n    __metadata(\"design:paramtypes\", [InfoWindowManager, ElementRef])\n], AgmInfoWindow);\n\n/**\n * Manages all KML Layers for a Google Map instance.\n */\nlet KmlLayerManager = class KmlLayerManager {\n    constructor(_wrapper, _zone) {\n        this._wrapper = _wrapper;\n        this._zone = _zone;\n        this._layers = new Map();\n    }\n    /**\n     * Adds a new KML Layer to the map.\n     */\n    addKmlLayer(layer) {\n        const newLayer = this._wrapper.getNativeMap().then(m => {\n            return new google.maps.KmlLayer({\n                clickable: layer.clickable,\n                map: m,\n                preserveViewport: layer.preserveViewport,\n                screenOverlays: layer.screenOverlays,\n                suppressInfoWindows: layer.suppressInfoWindows,\n                url: layer.url,\n                zIndex: layer.zIndex,\n            });\n        });\n        this._layers.set(layer, newLayer);\n    }\n    setOptions(layer, options) {\n        this._layers.get(layer).then(l => l.setOptions(options));\n    }\n    deleteKmlLayer(layer) {\n        this._layers.get(layer).then(l => {\n            l.setMap(null);\n            this._layers.delete(layer);\n        });\n    }\n    /**\n     * Creates a Google Maps event listener for the given KmlLayer as an Observable\n     */\n    createEventObservable(eventName, layer) {\n        return new Observable((observer) => {\n            this._layers.get(layer).then((m) => {\n                m.addListener(eventName, (e) => this._zone.run(() => observer.next(e)));\n            });\n        });\n    }\n};\nKmlLayerManager.ctorParameters = () => [\n    { type: GoogleMapsAPIWrapper },\n    { type: NgZone }\n];\nKmlLayerManager = __decorate([\n    Injectable(),\n    __metadata(\"design:paramtypes\", [GoogleMapsAPIWrapper, NgZone])\n], KmlLayerManager);\n\nvar AgmKmlLayer_1;\nlet layerId$2 = 0;\nlet AgmKmlLayer = AgmKmlLayer_1 = class AgmKmlLayer {\n    constructor(_manager) {\n        this._manager = _manager;\n        this._addedToManager = false;\n        this._id = (layerId$2++).toString();\n        this._subscriptions = [];\n        /**\n         * If true, the layer receives mouse events. Default value is true.\n         */\n        this.clickable = true;\n        /**\n         * By default, the input map is centered and zoomed to the bounding box of the contents of the\n         * layer.\n         * If this option is set to true, the viewport is left unchanged, unless the map's center and zoom\n         * were never set.\n         */\n        this.preserveViewport = false;\n        /**\n         * Whether to render the screen overlays. Default true.\n         */\n        this.screenOverlays = true;\n        /**\n         * Suppress the rendering of info windows when layer features are clicked.\n         */\n        this.suppressInfoWindows = false;\n        /**\n         * The URL of the KML document to display.\n         */\n        this.url = null;\n        /**\n         * The z-index of the layer.\n         */\n        this.zIndex = null;\n        /**\n         * This event is fired when a feature in the layer is clicked.\n         */\n        this.layerClick = new EventEmitter();\n        /**\n         * This event is fired when the KML layers default viewport has changed.\n         */\n        this.defaultViewportChange = new EventEmitter();\n        /**\n         * This event is fired when the KML layer has finished loading.\n         * At this point it is safe to read the status property to determine if the layer loaded\n         * successfully.\n         */\n        this.statusChange = new EventEmitter();\n    }\n    ngOnInit() {\n        if (this._addedToManager) {\n            return;\n        }\n        this._manager.addKmlLayer(this);\n        this._addedToManager = true;\n        this._addEventListeners();\n    }\n    ngOnChanges(changes) {\n        if (!this._addedToManager) {\n            return;\n        }\n        this._updatePolygonOptions(changes);\n    }\n    _updatePolygonOptions(changes) {\n        const options = Object.keys(changes)\n            .filter(k => AgmKmlLayer_1._kmlLayerOptions.indexOf(k) !== -1)\n            .reduce((obj, k) => {\n            obj[k] = changes[k].currentValue;\n            return obj;\n        }, {});\n        if (Object.keys(options).length > 0) {\n            this._manager.setOptions(this, options);\n        }\n    }\n    _addEventListeners() {\n        const listeners = [\n            { name: 'click', handler: (ev) => this.layerClick.emit(ev) },\n            { name: 'defaultviewport_changed', handler: () => this.defaultViewportChange.emit() },\n            { name: 'status_changed', handler: () => this.statusChange.emit() },\n        ];\n        listeners.forEach((obj) => {\n            const os = this._manager.createEventObservable(obj.name, this).subscribe(obj.handler);\n            this._subscriptions.push(os);\n        });\n    }\n    /** @internal */\n    id() { return this._id; }\n    /** @internal */\n    toString() { return `AgmKmlLayer-${this._id.toString()}`; }\n    /** @internal */\n    ngOnDestroy() {\n        this._manager.deleteKmlLayer(this);\n        // unsubscribe all registered observable subscriptions\n        this._subscriptions.forEach(s => s.unsubscribe());\n    }\n};\nAgmKmlLayer._kmlLayerOptions = ['clickable', 'preserveViewport', 'screenOverlays', 'suppressInfoWindows', 'url', 'zIndex'];\nAgmKmlLayer.ctorParameters = () => [\n    { type: KmlLayerManager }\n];\n__decorate([\n    Input(),\n    __metadata(\"design:type\", Object)\n], AgmKmlLayer.prototype, \"clickable\", void 0);\n__decorate([\n    Input(),\n    __metadata(\"design:type\", Object)\n], AgmKmlLayer.prototype, \"preserveViewport\", void 0);\n__decorate([\n    Input(),\n    __metadata(\"design:type\", Object)\n], AgmKmlLayer.prototype, \"screenOverlays\", void 0);\n__decorate([\n    Input(),\n    __metadata(\"design:type\", Object)\n], AgmKmlLayer.prototype, \"suppressInfoWindows\", void 0);\n__decorate([\n    Input(),\n    __metadata(\"design:type\", String)\n], AgmKmlLayer.prototype, \"url\", void 0);\n__decorate([\n    Input(),\n    __metadata(\"design:type\", Number)\n], AgmKmlLayer.prototype, \"zIndex\", void 0);\n__decorate([\n    Output(),\n    __metadata(\"design:type\", EventEmitter)\n], AgmKmlLayer.prototype, \"layerClick\", void 0);\n__decorate([\n    Output(),\n    __metadata(\"design:type\", EventEmitter)\n], AgmKmlLayer.prototype, \"defaultViewportChange\", void 0);\n__decorate([\n    Output(),\n    __metadata(\"design:type\", EventEmitter)\n], AgmKmlLayer.prototype, \"statusChange\", void 0);\nAgmKmlLayer = AgmKmlLayer_1 = __decorate([\n    Directive({\n        selector: 'agm-kml-layer',\n    }),\n    __metadata(\"design:paramtypes\", [KmlLayerManager])\n], AgmKmlLayer);\n\nfunction createMVCEventObservable(array) {\n    const eventNames = ['insert_at', 'remove_at', 'set_at'];\n    return fromEventPattern((handler) => eventNames.map(evName => array.addListener(evName, (index, previous) => handler.apply(array, [{ 'newArr': array.getArray(), evName, index, previous }]))), (_handler, evListeners) => evListeners.forEach(evListener => evListener.remove()));\n}\nclass MvcArrayMock {\n    constructor() {\n        this.vals = [];\n        this.listeners = {\n            'remove_at': [],\n            'insert_at': [],\n            'set_at': [],\n        };\n    }\n    clear() {\n        for (let i = this.vals.length - 1; i >= 0; i--) {\n            this.removeAt(i);\n        }\n    }\n    getArray() {\n        return [...this.vals];\n    }\n    getAt(i) {\n        return this.vals[i];\n    }\n    getLength() {\n        return this.vals.length;\n    }\n    insertAt(i, elem) {\n        this.vals.splice(i, 0, elem);\n        this.listeners.insert_at.map(listener => listener(i));\n    }\n    pop() {\n        const deleted = this.vals.pop();\n        this.listeners.remove_at.map(listener => listener(this.vals.length, deleted));\n        return deleted;\n    }\n    push(elem) {\n        this.vals.push(elem);\n        this.listeners.insert_at.map(listener => listener(this.vals.length - 1));\n        return this.vals.length;\n    }\n    removeAt(i) {\n        const deleted = this.vals.splice(i, 1)[0];\n        this.listeners.remove_at.map(listener => listener(i, deleted));\n        return deleted;\n    }\n    setAt(i, elem) {\n        const deleted = this.vals[i];\n        this.vals[i] = elem;\n        this.listeners.set_at.map(listener => listener(i, deleted));\n    }\n    forEach(callback) {\n        this.vals.forEach(callback);\n    }\n    addListener(eventName, handler) {\n        const listenerArr = this.listeners[eventName];\n        listenerArr.push(handler);\n        return {\n            remove: () => {\n                listenerArr.splice(listenerArr.indexOf(handler), 1);\n            },\n        };\n    }\n}\n\nlet PolygonManager = class PolygonManager {\n    constructor(_mapsWrapper, _zone) {\n        this._mapsWrapper = _mapsWrapper;\n        this._zone = _zone;\n        this._polygons = new Map();\n    }\n    addPolygon(path) {\n        const polygonPromise = this._mapsWrapper.createPolygon({\n            clickable: path.clickable,\n            draggable: path.draggable,\n            editable: path.editable,\n            fillColor: path.fillColor,\n            fillOpacity: path.fillOpacity,\n            geodesic: path.geodesic,\n            paths: path.paths,\n            strokeColor: path.strokeColor,\n            strokeOpacity: path.strokeOpacity,\n            strokeWeight: path.strokeWeight,\n            visible: path.visible,\n            zIndex: path.zIndex,\n        });\n        this._polygons.set(path, polygonPromise);\n    }\n    updatePolygon(polygon) {\n        const m = this._polygons.get(polygon);\n        if (m == null) {\n            return Promise.resolve();\n        }\n        return m.then((l) => this._zone.run(() => { l.setPaths(polygon.paths); }));\n    }\n    setPolygonOptions(path, options) {\n        return this._polygons.get(path).then((l) => { l.setOptions(options); });\n    }\n    deletePolygon(paths) {\n        const m = this._polygons.get(paths);\n        if (m == null) {\n            return Promise.resolve();\n        }\n        return m.then((l) => {\n            return this._zone.run(() => {\n                l.setMap(null);\n                this._polygons.delete(paths);\n            });\n        });\n    }\n    getPath(polygon) {\n        return this._polygons.get(polygon)\n            .then((polygon) => polygon.getPath().getArray());\n    }\n    getPaths(polygon) {\n        return this._polygons.get(polygon)\n            .then((polygon) => polygon.getPaths().getArray().map((p) => p.getArray()));\n    }\n    createEventObservable(eventName, path) {\n        return new Observable((observer) => {\n            this._polygons.get(path).then((l) => {\n                l.addListener(eventName, (e) => this._zone.run(() => observer.next(e)));\n            });\n        });\n    }\n    createPathEventObservable(agmPolygon) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const polygon = yield this._polygons.get(agmPolygon);\n            const paths = polygon.getPaths();\n            const pathsChanges$ = createMVCEventObservable(paths);\n            return pathsChanges$.pipe(startWith({ newArr: paths.getArray() }), // in order to subscribe to them all\n            switchMap(parentMVEvent => merge(... // rest parameter\n            parentMVEvent.newArr.map((chMVC, index) => createMVCEventObservable(chMVC)\n                .pipe(map(chMVCEvent => ({ parentMVEvent, chMVCEvent, pathIndex: index })))))\n                .pipe(startWith({ parentMVEvent, chMVCEvent: null, pathIndex: null }))), // start the merged ob with an event signinifing change to parent\n            skip(1), // skip the manually added event\n            map(({ parentMVEvent, chMVCEvent, pathIndex }) => {\n                let retVal;\n                if (!chMVCEvent) {\n                    retVal = {\n                        newArr: parentMVEvent.newArr.map(subArr => subArr.getArray().map(latLng => latLng.toJSON())),\n                        eventName: parentMVEvent.evName,\n                        index: parentMVEvent.index,\n                    };\n                    if (parentMVEvent.previous) {\n                        retVal.previous = parentMVEvent.previous.getArray();\n                    }\n                }\n                else {\n                    retVal = {\n                        newArr: parentMVEvent.newArr.map(subArr => subArr.getArray().map(latLng => latLng.toJSON())),\n                        pathIndex,\n                        eventName: chMVCEvent.evName,\n                        index: chMVCEvent.index,\n                    };\n                    if (chMVCEvent.previous) {\n                        retVal.previous = chMVCEvent.previous;\n                    }\n                }\n                return retVal;\n            }));\n        });\n    }\n};\nPolygonManager.ctorParameters = () => [\n    { type: GoogleMapsAPIWrapper },\n    { type: NgZone }\n];\nPolygonManager = __decorate([\n    Injectable(),\n    __metadata(\"design:paramtypes\", [GoogleMapsAPIWrapper, NgZone])\n], PolygonManager);\n\nvar PolylineManager_1;\nlet PolylineManager = PolylineManager_1 = class PolylineManager {\n    constructor(_mapsWrapper, _zone) {\n        this._mapsWrapper = _mapsWrapper;\n        this._zone = _zone;\n        this._polylines = new Map();\n    }\n    static _convertPoints(line) {\n        const path = line._getPoints().map((point) => {\n            return { lat: point.latitude, lng: point.longitude };\n        });\n        return path;\n    }\n    static _convertPath(path) {\n        const symbolPath = google.maps.SymbolPath[path];\n        if (typeof symbolPath === 'number') {\n            return symbolPath;\n        }\n        else {\n            return path;\n        }\n    }\n    static _convertIcons(line) {\n        const icons = line._getIcons().map(agmIcon => ({\n            fixedRotation: agmIcon.fixedRotation,\n            offset: agmIcon.offset,\n            repeat: agmIcon.repeat,\n            icon: {\n                anchor: new google.maps.Point(agmIcon.anchorX, agmIcon.anchorY),\n                fillColor: agmIcon.fillColor,\n                fillOpacity: agmIcon.fillOpacity,\n                path: PolylineManager_1._convertPath(agmIcon.path),\n                rotation: agmIcon.rotation,\n                scale: agmIcon.scale,\n                strokeColor: agmIcon.strokeColor,\n                strokeOpacity: agmIcon.strokeOpacity,\n                strokeWeight: agmIcon.strokeWeight,\n            },\n        }));\n        // prune undefineds;\n        icons.forEach(icon => {\n            Object.entries(icon).forEach(([key, val]) => {\n                if (typeof val === 'undefined') {\n                    delete icon[key];\n                }\n            });\n            if (typeof icon.icon.anchor.x === 'undefined' ||\n                typeof icon.icon.anchor.y === 'undefined') {\n                delete icon.icon.anchor;\n            }\n        });\n        return icons;\n    }\n    addPolyline(line) {\n        const polylinePromise = this._mapsWrapper.getNativeMap()\n            .then(() => [PolylineManager_1._convertPoints(line),\n            PolylineManager_1._convertIcons(line)])\n            .then(([path, icons]) => this._mapsWrapper.createPolyline({\n            clickable: line.clickable,\n            draggable: line.draggable,\n            editable: line.editable,\n            geodesic: line.geodesic,\n            strokeColor: line.strokeColor,\n            strokeOpacity: line.strokeOpacity,\n            strokeWeight: line.strokeWeight,\n            visible: line.visible,\n            zIndex: line.zIndex,\n            path: path,\n            icons: icons,\n        }));\n        this._polylines.set(line, polylinePromise);\n    }\n    updatePolylinePoints(line) {\n        const path = PolylineManager_1._convertPoints(line);\n        const m = this._polylines.get(line);\n        if (m == null) {\n            return Promise.resolve();\n        }\n        return m.then((l) => { return this._zone.run(() => { l.setPath(path); }); });\n    }\n    updateIconSequences(line) {\n        return __awaiter(this, void 0, void 0, function* () {\n            yield this._mapsWrapper.getNativeMap();\n            const icons = PolylineManager_1._convertIcons(line);\n            const m = this._polylines.get(line);\n            if (m == null) {\n                return;\n            }\n            return m.then(l => this._zone.run(() => l.setOptions({ icons: icons })));\n        });\n    }\n    setPolylineOptions(line, options) {\n        return this._polylines.get(line).then((l) => { l.setOptions(options); });\n    }\n    deletePolyline(line) {\n        const m = this._polylines.get(line);\n        if (m == null) {\n            return Promise.resolve();\n        }\n        return m.then((l) => {\n            return this._zone.run(() => {\n                l.setMap(null);\n                this._polylines.delete(line);\n            });\n        });\n    }\n    getMVCPath(agmPolyline) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const polyline = yield this._polylines.get(agmPolyline);\n            return polyline.getPath();\n        });\n    }\n    getPath(agmPolyline) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return (yield this.getMVCPath(agmPolyline)).getArray();\n        });\n    }\n    createEventObservable(eventName, line) {\n        return new Observable((observer) => {\n            this._polylines.get(line).then((l) => {\n                l.addListener(eventName, (e) => this._zone.run(() => observer.next(e)));\n            });\n        });\n    }\n    createPathEventObservable(line) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const mvcPath = yield this.getMVCPath(line);\n            return createMVCEventObservable(mvcPath);\n        });\n    }\n};\nPolylineManager.ctorParameters = () => [\n    { type: GoogleMapsAPIWrapper },\n    { type: NgZone }\n];\nPolylineManager = PolylineManager_1 = __decorate([\n    Injectable(),\n    __metadata(\"design:paramtypes\", [GoogleMapsAPIWrapper, NgZone])\n], PolylineManager);\n\nlet RectangleManager = class RectangleManager {\n    constructor(_apiWrapper, _zone) {\n        this._apiWrapper = _apiWrapper;\n        this._zone = _zone;\n        this._rectangles = new Map();\n    }\n    addRectangle(rectangle) {\n        this._rectangles.set(rectangle, this._apiWrapper.createRectangle({\n            bounds: {\n                north: rectangle.north,\n                east: rectangle.east,\n                south: rectangle.south,\n                west: rectangle.west,\n            },\n            clickable: rectangle.clickable,\n            draggable: rectangle.draggable,\n            editable: rectangle.editable,\n            fillColor: rectangle.fillColor,\n            fillOpacity: rectangle.fillOpacity,\n            strokeColor: rectangle.strokeColor,\n            strokeOpacity: rectangle.strokeOpacity,\n            strokePosition: rectangle.strokePosition,\n            strokeWeight: rectangle.strokeWeight,\n            visible: rectangle.visible,\n            zIndex: rectangle.zIndex,\n        }));\n    }\n    /**\n     * Removes the given rectangle from the map.\n     */\n    removeRectangle(rectangle) {\n        return this._rectangles.get(rectangle).then((r) => {\n            r.setMap(null);\n            this._rectangles.delete(rectangle);\n        });\n    }\n    setOptions(rectangle, options) {\n        return this._rectangles.get(rectangle).then((r) => r.setOptions(options));\n    }\n    getBounds(rectangle) {\n        return this._rectangles.get(rectangle).then((r) => r.getBounds());\n    }\n    setBounds(rectangle) {\n        return this._rectangles.get(rectangle).then((r) => {\n            return r.setBounds({\n                north: rectangle.north,\n                east: rectangle.east,\n                south: rectangle.south,\n                west: rectangle.west,\n            });\n        });\n    }\n    setEditable(rectangle) {\n        return this._rectangles.get(rectangle).then((r) => {\n            return r.setEditable(rectangle.editable);\n        });\n    }\n    setDraggable(rectangle) {\n        return this._rectangles.get(rectangle).then((r) => {\n            return r.setDraggable(rectangle.draggable);\n        });\n    }\n    setVisible(rectangle) {\n        return this._rectangles.get(rectangle).then((r) => {\n            return r.setVisible(rectangle.visible);\n        });\n    }\n    createEventObservable(eventName, rectangle) {\n        return Observable.create((observer) => {\n            let listener = null;\n            this._rectangles.get(rectangle).then((r) => {\n                listener = r.addListener(eventName, (e) => this._zone.run(() => observer.next(e)));\n            });\n            return () => {\n                if (listener !== null) {\n                    listener.remove();\n                }\n            };\n        });\n    }\n};\nRectangleManager.ctorParameters = () => [\n    { type: GoogleMapsAPIWrapper },\n    { type: NgZone }\n];\nRectangleManager = __decorate([\n    Injectable(),\n    __metadata(\"design:paramtypes\", [GoogleMapsAPIWrapper, NgZone])\n], RectangleManager);\n\nvar AgmMap_1;\n/**\n * AgmMap renders a Google Map.\n * **Important note**: To be able see a map in the browser, you have to define a height for the\n * element `agm-map`.\n *\n * ### Example\n * ```typescript\n * import { Component } from '@angular/core';\n *\n * @Component({\n *  selector: 'my-map-cmp',\n *  styles: [`\n *    agm-map {\n *      height: 300px;\n *    }\n * `],\n *  template: `\n *    <agm-map [latitude]=\"lat\" [longitude]=\"lng\" [zoom]=\"zoom\">\n *    </agm-map>\n *  `\n * })\n * ```\n */\nlet AgmMap = AgmMap_1 = class AgmMap {\n    constructor(_elem, _mapsWrapper, _platformId, _fitBoundsService, _zone) {\n        this._elem = _elem;\n        this._mapsWrapper = _mapsWrapper;\n        this._platformId = _platformId;\n        this._fitBoundsService = _fitBoundsService;\n        this._zone = _zone;\n        /**\n         * The longitude that defines the center of the map.\n         */\n        this.longitude = 0;\n        /**\n         * The latitude that defines the center of the map.\n         */\n        this.latitude = 0;\n        /**\n         * The zoom level of the map. The default zoom level is 8.\n         */\n        this.zoom = 8;\n        /**\n         * Enables/disables if map is draggable.\n         */\n        // tslint:disable-next-line:no-input-rename\n        this.draggable = true;\n        /**\n         * Enables/disables zoom and center on double click. Enabled by default.\n         */\n        this.disableDoubleClickZoom = false;\n        /**\n         * Enables/disables all default UI of the Google map. Please note: When the map is created, this\n         * value cannot get updated.\n         */\n        this.disableDefaultUI = false;\n        /**\n         * If false, disables scrollwheel zooming on the map. The scrollwheel is enabled by default.\n         */\n        this.scrollwheel = true;\n        /**\n         * If false, prevents the map from being controlled by the keyboard. Keyboard shortcuts are\n         * enabled by default.\n         */\n        this.keyboardShortcuts = true;\n        /**\n         * Styles to apply to each of the default map types. Note that for Satellite/Hybrid and Terrain\n         * modes, these styles will only apply to labels and geometry.\n         */\n        this.styles = [];\n        /**\n         * When true and the latitude and/or longitude values changes, the Google Maps panTo method is\n         * used to\n         * center the map. See: https://developers.google.com/maps/documentation/javascript/reference#Map\n         */\n        this.usePanning = false;\n        /**\n         * Sets the viewport to contain the given bounds.\n         * If this option to `true`, the bounds get automatically computed from all elements that use the {@link AgmFitBounds} directive.\n         */\n        this.fitBounds = false;\n        /**\n         * The initial enabled/disabled state of the Scale control. This is disabled by default.\n         */\n        this.scaleControl = false;\n        /**\n         * The initial enabled/disabled state of the Map type control.\n         */\n        this.mapTypeControl = false;\n        /**\n         * The initial enabled/disabled state of the Pan control.\n         */\n        this.panControl = false;\n        /**\n         * The initial enabled/disabled state of the Rotate control.\n         */\n        this.rotateControl = false;\n        /**\n         * The initial enabled/disabled state of the Fullscreen control.\n         */\n        this.fullscreenControl = false;\n        /**\n         * The map mapTypeId. Defaults to 'roadmap'.\n         */\n        this.mapTypeId = 'roadmap';\n        /**\n         * When false, map icons are not clickable. A map icon represents a point of interest,\n         * also known as a POI. By default map icons are clickable.\n         */\n        this.clickableIcons = true;\n        /**\n         * A map icon represents a point of interest, also known as a POI.\n         * When map icons are clickable by default, an info window is displayed.\n         * When this property is set to false, the info window will not be shown but the click event\n         * will still fire\n         */\n        this.showDefaultInfoWindow = true;\n        /**\n         * This setting controls how gestures on the map are handled.\n         * Allowed values:\n         * - 'cooperative' (Two-finger touch gestures pan and zoom the map. One-finger touch gestures are not handled by the map.)\n         * - 'greedy'      (All touch gestures pan or zoom the map.)\n         * - 'none'        (The map cannot be panned or zoomed by user gestures.)\n         * - 'auto'        [default] (Gesture handling is either cooperative or greedy, depending on whether the page is scrollable or not.\n         */\n        this.gestureHandling = 'auto';\n        /**\n         * Controls the automatic switching behavior for the angle of incidence of\n         * the map. The only allowed values are 0 and 45. The value 0 causes the map\n         * to always use a 0° overhead view regardless of the zoom level and\n         * viewport. The value 45 causes the tilt angle to automatically switch to\n         * 45 whenever 45° imagery is available for the current zoom level and\n         * viewport, and switch back to 0 whenever 45° imagery is not available\n         * (this is the default behavior). 45° imagery is only available for\n         * satellite and hybrid map types, within some locations, and at some zoom\n         * levels. Note: getTilt returns the current tilt angle, not the value\n         * specified by this option. Because getTilt and this option refer to\n         * different things, do not bind() the tilt property; doing so may yield\n         * unpredictable effects. (Default of AGM is 0 (disabled). Enable it with value 45.)\n         */\n        this.tilt = 0;\n        this._observableSubscriptions = [];\n        /**\n         * This event emitter gets emitted when the user clicks on the map (but not when they click on a\n         * marker or infoWindow).\n         */\n        this.mapClick = new EventEmitter();\n        /**\n         * This event emitter gets emitted when the user right-clicks on the map (but not when they click\n         * on a marker or infoWindow).\n         */\n        this.mapRightClick = new EventEmitter();\n        /**\n         * This event emitter gets emitted when the user double-clicks on the map (but not when they click\n         * on a marker or infoWindow).\n         */\n        this.mapDblClick = new EventEmitter();\n        /**\n         * This event emitter is fired when the map center changes.\n         */\n        this.centerChange = new EventEmitter();\n        /**\n         * This event is fired when the viewport bounds have changed.\n         */\n        this.boundsChange = new EventEmitter();\n        /**\n         * This event is fired when the mapTypeId property changes.\n         */\n        this.mapTypeIdChange = new EventEmitter();\n        /**\n         * This event is fired when the map becomes idle after panning or zooming.\n         */\n        this.idle = new EventEmitter();\n        /**\n         * This event is fired when the zoom level has changed.\n         */\n        this.zoomChange = new EventEmitter();\n        /**\n         * This event is fired when the google map is fully initialized.\n         * You get the google.maps.Map instance as a result of this EventEmitter.\n         */\n        this.mapReady = new EventEmitter();\n        /**\n         * This event is fired when the visible tiles have finished loading.\n         */\n        this.tilesLoaded = new EventEmitter();\n    }\n    /** @internal */\n    ngOnInit() {\n        if (isPlatformServer(this._platformId)) {\n            // The code is running on the server, do nothing\n            return;\n        }\n        // todo: this should be solved with a new component and a viewChild decorator\n        const container = this._elem.nativeElement.querySelector('.agm-map-container-inner');\n        this._initMapInstance(container);\n    }\n    _initMapInstance(el) {\n        this._mapsWrapper.createMap(el, {\n            center: { lat: this.latitude || 0, lng: this.longitude || 0 },\n            zoom: this.zoom,\n            minZoom: this.minZoom,\n            maxZoom: this.maxZoom,\n            controlSize: this.controlSize,\n            disableDefaultUI: this.disableDefaultUI,\n            disableDoubleClickZoom: this.disableDoubleClickZoom,\n            scrollwheel: this.scrollwheel,\n            backgroundColor: this.backgroundColor,\n            draggable: this.draggable,\n            draggableCursor: this.draggableCursor,\n            draggingCursor: this.draggingCursor,\n            keyboardShortcuts: this.keyboardShortcuts,\n            styles: this.styles,\n            zoomControl: this.zoomControl,\n            zoomControlOptions: this.zoomControlOptions,\n            streetViewControl: this.streetViewControl,\n            streetViewControlOptions: this.streetViewControlOptions,\n            scaleControl: this.scaleControl,\n            scaleControlOptions: this.scaleControlOptions,\n            mapTypeControl: this.mapTypeControl,\n            mapTypeControlOptions: this.mapTypeControlOptions,\n            panControl: this.panControl,\n            panControlOptions: this.panControlOptions,\n            rotateControl: this.rotateControl,\n            rotateControlOptions: this.rotateControlOptions,\n            fullscreenControl: this.fullscreenControl,\n            fullscreenControlOptions: this.fullscreenControlOptions,\n            mapTypeId: this.mapTypeId,\n            clickableIcons: this.clickableIcons,\n            gestureHandling: this.gestureHandling,\n            tilt: this.tilt,\n            restriction: this.restriction,\n        })\n            .then(() => this._mapsWrapper.getNativeMap())\n            .then(map => this.mapReady.emit(map));\n        // register event listeners\n        this._handleMapCenterChange();\n        this._handleMapZoomChange();\n        this._handleMapMouseEvents();\n        this._handleBoundsChange();\n        this._handleMapTypeIdChange();\n        this._handleTilesLoadedEvent();\n        this._handleIdleEvent();\n    }\n    /** @internal */\n    ngOnDestroy() {\n        // unsubscribe all registered observable subscriptions\n        this._observableSubscriptions.forEach((s) => s.unsubscribe());\n        // remove all listeners from the map instance\n        this._mapsWrapper.clearInstanceListeners();\n        if (this._fitBoundsSubscription) {\n            this._fitBoundsSubscription.unsubscribe();\n        }\n    }\n    /* @internal */\n    ngOnChanges(changes) {\n        this._updateMapOptionsChanges(changes);\n        this._updatePosition(changes);\n    }\n    _updateMapOptionsChanges(changes) {\n        let options = {};\n        let optionKeys = Object.keys(changes).filter(k => AgmMap_1._mapOptionsAttributes.indexOf(k) !== -1);\n        optionKeys.forEach((k) => { options[k] = changes[k].currentValue; });\n        this._mapsWrapper.setMapOptions(options);\n    }\n    /**\n     * Triggers a resize event on the google map instance.\n     * When recenter is true, the of the google map gets called with the current lat/lng values or fitBounds value to recenter the map.\n     * Returns a promise that gets resolved after the event was triggered.\n     */\n    triggerResize(recenter = true) {\n        // Note: When we would trigger the resize event and show the map in the same turn (which is a\n        // common case for triggering a resize event), then the resize event would not\n        // work (to show the map), so we trigger the event in a timeout.\n        return new Promise((resolve) => {\n            setTimeout(() => {\n                return this._mapsWrapper.triggerMapEvent('resize').then(() => {\n                    if (recenter) {\n                        this.fitBounds != null ? this._fitBounds() : this._setCenter();\n                    }\n                    resolve();\n                });\n            });\n        });\n    }\n    _updatePosition(changes) {\n        if (changes['latitude'] == null && changes['longitude'] == null &&\n            !changes['fitBounds']) {\n            // no position update needed\n            return;\n        }\n        // we prefer fitBounds in changes\n        if ('fitBounds' in changes) {\n            this._fitBounds();\n            return;\n        }\n        if (typeof this.latitude !== 'number' || typeof this.longitude !== 'number') {\n            return;\n        }\n        this._setCenter();\n    }\n    _setCenter() {\n        let newCenter = {\n            lat: this.latitude,\n            lng: this.longitude,\n        };\n        if (this.usePanning) {\n            this._mapsWrapper.panTo(newCenter);\n        }\n        else {\n            this._mapsWrapper.setCenter(newCenter);\n        }\n    }\n    _fitBounds() {\n        switch (this.fitBounds) {\n            case true:\n                this._subscribeToFitBoundsUpdates();\n                break;\n            case false:\n                if (this._fitBoundsSubscription) {\n                    this._fitBoundsSubscription.unsubscribe();\n                }\n                break;\n            default:\n                this._updateBounds(this.fitBounds, this.fitBoundsPadding);\n        }\n    }\n    _subscribeToFitBoundsUpdates() {\n        this._zone.runOutsideAngular(() => {\n            this._fitBoundsSubscription = this._fitBoundsService.getBounds$().subscribe(b => {\n                this._zone.run(() => this._updateBounds(b, this.fitBoundsPadding));\n            });\n        });\n    }\n    _updateBounds(bounds, padding) {\n        if (!bounds) {\n            return;\n        }\n        if (this._isLatLngBoundsLiteral(bounds) && typeof google !== 'undefined' && google && google.maps && google.maps.LatLngBounds) {\n            const newBounds = new google.maps.LatLngBounds();\n            newBounds.union(bounds);\n            bounds = newBounds;\n        }\n        if (this.usePanning) {\n            this._mapsWrapper.panToBounds(bounds, padding);\n            return;\n        }\n        this._mapsWrapper.fitBounds(bounds, padding);\n    }\n    _isLatLngBoundsLiteral(bounds) {\n        return bounds != null && bounds.extend === undefined;\n    }\n    _handleMapCenterChange() {\n        const s = this._mapsWrapper.subscribeToMapEvent('center_changed').subscribe(() => {\n            this._mapsWrapper.getCenter().then((center) => {\n                this.latitude = center.lat();\n                this.longitude = center.lng();\n                this.centerChange.emit({ lat: this.latitude, lng: this.longitude });\n            });\n        });\n        this._observableSubscriptions.push(s);\n    }\n    _handleBoundsChange() {\n        const s = this._mapsWrapper.subscribeToMapEvent('bounds_changed').subscribe(() => {\n            this._mapsWrapper.getBounds().then((bounds) => { this.boundsChange.emit(bounds); });\n        });\n        this._observableSubscriptions.push(s);\n    }\n    _handleMapTypeIdChange() {\n        const s = this._mapsWrapper.subscribeToMapEvent('maptypeid_changed').subscribe(() => {\n            this._mapsWrapper.getMapTypeId().then((mapTypeId) => { this.mapTypeIdChange.emit(mapTypeId); });\n        });\n        this._observableSubscriptions.push(s);\n    }\n    _handleMapZoomChange() {\n        const s = this._mapsWrapper.subscribeToMapEvent('zoom_changed').subscribe(() => {\n            this._mapsWrapper.getZoom().then((z) => {\n                this.zoom = z;\n                this.zoomChange.emit(z);\n            });\n        });\n        this._observableSubscriptions.push(s);\n    }\n    _handleIdleEvent() {\n        const s = this._mapsWrapper.subscribeToMapEvent('idle').subscribe(() => { this.idle.emit(void 0); });\n        this._observableSubscriptions.push(s);\n    }\n    _handleTilesLoadedEvent() {\n        const s = this._mapsWrapper.subscribeToMapEvent('tilesloaded').subscribe(() => this.tilesLoaded.emit(void 0));\n        this._observableSubscriptions.push(s);\n    }\n    _handleMapMouseEvents() {\n        const events = [\n            { name: 'click', emitter: this.mapClick },\n            { name: 'rightclick', emitter: this.mapRightClick },\n            { name: 'dblclick', emitter: this.mapDblClick },\n        ];\n        events.forEach((e) => {\n            const s = this._mapsWrapper.subscribeToMapEvent(e.name).subscribe((event) => {\n                let value = {\n                    coords: {\n                        lat: event.latLng.lat(),\n                        lng: event.latLng.lng(),\n                    },\n                    placeId: event.placeId,\n                };\n                // the placeId will be undefined in case the event was not an IconMouseEvent (google types)\n                if (value.placeId && !this.showDefaultInfoWindow) {\n                    event.stop();\n                }\n                e.emitter.emit(value);\n            });\n            this._observableSubscriptions.push(s);\n        });\n    }\n};\n/**\n * Map option attributes that can change over time\n */\nAgmMap._mapOptionsAttributes = [\n    'disableDoubleClickZoom', 'scrollwheel', 'draggable', 'draggableCursor', 'draggingCursor',\n    'keyboardShortcuts', 'zoomControl', 'zoomControlOptions', 'styles', 'streetViewControl',\n    'streetViewControlOptions', 'zoom', 'mapTypeControl', 'mapTypeControlOptions', 'minZoom',\n    'maxZoom', 'panControl', 'panControlOptions', 'rotateControl', 'rotateControlOptions',\n    'fullscreenControl', 'fullscreenControlOptions', 'scaleControl', 'scaleControlOptions',\n    'mapTypeId', 'clickableIcons', 'gestureHandling', 'tilt', 'restriction',\n];\nAgmMap.ctorParameters = () => [\n    { type: ElementRef },\n    { type: GoogleMapsAPIWrapper },\n    { type: Object, decorators: [{ type: Inject, args: [PLATFORM_ID,] }] },\n    { type: FitBoundsService },\n    { type: NgZone }\n];\n__decorate([\n    Input(),\n    __metadata(\"design:type\", Object)\n], AgmMap.prototype, \"longitude\", void 0);\n__decorate([\n    Input(),\n    __metadata(\"design:type\", Object)\n], AgmMap.prototype, \"latitude\", void 0);\n__decorate([\n    Input(),\n    __metadata(\"design:type\", Object)\n], AgmMap.prototype, \"zoom\", void 0);\n__decorate([\n    Input(),\n    __metadata(\"design:type\", Number)\n], AgmMap.prototype, \"minZoom\", void 0);\n__decorate([\n    Input(),\n    __metadata(\"design:type\", Number)\n], AgmMap.prototype, \"maxZoom\", void 0);\n__decorate([\n    Input(),\n    __metadata(\"design:type\", Number)\n], AgmMap.prototype, \"controlSize\", void 0);\n__decorate([\n    Input('mapDraggable'),\n    __metadata(\"design:type\", Object)\n], AgmMap.prototype, \"draggable\", void 0);\n__decorate([\n    Input(),\n    __metadata(\"design:type\", Object)\n], AgmMap.prototype, \"disableDoubleClickZoom\", void 0);\n__decorate([\n    Input(),\n    __metadata(\"design:type\", Object)\n], AgmMap.prototype, \"disableDefaultUI\", void 0);\n__decorate([\n    Input(),\n    __metadata(\"design:type\", Object)\n], AgmMap.prototype, \"scrollwheel\", void 0);\n__decorate([\n    Input(),\n    __metadata(\"design:type\", String)\n], AgmMap.prototype, \"backgroundColor\", void 0);\n__decorate([\n    Input(),\n    __metadata(\"design:type\", String)\n], AgmMap.prototype, \"draggableCursor\", void 0);\n__decorate([\n    Input(),\n    __metadata(\"design:type\", String)\n], AgmMap.prototype, \"draggingCursor\", void 0);\n__decorate([\n    Input(),\n    __metadata(\"design:type\", Object)\n], AgmMap.prototype, \"keyboardShortcuts\", void 0);\n__decorate([\n    Input(),\n    __metadata(\"design:type\", Boolean)\n], AgmMap.prototype, \"zoomControl\", void 0);\n__decorate([\n    Input(),\n    __metadata(\"design:type\", Object)\n], AgmMap.prototype, \"zoomControlOptions\", void 0);\n__decorate([\n    Input(),\n    __metadata(\"design:type\", Array)\n], AgmMap.prototype, \"styles\", void 0);\n__decorate([\n    Input(),\n    __metadata(\"design:type\", Object)\n], AgmMap.prototype, \"usePanning\", void 0);\n__decorate([\n    Input(),\n    __metadata(\"design:type\", Boolean)\n], AgmMap.prototype, \"streetViewControl\", void 0);\n__decorate([\n    Input(),\n    __metadata(\"design:type\", Object)\n], AgmMap.prototype, \"streetViewControlOptions\", void 0);\n__decorate([\n    Input(),\n    __metadata(\"design:type\", Object)\n], AgmMap.prototype, \"fitBounds\", void 0);\n__decorate([\n    Input(),\n    __metadata(\"design:type\", Object)\n], AgmMap.prototype, \"fitBoundsPadding\", void 0);\n__decorate([\n    Input(),\n    __metadata(\"design:type\", Object)\n], AgmMap.prototype, \"scaleControl\", void 0);\n__decorate([\n    Input(),\n    __metadata(\"design:type\", Object)\n], AgmMap.prototype, \"scaleControlOptions\", void 0);\n__decorate([\n    Input(),\n    __metadata(\"design:type\", Object)\n], AgmMap.prototype, \"mapTypeControl\", void 0);\n__decorate([\n    Input(),\n    __metadata(\"design:type\", Object)\n], AgmMap.prototype, \"mapTypeControlOptions\", void 0);\n__decorate([\n    Input(),\n    __metadata(\"design:type\", Object)\n], AgmMap.prototype, \"panControl\", void 0);\n__decorate([\n    Input(),\n    __metadata(\"design:type\", Object)\n], AgmMap.prototype, \"panControlOptions\", void 0);\n__decorate([\n    Input(),\n    __metadata(\"design:type\", Object)\n], AgmMap.prototype, \"rotateControl\", void 0);\n__decorate([\n    Input(),\n    __metadata(\"design:type\", Object)\n], AgmMap.prototype, \"rotateControlOptions\", void 0);\n__decorate([\n    Input(),\n    __metadata(\"design:type\", Object)\n], AgmMap.prototype, \"fullscreenControl\", void 0);\n__decorate([\n    Input(),\n    __metadata(\"design:type\", Object)\n], AgmMap.prototype, \"fullscreenControlOptions\", void 0);\n__decorate([\n    Input(),\n    __metadata(\"design:type\", String)\n], AgmMap.prototype, \"mapTypeId\", void 0);\n__decorate([\n    Input(),\n    __metadata(\"design:type\", Object)\n], AgmMap.prototype, \"clickableIcons\", void 0);\n__decorate([\n    Input(),\n    __metadata(\"design:type\", Object)\n], AgmMap.prototype, \"showDefaultInfoWindow\", void 0);\n__decorate([\n    Input(),\n    __metadata(\"design:type\", String)\n], AgmMap.prototype, \"gestureHandling\", void 0);\n__decorate([\n    Input(),\n    __metadata(\"design:type\", Object)\n], AgmMap.prototype, \"tilt\", void 0);\n__decorate([\n    Input(),\n    __metadata(\"design:type\", Object)\n], AgmMap.prototype, \"restriction\", void 0);\n__decorate([\n    Output(),\n    __metadata(\"design:type\", EventEmitter)\n], AgmMap.prototype, \"mapClick\", void 0);\n__decorate([\n    Output(),\n    __metadata(\"design:type\", EventEmitter)\n], AgmMap.prototype, \"mapRightClick\", void 0);\n__decorate([\n    Output(),\n    __metadata(\"design:type\", EventEmitter)\n], AgmMap.prototype, \"mapDblClick\", void 0);\n__decorate([\n    Output(),\n    __metadata(\"design:type\", EventEmitter)\n], AgmMap.prototype, \"centerChange\", void 0);\n__decorate([\n    Output(),\n    __metadata(\"design:type\", EventEmitter)\n], AgmMap.prototype, \"boundsChange\", void 0);\n__decorate([\n    Output(),\n    __metadata(\"design:type\", EventEmitter)\n], AgmMap.prototype, \"mapTypeIdChange\", void 0);\n__decorate([\n    Output(),\n    __metadata(\"design:type\", EventEmitter)\n], AgmMap.prototype, \"idle\", void 0);\n__decorate([\n    Output(),\n    __metadata(\"design:type\", EventEmitter)\n], AgmMap.prototype, \"zoomChange\", void 0);\n__decorate([\n    Output(),\n    __metadata(\"design:type\", EventEmitter)\n], AgmMap.prototype, \"mapReady\", void 0);\n__decorate([\n    Output(),\n    __metadata(\"design:type\", EventEmitter)\n], AgmMap.prototype, \"tilesLoaded\", void 0);\nAgmMap = AgmMap_1 = __decorate([\n    Component({\n        selector: 'agm-map',\n        providers: [\n            CircleManager,\n            DataLayerManager,\n            DataLayerManager,\n            FitBoundsService,\n            GoogleMapsAPIWrapper,\n            InfoWindowManager,\n            KmlLayerManager,\n            LayerManager,\n            MarkerManager,\n            PolygonManager,\n            PolylineManager,\n            RectangleManager,\n        ],\n        host: {\n            // todo: deprecated - we will remove it with the next version\n            '[class.sebm-google-map-container]': 'true',\n        },\n        template: `\n              <div class='agm-map-container-inner sebm-google-map-container-inner'></div>\n              <div class='agm-map-content'>\n                <ng-content></ng-content>\n              </div>\n  `,\n        styles: [`\n    .agm-map-container-inner {\n      width: inherit;\n      height: inherit;\n    }\n    .agm-map-content {\n      display:none;\n    }\n  `]\n    }),\n    __param(2, Inject(PLATFORM_ID)),\n    __metadata(\"design:paramtypes\", [ElementRef,\n        GoogleMapsAPIWrapper,\n        Object,\n        FitBoundsService,\n        NgZone])\n], AgmMap);\n\nvar AgmMarker_1;\nlet markerId = 0;\n/**\n * AgmMarker renders a map marker inside a {@link AgmMap}.\n *\n * ### Example\n * ```typescript\n * import { Component } from '@angular/core';\n *\n * @Component({\n *  selector: 'my-map-cmp',\n *  styles: [`\n *    .agm-map-container {\n *      height: 300px;\n *    }\n * `],\n *  template: `\n *    <agm-map [latitude]=\"lat\" [longitude]=\"lng\" [zoom]=\"zoom\">\n *      <agm-marker [latitude]=\"lat\" [longitude]=\"lng\" [label]=\"'M'\">\n *      </agm-marker>\n *    </agm-map>\n *  `\n * })\n * ```\n */\nlet AgmMarker = AgmMarker_1 = class AgmMarker {\n    constructor(_markerManager) {\n        this._markerManager = _markerManager;\n        /**\n         * If true, the marker can be dragged. Default value is false.\n         */\n        // tslint:disable-next-line:no-input-rename\n        this.draggable = false;\n        /**\n         * If true, the marker is visible\n         */\n        this.visible = true;\n        /**\n         * Whether to automatically open the child info window when the marker is clicked.\n         */\n        this.openInfoWindow = true;\n        /**\n         * The marker's opacity between 0.0 and 1.0.\n         */\n        this.opacity = 1;\n        /**\n         * All markers are displayed on the map in order of their zIndex, with higher values displaying in\n         * front of markers with lower values. By default, markers are displayed according to their\n         * vertical position on screen, with lower markers appearing in front of markers further up the\n         * screen.\n         */\n        this.zIndex = 1;\n        /**\n         * If true, the marker can be clicked. Default value is true.\n         */\n        // tslint:disable-next-line:no-input-rename\n        this.clickable = true;\n        /**\n         * This event is fired when the marker's animation property changes.\n         *\n         * @memberof AgmMarker\n         */\n        this.animationChange = new EventEmitter();\n        /**\n         * This event emitter gets emitted when the user clicks on the marker.\n         */\n        this.markerClick = new EventEmitter();\n        /**\n         * This event emitter gets emitted when the user clicks twice on the marker.\n         */\n        this.markerDblClick = new EventEmitter();\n        /**\n         * This event is fired when the user rightclicks on the marker.\n         */\n        this.markerRightClick = new EventEmitter();\n        /**\n         * This event is fired when the user starts dragging the marker.\n         */\n        this.dragStart = new EventEmitter();\n        /**\n         * This event is repeatedly fired while the user drags the marker.\n         */\n        this.drag = new EventEmitter();\n        /**\n         * This event is fired when the user stops dragging the marker.\n         */\n        this.dragEnd = new EventEmitter();\n        /**\n         * This event is fired when the user mouses over the marker.\n         */\n        this.mouseOver = new EventEmitter();\n        /**\n         * This event is fired when the user mouses outside the marker.\n         */\n        this.mouseOut = new EventEmitter();\n        /** @internal */\n        this.infoWindow = new QueryList();\n        this._markerAddedToManger = false;\n        this._observableSubscriptions = [];\n        this._fitBoundsDetails$ = new ReplaySubject(1);\n        this._id = (markerId++).toString();\n    }\n    /* @internal */\n    ngAfterContentInit() {\n        this.handleInfoWindowUpdate();\n        this.infoWindow.changes.subscribe(() => this.handleInfoWindowUpdate());\n    }\n    handleInfoWindowUpdate() {\n        if (this.infoWindow.length > 1) {\n            throw new Error('Expected no more than one info window.');\n        }\n        this.infoWindow.forEach(marker => {\n            marker.hostMarker = this;\n        });\n    }\n    /** @internal */\n    ngOnChanges(changes) {\n        if (typeof this.latitude === 'string') {\n            this.latitude = Number(this.latitude);\n        }\n        if (typeof this.longitude === 'string') {\n            this.longitude = Number(this.longitude);\n        }\n        if (typeof this.latitude !== 'number' || typeof this.longitude !== 'number') {\n            return;\n        }\n        if (!this._markerAddedToManger) {\n            this._markerManager.addMarker(this);\n            this._updateFitBoundsDetails();\n            this._markerAddedToManger = true;\n            this._addEventListeners();\n            return;\n        }\n        if (changes['latitude'] || changes['longitude']) {\n            this._markerManager.updateMarkerPosition(this);\n            this._updateFitBoundsDetails();\n        }\n        if (changes['title']) {\n            this._markerManager.updateTitle(this);\n        }\n        if (changes['label']) {\n            this._markerManager.updateLabel(this);\n        }\n        if (changes['draggable']) {\n            this._markerManager.updateDraggable(this);\n        }\n        if (changes['iconUrl']) {\n            this._markerManager.updateIcon(this);\n        }\n        if (changes['opacity']) {\n            this._markerManager.updateOpacity(this);\n        }\n        if (changes['visible']) {\n            this._markerManager.updateVisible(this);\n        }\n        if (changes['zIndex']) {\n            this._markerManager.updateZIndex(this);\n        }\n        if (changes['clickable']) {\n            this._markerManager.updateClickable(this);\n        }\n        if (changes['animation']) {\n            this._markerManager.updateAnimation(this);\n        }\n    }\n    /** @internal */\n    getFitBoundsDetails$() {\n        return this._fitBoundsDetails$.asObservable();\n    }\n    _updateFitBoundsDetails() {\n        this._fitBoundsDetails$.next({ latLng: { lat: this.latitude, lng: this.longitude } });\n    }\n    _addEventListeners() {\n        const cs = this._markerManager.createEventObservable('click', this).subscribe(() => {\n            if (this.openInfoWindow) {\n                this.infoWindow.forEach(infoWindow => infoWindow.open());\n            }\n            this.markerClick.emit(this);\n        });\n        this._observableSubscriptions.push(cs);\n        const dcs = this._markerManager.createEventObservable('dblclick', this).subscribe(() => {\n            this.markerDblClick.emit(null);\n        });\n        this._observableSubscriptions.push(dcs);\n        const rc = this._markerManager.createEventObservable('rightclick', this).subscribe(() => {\n            this.markerRightClick.emit(null);\n        });\n        this._observableSubscriptions.push(rc);\n        const ds = this._markerManager.createEventObservable('dragstart', this)\n            .subscribe((e) => {\n            this.dragStart.emit({ coords: { lat: e.latLng.lat(), lng: e.latLng.lng() } });\n        });\n        this._observableSubscriptions.push(ds);\n        const d = this._markerManager.createEventObservable('drag', this)\n            .subscribe((e) => {\n            this.drag.emit({ coords: { lat: e.latLng.lat(), lng: e.latLng.lng() } });\n        });\n        this._observableSubscriptions.push(d);\n        const de = this._markerManager.createEventObservable('dragend', this)\n            .subscribe((e) => {\n            this.dragEnd.emit({ coords: { lat: e.latLng.lat(), lng: e.latLng.lng() } });\n        });\n        this._observableSubscriptions.push(de);\n        const mover = this._markerManager.createEventObservable('mouseover', this)\n            .subscribe((e) => {\n            this.mouseOver.emit({ coords: { lat: e.latLng.lat(), lng: e.latLng.lng() } });\n        });\n        this._observableSubscriptions.push(mover);\n        const mout = this._markerManager.createEventObservable('mouseout', this)\n            .subscribe((e) => {\n            this.mouseOut.emit({ coords: { lat: e.latLng.lat(), lng: e.latLng.lng() } });\n        });\n        this._observableSubscriptions.push(mout);\n        const anChng = this._markerManager.createEventObservable('animation_changed', this)\n            .subscribe(() => {\n            this.animationChange.emit(this.animation);\n        });\n        this._observableSubscriptions.push(anChng);\n    }\n    /** @internal */\n    id() { return this._id; }\n    /** @internal */\n    toString() { return 'AgmMarker-' + this._id.toString(); }\n    /** @internal */\n    ngOnDestroy() {\n        this._markerManager.deleteMarker(this);\n        // unsubscribe all registered observable subscriptions\n        this._observableSubscriptions.forEach((s) => s.unsubscribe());\n    }\n};\nAgmMarker.ctorParameters = () => [\n    { type: MarkerManager }\n];\n__decorate([\n    Input(),\n    __metadata(\"design:type\", Number)\n], AgmMarker.prototype, \"latitude\", void 0);\n__decorate([\n    Input(),\n    __metadata(\"design:type\", Number)\n], AgmMarker.prototype, \"longitude\", void 0);\n__decorate([\n    Input(),\n    __metadata(\"design:type\", String)\n], AgmMarker.prototype, \"title\", void 0);\n__decorate([\n    Input(),\n    __metadata(\"design:type\", Object)\n], AgmMarker.prototype, \"label\", void 0);\n__decorate([\n    Input('markerDraggable'),\n    __metadata(\"design:type\", Object)\n], AgmMarker.prototype, \"draggable\", void 0);\n__decorate([\n    Input(),\n    __metadata(\"design:type\", String)\n], AgmMarker.prototype, \"iconUrl\", void 0);\n__decorate([\n    Input(),\n    __metadata(\"design:type\", Object)\n], AgmMarker.prototype, \"visible\", void 0);\n__decorate([\n    Input(),\n    __metadata(\"design:type\", Object)\n], AgmMarker.prototype, \"openInfoWindow\", void 0);\n__decorate([\n    Input(),\n    __metadata(\"design:type\", Object)\n], AgmMarker.prototype, \"opacity\", void 0);\n__decorate([\n    Input(),\n    __metadata(\"design:type\", Object)\n], AgmMarker.prototype, \"zIndex\", void 0);\n__decorate([\n    Input('markerClickable'),\n    __metadata(\"design:type\", Object)\n], AgmMarker.prototype, \"clickable\", void 0);\n__decorate([\n    Input(),\n    __metadata(\"design:type\", String)\n], AgmMarker.prototype, \"animation\", void 0);\n__decorate([\n    Output(),\n    __metadata(\"design:type\", Object)\n], AgmMarker.prototype, \"animationChange\", void 0);\n__decorate([\n    Output(),\n    __metadata(\"design:type\", EventEmitter)\n], AgmMarker.prototype, \"markerClick\", void 0);\n__decorate([\n    Output(),\n    __metadata(\"design:type\", EventEmitter)\n], AgmMarker.prototype, \"markerDblClick\", void 0);\n__decorate([\n    Output(),\n    __metadata(\"design:type\", EventEmitter)\n], AgmMarker.prototype, \"markerRightClick\", void 0);\n__decorate([\n    Output(),\n    __metadata(\"design:type\", EventEmitter)\n], AgmMarker.prototype, \"dragStart\", void 0);\n__decorate([\n    Output(),\n    __metadata(\"design:type\", EventEmitter)\n], AgmMarker.prototype, \"drag\", void 0);\n__decorate([\n    Output(),\n    __metadata(\"design:type\", EventEmitter)\n], AgmMarker.prototype, \"dragEnd\", void 0);\n__decorate([\n    Output(),\n    __metadata(\"design:type\", EventEmitter)\n], AgmMarker.prototype, \"mouseOver\", void 0);\n__decorate([\n    Output(),\n    __metadata(\"design:type\", EventEmitter)\n], AgmMarker.prototype, \"mouseOut\", void 0);\n__decorate([\n    ContentChildren(AgmInfoWindow),\n    __metadata(\"design:type\", QueryList)\n], AgmMarker.prototype, \"infoWindow\", void 0);\nAgmMarker = AgmMarker_1 = __decorate([\n    Directive({\n        selector: 'agm-marker',\n        providers: [\n            { provide: FitBoundsAccessor, useExisting: forwardRef(() => AgmMarker_1) },\n        ],\n        inputs: [\n            'latitude', 'longitude', 'title', 'label', 'draggable: markerDraggable', 'iconUrl',\n            'openInfoWindow', 'opacity', 'visible', 'zIndex', 'animation',\n        ],\n        outputs: ['markerClick', 'dragStart', 'drag', 'dragEnd', 'mouseOver', 'mouseOut'],\n    }),\n    __metadata(\"design:paramtypes\", [MarkerManager])\n], AgmMarker);\n\nvar AgmPolygon_1;\n/**\n * AgmPolygon renders a polygon on a {@link AgmMap}\n *\n * ### Example\n * ```typescript\n * import { Component } from '@angular/core';\n *\n * @Component({\n *  selector: 'my-map-cmp',\n *  styles: [`\n *    agm-map {\n *      height: 300px;\n *    }\n * `],\n *  template: `\n *    <agm-map [latitude]=\"lat\" [longitude]=\"lng\" [zoom]=\"zoom\">\n *      <agm-polygon [paths]=\"paths\">\n *      </agm-polygon>\n *    </agm-map>\n *  `\n * })\n * export class MyMapCmp {\n *   lat: number = 0;\n *   lng: number = 0;\n *   zoom: number = 10;\n *   paths: Array<LatLngLiteral> = [\n *     { lat: 0,  lng: 10 },\n *     { lat: 0,  lng: 20 },\n *     { lat: 10, lng: 20 },\n *     { lat: 10, lng: 10 },\n *     { lat: 0,  lng: 10 }\n *   ]\n *   // Nesting paths will create a hole where they overlap;\n *   nestedPaths: Array<Array<LatLngLiteral>> = [[\n *     { lat: 0,  lng: 10 },\n *     { lat: 0,  lng: 20 },\n *     { lat: 10, lng: 20 },\n *     { lat: 10, lng: 10 },\n *     { lat: 0,  lng: 10 }\n *   ], [\n *     { lat: 0, lng: 15 },\n *     { lat: 0, lng: 20 },\n *     { lat: 5, lng: 20 },\n *     { lat: 5, lng: 15 },\n *     { lat: 0, lng: 15 }\n *   ]]\n * }\n * ```\n */\nlet AgmPolygon = AgmPolygon_1 = class AgmPolygon {\n    constructor(_polygonManager) {\n        this._polygonManager = _polygonManager;\n        /**\n         * Indicates whether this Polygon handles mouse events. Defaults to true.\n         */\n        this.clickable = true;\n        /**\n         * If set to true, the user can drag this shape over the map. The geodesic\n         * property defines the mode of dragging. Defaults to false.\n         */\n        // tslint:disable-next-line:no-input-rename\n        this.draggable = false;\n        /**\n         * If set to true, the user can edit this shape by dragging the control\n         * points shown at the vertices and on each segment. Defaults to false.\n         */\n        this.editable = false;\n        /**\n         * When true, edges of the polygon are interpreted as geodesic and will\n         * follow the curvature of the Earth. When false, edges of the polygon are\n         * rendered as straight lines in screen space. Note that the shape of a\n         * geodesic polygon may appear to change when dragged, as the dimensions\n         * are maintained relative to the surface of the earth. Defaults to false.\n         */\n        this.geodesic = false;\n        /**\n         * The ordered sequence of coordinates that designates a closed loop.\n         * Unlike polylines, a polygon may consist of one or more paths.\n         *  As a result, the paths property may specify one or more arrays of\n         * LatLng coordinates. Paths are closed automatically; do not repeat the\n         * first vertex of the path as the last vertex. Simple polygons may be\n         * defined using a single array of LatLngs. More complex polygons may\n         * specify an array of arrays. Any simple arrays are converted into Arrays.\n         * Inserting or removing LatLngs from the Array will automatically update\n         * the polygon on the map.\n         */\n        this.paths = [];\n        /**\n         * This event is fired when the DOM click event is fired on the Polygon.\n         */\n        this.polyClick = new EventEmitter();\n        /**\n         * This event is fired when the DOM dblclick event is fired on the Polygon.\n         */\n        this.polyDblClick = new EventEmitter();\n        /**\n         * This event is repeatedly fired while the user drags the polygon.\n         */\n        this.polyDrag = new EventEmitter();\n        /**\n         * This event is fired when the user stops dragging the polygon.\n         */\n        this.polyDragEnd = new EventEmitter();\n        /**\n         * This event is fired when the user starts dragging the polygon.\n         */\n        this.polyDragStart = new EventEmitter();\n        /**\n         * This event is fired when the DOM mousedown event is fired on the Polygon.\n         */\n        this.polyMouseDown = new EventEmitter();\n        /**\n         * This event is fired when the DOM mousemove event is fired on the Polygon.\n         */\n        this.polyMouseMove = new EventEmitter();\n        /**\n         * This event is fired on Polygon mouseout.\n         */\n        this.polyMouseOut = new EventEmitter();\n        /**\n         * This event is fired on Polygon mouseover.\n         */\n        this.polyMouseOver = new EventEmitter();\n        /**\n         * This event is fired whe the DOM mouseup event is fired on the Polygon\n         */\n        this.polyMouseUp = new EventEmitter();\n        /**\n         * This event is fired when the Polygon is right-clicked on.\n         */\n        this.polyRightClick = new EventEmitter();\n        /**\n         * This event is fired after Polygon first path changes.\n         */\n        this.polyPathsChange = new EventEmitter();\n        this._polygonAddedToManager = false;\n        this._subscriptions = [];\n    }\n    /** @internal */\n    ngAfterContentInit() {\n        if (!this._polygonAddedToManager) {\n            this._init();\n        }\n    }\n    ngOnChanges(changes) {\n        if (!this._polygonAddedToManager) {\n            this._init();\n            return;\n        }\n        this._polygonManager.setPolygonOptions(this, this._updatePolygonOptions(changes));\n    }\n    _init() {\n        this._polygonManager.addPolygon(this);\n        this._polygonAddedToManager = true;\n        this._addEventListeners();\n    }\n    _addEventListeners() {\n        const handlers = [\n            { name: 'click', handler: (ev) => this.polyClick.emit(ev) },\n            { name: 'dblclick', handler: (ev) => this.polyDblClick.emit(ev) },\n            { name: 'drag', handler: (ev) => this.polyDrag.emit(ev) },\n            { name: 'dragend', handler: (ev) => this.polyDragEnd.emit(ev) },\n            { name: 'dragstart', handler: (ev) => this.polyDragStart.emit(ev) },\n            { name: 'mousedown', handler: (ev) => this.polyMouseDown.emit(ev) },\n            { name: 'mousemove', handler: (ev) => this.polyMouseMove.emit(ev) },\n            { name: 'mouseout', handler: (ev) => this.polyMouseOut.emit(ev) },\n            { name: 'mouseover', handler: (ev) => this.polyMouseOver.emit(ev) },\n            { name: 'mouseup', handler: (ev) => this.polyMouseUp.emit(ev) },\n            { name: 'rightclick', handler: (ev) => this.polyRightClick.emit(ev) },\n        ];\n        handlers.forEach((obj) => {\n            const os = this._polygonManager.createEventObservable(obj.name, this).subscribe(obj.handler);\n            this._subscriptions.push(os);\n        });\n        this._polygonManager.createPathEventObservable(this)\n            .then(paths$ => {\n            const os = paths$.subscribe(pathEvent => this.polyPathsChange.emit(pathEvent));\n            this._subscriptions.push(os);\n        });\n    }\n    _updatePolygonOptions(changes) {\n        return Object.keys(changes)\n            .filter(k => AgmPolygon_1._polygonOptionsAttributes.indexOf(k) !== -1)\n            .reduce((obj, k) => {\n            obj[k] = changes[k].currentValue;\n            return obj;\n        }, {});\n    }\n    /** @internal */\n    id() { return this._id; }\n    /** @internal */\n    ngOnDestroy() {\n        this._polygonManager.deletePolygon(this);\n        // unsubscribe all registered observable subscriptions\n        this._subscriptions.forEach((s) => s.unsubscribe());\n    }\n    getPath() {\n        return this._polygonManager.getPath(this);\n    }\n    getPaths() {\n        return this._polygonManager.getPaths(this);\n    }\n};\nAgmPolygon._polygonOptionsAttributes = [\n    'clickable', 'draggable', 'editable', 'fillColor', 'fillOpacity', 'geodesic', 'icon', 'map',\n    'paths', 'strokeColor', 'strokeOpacity', 'strokeWeight', 'visible', 'zIndex', 'draggable',\n    'editable', 'visible',\n];\nAgmPolygon.ctorParameters = () => [\n    { type: PolygonManager }\n];\n__decorate([\n    Input(),\n    __metadata(\"design:type\", Object)\n], AgmPolygon.prototype, \"clickable\", void 0);\n__decorate([\n    Input('polyDraggable'),\n    __metadata(\"design:type\", Object)\n], AgmPolygon.prototype, \"draggable\", void 0);\n__decorate([\n    Input(),\n    __metadata(\"design:type\", Object)\n], AgmPolygon.prototype, \"editable\", void 0);\n__decorate([\n    Input(),\n    __metadata(\"design:type\", String)\n], AgmPolygon.prototype, \"fillColor\", void 0);\n__decorate([\n    Input(),\n    __metadata(\"design:type\", Number)\n], AgmPolygon.prototype, \"fillOpacity\", void 0);\n__decorate([\n    Input(),\n    __metadata(\"design:type\", Object)\n], AgmPolygon.prototype, \"geodesic\", void 0);\n__decorate([\n    Input(),\n    __metadata(\"design:type\", Array)\n], AgmPolygon.prototype, \"paths\", void 0);\n__decorate([\n    Input(),\n    __metadata(\"design:type\", String)\n], AgmPolygon.prototype, \"strokeColor\", void 0);\n__decorate([\n    Input(),\n    __metadata(\"design:type\", Number)\n], AgmPolygon.prototype, \"strokeOpacity\", void 0);\n__decorate([\n    Input(),\n    __metadata(\"design:type\", Number)\n], AgmPolygon.prototype, \"strokeWeight\", void 0);\n__decorate([\n    Input(),\n    __metadata(\"design:type\", Boolean)\n], AgmPolygon.prototype, \"visible\", void 0);\n__decorate([\n    Input(),\n    __metadata(\"design:type\", Number)\n], AgmPolygon.prototype, \"zIndex\", void 0);\n__decorate([\n    Output(),\n    __metadata(\"design:type\", EventEmitter)\n], AgmPolygon.prototype, \"polyClick\", void 0);\n__decorate([\n    Output(),\n    __metadata(\"design:type\", EventEmitter)\n], AgmPolygon.prototype, \"polyDblClick\", void 0);\n__decorate([\n    Output(),\n    __metadata(\"design:type\", EventEmitter)\n], AgmPolygon.prototype, \"polyDrag\", void 0);\n__decorate([\n    Output(),\n    __metadata(\"design:type\", EventEmitter)\n], AgmPolygon.prototype, \"polyDragEnd\", void 0);\n__decorate([\n    Output(),\n    __metadata(\"design:type\", EventEmitter)\n], AgmPolygon.prototype, \"polyDragStart\", void 0);\n__decorate([\n    Output(),\n    __metadata(\"design:type\", EventEmitter)\n], AgmPolygon.prototype, \"polyMouseDown\", void 0);\n__decorate([\n    Output(),\n    __metadata(\"design:type\", EventEmitter)\n], AgmPolygon.prototype, \"polyMouseMove\", void 0);\n__decorate([\n    Output(),\n    __metadata(\"design:type\", EventEmitter)\n], AgmPolygon.prototype, \"polyMouseOut\", void 0);\n__decorate([\n    Output(),\n    __metadata(\"design:type\", EventEmitter)\n], AgmPolygon.prototype, \"polyMouseOver\", void 0);\n__decorate([\n    Output(),\n    __metadata(\"design:type\", EventEmitter)\n], AgmPolygon.prototype, \"polyMouseUp\", void 0);\n__decorate([\n    Output(),\n    __metadata(\"design:type\", EventEmitter)\n], AgmPolygon.prototype, \"polyRightClick\", void 0);\n__decorate([\n    Output(),\n    __metadata(\"design:type\", Object)\n], AgmPolygon.prototype, \"polyPathsChange\", void 0);\nAgmPolygon = AgmPolygon_1 = __decorate([\n    Directive({\n        selector: 'agm-polygon',\n    }),\n    __metadata(\"design:paramtypes\", [PolygonManager])\n], AgmPolygon);\n\n/**\n * AgmPolylineIcon enables to add polyline sequences to add arrows, circle,\n * or custom icons either along the entire line, or in a specific part of it.\n * See https://developers.google.com/maps/documentation/javascript/shapes#polyline_customize\n *\n * ### Example\n * ```html\n *    <agm-map [latitude]=\"lat\" [longitude]=\"lng\" [zoom]=\"zoom\">\n *      <agm-polyline>\n *          <agm-icon-sequence [fixedRotation]=\"true\" [path]=\"'FORWARD_OPEN_ARROW'\">\n *          </agm-icon-sequence>\n *      </agm-polyline>\n *    </agm-map>\n * ```\n *\n * @export\n * @class AgmPolylineIcon\n */\nlet AgmPolylineIcon = class AgmPolylineIcon {\n    ngOnInit() {\n        if (this.path == null) {\n            throw new Error('Icon Sequence path is required');\n        }\n    }\n};\n__decorate([\n    Input(),\n    __metadata(\"design:type\", Boolean)\n], AgmPolylineIcon.prototype, \"fixedRotation\", void 0);\n__decorate([\n    Input(),\n    __metadata(\"design:type\", String)\n], AgmPolylineIcon.prototype, \"offset\", void 0);\n__decorate([\n    Input(),\n    __metadata(\"design:type\", String)\n], AgmPolylineIcon.prototype, \"repeat\", void 0);\n__decorate([\n    Input(),\n    __metadata(\"design:type\", Number)\n], AgmPolylineIcon.prototype, \"anchorX\", void 0);\n__decorate([\n    Input(),\n    __metadata(\"design:type\", Number)\n], AgmPolylineIcon.prototype, \"anchorY\", void 0);\n__decorate([\n    Input(),\n    __metadata(\"design:type\", String)\n], AgmPolylineIcon.prototype, \"fillColor\", void 0);\n__decorate([\n    Input(),\n    __metadata(\"design:type\", Number)\n], AgmPolylineIcon.prototype, \"fillOpacity\", void 0);\n__decorate([\n    Input(),\n    __metadata(\"design:type\", String)\n], AgmPolylineIcon.prototype, \"path\", void 0);\n__decorate([\n    Input(),\n    __metadata(\"design:type\", Number)\n], AgmPolylineIcon.prototype, \"rotation\", void 0);\n__decorate([\n    Input(),\n    __metadata(\"design:type\", Number)\n], AgmPolylineIcon.prototype, \"scale\", void 0);\n__decorate([\n    Input(),\n    __metadata(\"design:type\", String)\n], AgmPolylineIcon.prototype, \"strokeColor\", void 0);\n__decorate([\n    Input(),\n    __metadata(\"design:type\", Number)\n], AgmPolylineIcon.prototype, \"strokeOpacity\", void 0);\n__decorate([\n    Input(),\n    __metadata(\"design:type\", Number)\n], AgmPolylineIcon.prototype, \"strokeWeight\", void 0);\nAgmPolylineIcon = __decorate([\n    Directive({ selector: 'agm-polyline agm-icon-sequence' })\n], AgmPolylineIcon);\n\nvar AgmPolylinePoint_1;\n/**\n * AgmPolylinePoint represents one element of a polyline within a  {@link\n * AgmPolyline}\n */\nlet AgmPolylinePoint = AgmPolylinePoint_1 = class AgmPolylinePoint {\n    constructor() {\n        /**\n         * This event emitter gets emitted when the position of the point changed.\n         */\n        this.positionChanged = new EventEmitter();\n    }\n    ngOnChanges(changes) {\n        if (changes['latitude'] || changes['longitude']) {\n            const position = {\n                lat: changes['latitude'] ? changes['latitude'].currentValue : this.latitude,\n                lng: changes['longitude'] ? changes['longitude'].currentValue : this.longitude,\n            };\n            this.positionChanged.emit(position);\n        }\n    }\n    /** @internal */\n    getFitBoundsDetails$() {\n        return this.positionChanged.pipe(startWith({ lat: this.latitude, lng: this.longitude }), map(position => ({ latLng: position })));\n    }\n};\n__decorate([\n    Input(),\n    __metadata(\"design:type\", Number)\n], AgmPolylinePoint.prototype, \"latitude\", void 0);\n__decorate([\n    Input(),\n    __metadata(\"design:type\", Number)\n], AgmPolylinePoint.prototype, \"longitude\", void 0);\n__decorate([\n    Output(),\n    __metadata(\"design:type\", EventEmitter)\n], AgmPolylinePoint.prototype, \"positionChanged\", void 0);\nAgmPolylinePoint = AgmPolylinePoint_1 = __decorate([\n    Directive({\n        selector: 'agm-polyline-point',\n        providers: [\n            { provide: FitBoundsAccessor, useExisting: forwardRef(() => AgmPolylinePoint_1) },\n        ],\n    }),\n    __metadata(\"design:paramtypes\", [])\n], AgmPolylinePoint);\n\nvar AgmPolyline_1;\nlet polylineId = 0;\n/**\n * AgmPolyline renders a polyline on a {@link AgmMap}\n *\n * ### Example\n * ```typescript\n * import { Component } from '@angular/core';\n *\n * @Component({\n *  selector: 'my-map-cmp',\n *  styles: [`\n *    .agm-map-container {\n *      height: 300px;\n *    }\n * `],\n *  template: `\n *    <agm-map [latitude]=\"lat\" [longitude]=\"lng\" [zoom]=\"zoom\">\n *      <agm-polyline>\n *          <agm-polyline-point [latitude]=\"latA\" [longitude]=\"lngA\">\n *          </agm-polyline-point>\n *          <agm-polyline-point [latitude]=\"latB\" [longitude]=\"lngB\">\n *          </agm-polyline-point>\n *      </agm-polyline>\n *    </agm-map>\n *  `\n * })\n * ```\n */\nlet AgmPolyline = AgmPolyline_1 = class AgmPolyline {\n    constructor(_polylineManager) {\n        this._polylineManager = _polylineManager;\n        /**\n         * Indicates whether this Polyline handles mouse events. Defaults to true.\n         */\n        this.clickable = true;\n        /**\n         * If set to true, the user can drag this shape over the map. The geodesic property defines the\n         * mode of dragging. Defaults to false.\n         */\n        // tslint:disable-next-line:no-input-rename\n        this.draggable = false;\n        /**\n         * If set to true, the user can edit this shape by dragging the control points shown at the\n         * vertices and on each segment. Defaults to false.\n         */\n        this.editable = false;\n        /**\n         * When true, edges of the polygon are interpreted as geodesic and will follow the curvature of\n         * the Earth. When false, edges of the polygon are rendered as straight lines in screen space.\n         * Note that the shape of a geodesic polygon may appear to change when dragged, as the dimensions\n         * are maintained relative to the surface of the earth. Defaults to false.\n         */\n        this.geodesic = false;\n        /**\n         * Whether this polyline is visible on the map. Defaults to true.\n         */\n        this.visible = true;\n        /**\n         * This event is fired when the DOM click event is fired on the Polyline.\n         */\n        this.lineClick = new EventEmitter();\n        /**\n         * This event is fired when the DOM dblclick event is fired on the Polyline.\n         */\n        this.lineDblClick = new EventEmitter();\n        /**\n         * This event is repeatedly fired while the user drags the polyline.\n         */\n        this.lineDrag = new EventEmitter();\n        /**\n         * This event is fired when the user stops dragging the polyline.\n         */\n        this.lineDragEnd = new EventEmitter();\n        /**\n         * This event is fired when the user starts dragging the polyline.\n         */\n        this.lineDragStart = new EventEmitter();\n        /**\n         * This event is fired when the DOM mousedown event is fired on the Polyline.\n         */\n        this.lineMouseDown = new EventEmitter();\n        /**\n         * This event is fired when the DOM mousemove event is fired on the Polyline.\n         */\n        this.lineMouseMove = new EventEmitter();\n        /**\n         * This event is fired on Polyline mouseout.\n         */\n        this.lineMouseOut = new EventEmitter();\n        /**\n         * This event is fired on Polyline mouseover.\n         */\n        this.lineMouseOver = new EventEmitter();\n        /**\n         * This event is fired whe the DOM mouseup event is fired on the Polyline\n         */\n        this.lineMouseUp = new EventEmitter();\n        /**\n         * This event is fired when the Polyline is right-clicked on.\n         */\n        this.lineRightClick = new EventEmitter();\n        /**\n         * This event is fired after Polyline's path changes.\n         */\n        this.polyPathChange = new EventEmitter();\n        this._polylineAddedToManager = false;\n        this._subscriptions = [];\n        this._id = (polylineId++).toString();\n    }\n    /** @internal */\n    ngAfterContentInit() {\n        if (this.points.length) {\n            this.points.forEach((point) => {\n                const s = point.positionChanged.subscribe(() => { this._polylineManager.updatePolylinePoints(this); });\n                this._subscriptions.push(s);\n            });\n        }\n        if (!this._polylineAddedToManager) {\n            this._init();\n        }\n        const pointSub = this.points.changes.subscribe(() => this._polylineManager.updatePolylinePoints(this));\n        this._subscriptions.push(pointSub);\n        this._polylineManager.updatePolylinePoints(this);\n        const iconSub = this.iconSequences.changes.subscribe(() => this._polylineManager.updateIconSequences(this));\n        this._subscriptions.push(iconSub);\n    }\n    ngOnChanges(changes) {\n        if (!this._polylineAddedToManager) {\n            this._init();\n            return;\n        }\n        let options = {};\n        const optionKeys = Object.keys(changes).filter(k => AgmPolyline_1._polylineOptionsAttributes.indexOf(k) !== -1);\n        optionKeys.forEach(k => options[k] = changes[k].currentValue);\n        this._polylineManager.setPolylineOptions(this, options);\n    }\n    getPath() {\n        return this._polylineManager.getPath(this);\n    }\n    _init() {\n        this._polylineManager.addPolyline(this);\n        this._polylineAddedToManager = true;\n        this._addEventListeners();\n    }\n    _addEventListeners() {\n        const handlers = [\n            { name: 'click', handler: (ev) => this.lineClick.emit(ev) },\n            { name: 'dblclick', handler: (ev) => this.lineDblClick.emit(ev) },\n            { name: 'drag', handler: (ev) => this.lineDrag.emit(ev) },\n            { name: 'dragend', handler: (ev) => this.lineDragEnd.emit(ev) },\n            { name: 'dragstart', handler: (ev) => this.lineDragStart.emit(ev) },\n            { name: 'mousedown', handler: (ev) => this.lineMouseDown.emit(ev) },\n            { name: 'mousemove', handler: (ev) => this.lineMouseMove.emit(ev) },\n            { name: 'mouseout', handler: (ev) => this.lineMouseOut.emit(ev) },\n            { name: 'mouseover', handler: (ev) => this.lineMouseOver.emit(ev) },\n            { name: 'mouseup', handler: (ev) => this.lineMouseUp.emit(ev) },\n            { name: 'rightclick', handler: (ev) => this.lineRightClick.emit(ev) },\n        ];\n        handlers.forEach((obj) => {\n            const os = this._polylineManager.createEventObservable(obj.name, this).subscribe(obj.handler);\n            this._subscriptions.push(os);\n        });\n        this._polylineManager.createPathEventObservable(this).then((ob$) => {\n            const os = ob$.subscribe(pathEvent => this.polyPathChange.emit(pathEvent));\n            this._subscriptions.push(os);\n        });\n    }\n    /** @internal */\n    _getPoints() {\n        if (this.points) {\n            return this.points.toArray();\n        }\n        return [];\n    }\n    _getIcons() {\n        if (this.iconSequences) {\n            return this.iconSequences.toArray();\n        }\n        return [];\n    }\n    /** @internal */\n    id() { return this._id; }\n    /** @internal */\n    ngOnDestroy() {\n        this._polylineManager.deletePolyline(this);\n        // unsubscribe all registered observable subscriptions\n        this._subscriptions.forEach((s) => s.unsubscribe());\n    }\n};\nAgmPolyline._polylineOptionsAttributes = [\n    'draggable', 'editable', 'visible', 'geodesic', 'strokeColor', 'strokeOpacity', 'strokeWeight',\n    'zIndex',\n];\nAgmPolyline.ctorParameters = () => [\n    { type: PolylineManager }\n];\n__decorate([\n    Input(),\n    __metadata(\"design:type\", Object)\n], AgmPolyline.prototype, \"clickable\", void 0);\n__decorate([\n    Input('polylineDraggable'),\n    __metadata(\"design:type\", Object)\n], AgmPolyline.prototype, \"draggable\", void 0);\n__decorate([\n    Input(),\n    __metadata(\"design:type\", Object)\n], AgmPolyline.prototype, \"editable\", void 0);\n__decorate([\n    Input(),\n    __metadata(\"design:type\", Object)\n], AgmPolyline.prototype, \"geodesic\", void 0);\n__decorate([\n    Input(),\n    __metadata(\"design:type\", String)\n], AgmPolyline.prototype, \"strokeColor\", void 0);\n__decorate([\n    Input(),\n    __metadata(\"design:type\", Number)\n], AgmPolyline.prototype, \"strokeOpacity\", void 0);\n__decorate([\n    Input(),\n    __metadata(\"design:type\", Number)\n], AgmPolyline.prototype, \"strokeWeight\", void 0);\n__decorate([\n    Input(),\n    __metadata(\"design:type\", Object)\n], AgmPolyline.prototype, \"visible\", void 0);\n__decorate([\n    Input(),\n    __metadata(\"design:type\", Number)\n], AgmPolyline.prototype, \"zIndex\", void 0);\n__decorate([\n    Output(),\n    __metadata(\"design:type\", EventEmitter)\n], AgmPolyline.prototype, \"lineClick\", void 0);\n__decorate([\n    Output(),\n    __metadata(\"design:type\", EventEmitter)\n], AgmPolyline.prototype, \"lineDblClick\", void 0);\n__decorate([\n    Output(),\n    __metadata(\"design:type\", EventEmitter)\n], AgmPolyline.prototype, \"lineDrag\", void 0);\n__decorate([\n    Output(),\n    __metadata(\"design:type\", EventEmitter)\n], AgmPolyline.prototype, \"lineDragEnd\", void 0);\n__decorate([\n    Output(),\n    __metadata(\"design:type\", EventEmitter)\n], AgmPolyline.prototype, \"lineDragStart\", void 0);\n__decorate([\n    Output(),\n    __metadata(\"design:type\", EventEmitter)\n], AgmPolyline.prototype, \"lineMouseDown\", void 0);\n__decorate([\n    Output(),\n    __metadata(\"design:type\", EventEmitter)\n], AgmPolyline.prototype, \"lineMouseMove\", void 0);\n__decorate([\n    Output(),\n    __metadata(\"design:type\", EventEmitter)\n], AgmPolyline.prototype, \"lineMouseOut\", void 0);\n__decorate([\n    Output(),\n    __metadata(\"design:type\", EventEmitter)\n], AgmPolyline.prototype, \"lineMouseOver\", void 0);\n__decorate([\n    Output(),\n    __metadata(\"design:type\", EventEmitter)\n], AgmPolyline.prototype, \"lineMouseUp\", void 0);\n__decorate([\n    Output(),\n    __metadata(\"design:type\", EventEmitter)\n], AgmPolyline.prototype, \"lineRightClick\", void 0);\n__decorate([\n    Output(),\n    __metadata(\"design:type\", Object)\n], AgmPolyline.prototype, \"polyPathChange\", void 0);\n__decorate([\n    ContentChildren(AgmPolylinePoint),\n    __metadata(\"design:type\", QueryList)\n], AgmPolyline.prototype, \"points\", void 0);\n__decorate([\n    ContentChildren(AgmPolylineIcon),\n    __metadata(\"design:type\", QueryList)\n], AgmPolyline.prototype, \"iconSequences\", void 0);\nAgmPolyline = AgmPolyline_1 = __decorate([\n    Directive({\n        selector: 'agm-polyline',\n    }),\n    __metadata(\"design:paramtypes\", [PolylineManager])\n], AgmPolyline);\n\nvar AgmRectangle_1;\nlet AgmRectangle = AgmRectangle_1 = class AgmRectangle {\n    constructor(_manager) {\n        this._manager = _manager;\n        /**\n         * Indicates whether this Rectangle handles mouse events. Defaults to true.\n         */\n        this.clickable = true;\n        /**\n         * If set to true, the user can drag this rectangle over the map. Defaults to false.\n         */\n        // tslint:disable-next-line:no-input-rename\n        this.draggable = false;\n        /**\n         * If set to true, the user can edit this rectangle by dragging the control points shown at\n         * the center and around the circumference of the rectangle. Defaults to false.\n         */\n        this.editable = false;\n        /**\n         * The stroke position. Defaults to CENTER.\n         * This property is not supported on Internet Explorer 8 and earlier.\n         */\n        this.strokePosition = 'CENTER';\n        /**\n         * The stroke width in pixels.\n         */\n        this.strokeWeight = 0;\n        /**\n         * Whether this rectangle is visible on the map. Defaults to true.\n         */\n        this.visible = true;\n        /**\n         * This event is fired when the rectangle's is changed.\n         */\n        this.boundsChange = new EventEmitter();\n        /**\n         * This event emitter gets emitted when the user clicks on the rectangle.\n         */\n        this.rectangleClick = new EventEmitter();\n        /**\n         * This event emitter gets emitted when the user clicks on the rectangle.\n         */\n        this.rectangleDblClick = new EventEmitter();\n        /**\n         * This event is repeatedly fired while the user drags the rectangle.\n         */\n        this.drag = new EventEmitter();\n        /**\n         * This event is fired when the user stops dragging the rectangle.\n         */\n        this.dragEnd = new EventEmitter();\n        /**\n         * This event is fired when the user starts dragging the rectangle.\n         */\n        this.dragStart = new EventEmitter();\n        /**\n         * This event is fired when the DOM mousedown event is fired on the rectangle.\n         */\n        this.mouseDown = new EventEmitter();\n        /**\n         * This event is fired when the DOM mousemove event is fired on the rectangle.\n         */\n        this.mouseMove = new EventEmitter();\n        /**\n         * This event is fired on rectangle mouseout.\n         */\n        this.mouseOut = new EventEmitter();\n        /**\n         * This event is fired on rectangle mouseover.\n         */\n        this.mouseOver = new EventEmitter();\n        /**\n         * This event is fired when the DOM mouseup event is fired on the rectangle.\n         */\n        this.mouseUp = new EventEmitter();\n        /**\n         * This event is fired when the rectangle is right-clicked on.\n         */\n        this.rightClick = new EventEmitter();\n        this._rectangleAddedToManager = false;\n        this._eventSubscriptions = [];\n    }\n    /** @internal */\n    ngOnInit() {\n        this._manager.addRectangle(this);\n        this._rectangleAddedToManager = true;\n        this._registerEventListeners();\n    }\n    /** @internal */\n    ngOnChanges(changes) {\n        if (!this._rectangleAddedToManager) {\n            return;\n        }\n        if (changes['north'] ||\n            changes['east'] ||\n            changes['south'] ||\n            changes['west']) {\n            this._manager.setBounds(this);\n        }\n        if (changes['editable']) {\n            this._manager.setEditable(this);\n        }\n        if (changes['draggable']) {\n            this._manager.setDraggable(this);\n        }\n        if (changes['visible']) {\n            this._manager.setVisible(this);\n        }\n        this._updateRectangleOptionsChanges(changes);\n    }\n    _updateRectangleOptionsChanges(changes) {\n        let options = {};\n        let optionKeys = Object.keys(changes).filter(k => AgmRectangle_1._mapOptions.indexOf(k) !== -1);\n        optionKeys.forEach(k => {\n            options[k] = changes[k].currentValue;\n        });\n        if (optionKeys.length > 0) {\n            this._manager.setOptions(this, options);\n        }\n    }\n    _registerEventListeners() {\n        let events = new Map();\n        events.set('bounds_changed', this.boundsChange);\n        events.set('click', this.rectangleClick);\n        events.set('dblclick', this.rectangleDblClick);\n        events.set('drag', this.drag);\n        events.set('dragend', this.dragEnd);\n        events.set('dragStart', this.dragStart);\n        events.set('mousedown', this.mouseDown);\n        events.set('mousemove', this.mouseMove);\n        events.set('mouseout', this.mouseOut);\n        events.set('mouseover', this.mouseOver);\n        events.set('mouseup', this.mouseUp);\n        events.set('rightclick', this.rightClick);\n        events.forEach((eventEmitter, eventName) => {\n            this._eventSubscriptions.push(this._manager\n                .createEventObservable(eventName, this)\n                .subscribe(value => {\n                switch (eventName) {\n                    case 'bounds_changed':\n                        this._manager.getBounds(this).then(bounds => eventEmitter.emit({\n                            north: bounds.getNorthEast().lat(),\n                            east: bounds.getNorthEast().lng(),\n                            south: bounds.getSouthWest().lat(),\n                            west: bounds.getSouthWest().lng(),\n                        }));\n                        break;\n                    default:\n                        eventEmitter.emit({\n                            coords: { lat: value.latLng.lat(), lng: value.latLng.lng() },\n                        });\n                }\n            }));\n        });\n    }\n    /** @internal */\n    ngOnDestroy() {\n        this._eventSubscriptions.forEach(function (s) {\n            s.unsubscribe();\n        });\n        this._eventSubscriptions = null;\n        this._manager.removeRectangle(this);\n    }\n    /**\n     * Gets the LatLngBounds of this Rectangle.\n     */\n    getBounds() {\n        return this._manager.getBounds(this);\n    }\n};\nAgmRectangle._mapOptions = [\n    'fillColor',\n    'fillOpacity',\n    'strokeColor',\n    'strokeOpacity',\n    'strokePosition',\n    'strokeWeight',\n    'visible',\n    'zIndex',\n    'clickable',\n];\nAgmRectangle.ctorParameters = () => [\n    { type: RectangleManager }\n];\n__decorate([\n    Input(),\n    __metadata(\"design:type\", Number)\n], AgmRectangle.prototype, \"north\", void 0);\n__decorate([\n    Input(),\n    __metadata(\"design:type\", Number)\n], AgmRectangle.prototype, \"east\", void 0);\n__decorate([\n    Input(),\n    __metadata(\"design:type\", Number)\n], AgmRectangle.prototype, \"south\", void 0);\n__decorate([\n    Input(),\n    __metadata(\"design:type\", Number)\n], AgmRectangle.prototype, \"west\", void 0);\n__decorate([\n    Input(),\n    __metadata(\"design:type\", Object)\n], AgmRectangle.prototype, \"clickable\", void 0);\n__decorate([\n    Input('rectangleDraggable'),\n    __metadata(\"design:type\", Object)\n], AgmRectangle.prototype, \"draggable\", void 0);\n__decorate([\n    Input(),\n    __metadata(\"design:type\", Object)\n], AgmRectangle.prototype, \"editable\", void 0);\n__decorate([\n    Input(),\n    __metadata(\"design:type\", String)\n], AgmRectangle.prototype, \"fillColor\", void 0);\n__decorate([\n    Input(),\n    __metadata(\"design:type\", Number)\n], AgmRectangle.prototype, \"fillOpacity\", void 0);\n__decorate([\n    Input(),\n    __metadata(\"design:type\", String)\n], AgmRectangle.prototype, \"strokeColor\", void 0);\n__decorate([\n    Input(),\n    __metadata(\"design:type\", Number)\n], AgmRectangle.prototype, \"strokeOpacity\", void 0);\n__decorate([\n    Input(),\n    __metadata(\"design:type\", String)\n], AgmRectangle.prototype, \"strokePosition\", void 0);\n__decorate([\n    Input(),\n    __metadata(\"design:type\", Object)\n], AgmRectangle.prototype, \"strokeWeight\", void 0);\n__decorate([\n    Input(),\n    __metadata(\"design:type\", Object)\n], AgmRectangle.prototype, \"visible\", void 0);\n__decorate([\n    Input(),\n    __metadata(\"design:type\", Number)\n], AgmRectangle.prototype, \"zIndex\", void 0);\n__decorate([\n    Output(),\n    __metadata(\"design:type\", EventEmitter)\n], AgmRectangle.prototype, \"boundsChange\", void 0);\n__decorate([\n    Output(),\n    __metadata(\"design:type\", EventEmitter)\n], AgmRectangle.prototype, \"rectangleClick\", void 0);\n__decorate([\n    Output(),\n    __metadata(\"design:type\", EventEmitter)\n], AgmRectangle.prototype, \"rectangleDblClick\", void 0);\n__decorate([\n    Output(),\n    __metadata(\"design:type\", EventEmitter)\n], AgmRectangle.prototype, \"drag\", void 0);\n__decorate([\n    Output(),\n    __metadata(\"design:type\", EventEmitter)\n], AgmRectangle.prototype, \"dragEnd\", void 0);\n__decorate([\n    Output(),\n    __metadata(\"design:type\", EventEmitter)\n], AgmRectangle.prototype, \"dragStart\", void 0);\n__decorate([\n    Output(),\n    __metadata(\"design:type\", EventEmitter)\n], AgmRectangle.prototype, \"mouseDown\", void 0);\n__decorate([\n    Output(),\n    __metadata(\"design:type\", EventEmitter)\n], AgmRectangle.prototype, \"mouseMove\", void 0);\n__decorate([\n    Output(),\n    __metadata(\"design:type\", EventEmitter)\n], AgmRectangle.prototype, \"mouseOut\", void 0);\n__decorate([\n    Output(),\n    __metadata(\"design:type\", EventEmitter)\n], AgmRectangle.prototype, \"mouseOver\", void 0);\n__decorate([\n    Output(),\n    __metadata(\"design:type\", EventEmitter)\n], AgmRectangle.prototype, \"mouseUp\", void 0);\n__decorate([\n    Output(),\n    __metadata(\"design:type\", EventEmitter)\n], AgmRectangle.prototype, \"rightClick\", void 0);\nAgmRectangle = AgmRectangle_1 = __decorate([\n    Directive({\n        selector: 'agm-rectangle',\n    }),\n    __metadata(\"design:paramtypes\", [RectangleManager])\n], AgmRectangle);\n\nlet layerId$3 = 0;\n/*\n * This directive adds a transit layer to a google map instance\n * <agm-transit-layer [visible]=\"true|false\"> <agm-transit-layer>\n * */\nlet AgmTransitLayer = class AgmTransitLayer {\n    constructor(_manager) {\n        this._manager = _manager;\n        this._addedToManager = false;\n        this._id = (layerId$3++).toString();\n        /**\n         * Hide/show transit layer\n         */\n        this.visible = true;\n    }\n    ngOnInit() {\n        if (this._addedToManager) {\n            return;\n        }\n        this._manager.addTransitLayer(this, { visible: this.visible });\n        this._addedToManager = true;\n    }\n    ngOnChanges(changes) {\n        if (!this._addedToManager) {\n            return;\n        }\n        if (changes['visible'] != null) {\n            this._manager.toggleLayerVisibility(this, { visible: changes['visible'].currentValue });\n        }\n    }\n    /** @internal */\n    id() { return this._id; }\n    /** @internal */\n    toString() { return `AgmTransitLayer-${this._id.toString()}`; }\n    /** @internal */\n    ngOnDestroy() {\n        this._manager.deleteLayer(this);\n    }\n};\nAgmTransitLayer.ctorParameters = () => [\n    { type: LayerManager }\n];\n__decorate([\n    Input(),\n    __metadata(\"design:type\", Object)\n], AgmTransitLayer.prototype, \"visible\", void 0);\nAgmTransitLayer = __decorate([\n    Directive({\n        selector: 'agm-transit-layer',\n    }),\n    __metadata(\"design:paramtypes\", [LayerManager])\n], AgmTransitLayer);\n\nvar google$1;\nvar SymbolPath;\n(function (SymbolPath) {\n    SymbolPath[SymbolPath[\"BACKWARD_CLOSED_ARROW\"] = 3] = \"BACKWARD_CLOSED_ARROW\";\n    SymbolPath[SymbolPath[\"BACKWARD_OPEN_ARROW\"] = 4] = \"BACKWARD_OPEN_ARROW\";\n    SymbolPath[SymbolPath[\"CIRCLE\"] = 0] = \"CIRCLE\";\n    SymbolPath[SymbolPath[\"FORWARD_CLOSED_ARROW\"] = 1] = \"FORWARD_CLOSED_ARROW\";\n    SymbolPath[SymbolPath[\"FORWARD_OPEN_ARROW\"] = 2] = \"FORWARD_OPEN_ARROW\";\n})(SymbolPath || (SymbolPath = {}));\n/**\n * Identifiers used to specify the placement of controls on the map. Controls are\n * positioned relative to other controls in the same layout position. Controls that\n * are added first are positioned closer to the edge of the map.\n */\nvar ControlPosition;\n(function (ControlPosition) {\n    ControlPosition[ControlPosition[\"RIGHT_BOTTOM\"] = 0] = \"RIGHT_BOTTOM\";\n    ControlPosition[ControlPosition[\"TOP_LEFT\"] = 1] = \"TOP_LEFT\";\n    ControlPosition[ControlPosition[\"TOP_CENTER\"] = 2] = \"TOP_CENTER\";\n    ControlPosition[ControlPosition[\"TOP_RIGHT\"] = 3] = \"TOP_RIGHT\";\n    ControlPosition[ControlPosition[\"LEFT_CENTER\"] = 4] = \"LEFT_CENTER\";\n    ControlPosition[ControlPosition[\"LEFT_TOP\"] = 5] = \"LEFT_TOP\";\n    ControlPosition[ControlPosition[\"LEFT_BOTTOM\"] = 6] = \"LEFT_BOTTOM\";\n    ControlPosition[ControlPosition[\"RIGHT_TOP\"] = 7] = \"RIGHT_TOP\";\n    ControlPosition[ControlPosition[\"RIGHT_CENTER\"] = 8] = \"RIGHT_CENTER\";\n    ControlPosition[ControlPosition[\"BOTTOM_RIGHT\"] = 9] = \"BOTTOM_RIGHT\";\n    ControlPosition[ControlPosition[\"BOTTOM_LEFT\"] = 10] = \"BOTTOM_LEFT\";\n    ControlPosition[ControlPosition[\"BOTTOM_CENTER\"] = 11] = \"BOTTOM_CENTER\";\n})(ControlPosition || (ControlPosition = {}));\nvar MapTypeId;\n(function (MapTypeId) {\n    /** This map type displays a transparent layer of major streets on satellite images. */\n    MapTypeId[MapTypeId[\"HYBRID\"] = 0] = \"HYBRID\";\n    /** This map type displays a normal street map. */\n    MapTypeId[MapTypeId[\"ROADMAP\"] = 1] = \"ROADMAP\";\n    /** This map type displays satellite images. */\n    MapTypeId[MapTypeId[\"SATELLITE\"] = 2] = \"SATELLITE\";\n    /** This map type displays maps with physical features such as terrain and vegetation. */\n    MapTypeId[MapTypeId[\"TERRAIN\"] = 3] = \"TERRAIN\";\n})(MapTypeId || (MapTypeId = {}));\nvar MapTypeControlStyle;\n(function (MapTypeControlStyle) {\n    MapTypeControlStyle[MapTypeControlStyle[\"DEFAULT\"] = 0] = \"DEFAULT\";\n    MapTypeControlStyle[MapTypeControlStyle[\"DROPDOWN_MENU\"] = 2] = \"DROPDOWN_MENU\";\n    MapTypeControlStyle[MapTypeControlStyle[\"HORIZONTAL_BAR\"] = 1] = \"HORIZONTAL_BAR\";\n})(MapTypeControlStyle || (MapTypeControlStyle = {}));\nvar ScaleControlStyle;\n(function (ScaleControlStyle) {\n    ScaleControlStyle[ScaleControlStyle[\"DEFAULT\"] = 0] = \"DEFAULT\";\n})(ScaleControlStyle || (ScaleControlStyle = {}));\nvar ZoomControlStyle;\n(function (ZoomControlStyle) {\n    ZoomControlStyle[ZoomControlStyle[\"DEFAULT\"] = 0] = \"DEFAULT\";\n    ZoomControlStyle[ZoomControlStyle[\"LARGE\"] = 1] = \"LARGE\";\n    ZoomControlStyle[ZoomControlStyle[\"SMALL\"] = 2] = \"SMALL\";\n})(ZoomControlStyle || (ZoomControlStyle = {}));\nvar GeocoderLocationType;\n(function (GeocoderLocationType) {\n    GeocoderLocationType[\"APPROXIMATE\"] = \"APPROXIMATE\";\n    GeocoderLocationType[\"GEOMETRIC_CENTER\"] = \"GEOMETRIC_CENTER\";\n    GeocoderLocationType[\"RANGE_INTERPOLATED\"] = \"RANGE_INTERPOLATED\";\n    GeocoderLocationType[\"ROOFTOP\"] = \"ROOFTOP\";\n})(GeocoderLocationType || (GeocoderLocationType = {}));\nvar GeocoderStatus;\n(function (GeocoderStatus) {\n    GeocoderStatus[\"ERROR\"] = \"ERROR\";\n    GeocoderStatus[\"INVALID_REQUEST\"] = \"INVALID_REQUEST\";\n    GeocoderStatus[\"OK\"] = \"OK\";\n    GeocoderStatus[\"OVER_QUERY_LIMIT\"] = \"OVER_QUERY_LIMIT\";\n    GeocoderStatus[\"REQUEST_DENIED\"] = \"REQUEST_DENIED\";\n    GeocoderStatus[\"UNKNOWN_ERROR\"] = \"UNKNOWN_ERROR\";\n    GeocoderStatus[\"ZERO_RESULTS\"] = \"ZERO_RESULTS\";\n})(GeocoderStatus || (GeocoderStatus = {}));\n\nlet AgmGeocoder = class AgmGeocoder {\n    constructor(loader) {\n        const connectableGeocoder$ = new Observable(subscriber => {\n            loader.load().then(() => subscriber.next());\n        })\n            .pipe(map(() => this._createGeocoder()), multicast(new ReplaySubject(1)));\n        connectableGeocoder$.connect(); // ignore the subscription\n        // since we will remain subscribed till application exits\n        this.geocoder$ = connectableGeocoder$;\n    }\n    geocode(request) {\n        return this.geocoder$.pipe(switchMap((geocoder) => this._getGoogleResults(geocoder, request)));\n    }\n    _getGoogleResults(geocoder, request) {\n        const geocodeObservable = bindCallback(geocoder.geocode);\n        return geocodeObservable(request).pipe(switchMap(([results, status]) => {\n            if (status === GeocoderStatus.OK) {\n                return of(results);\n            }\n            return throwError(status);\n        }));\n    }\n    _createGeocoder() {\n        return new google.maps.Geocoder();\n    }\n};\nAgmGeocoder.ctorParameters = () => [\n    { type: MapsAPILoader }\n];\nAgmGeocoder.ngInjectableDef = ɵɵdefineInjectable({ factory: function AgmGeocoder_Factory() { return new AgmGeocoder(ɵɵinject(MapsAPILoader)); }, token: AgmGeocoder, providedIn: \"root\" });\nAgmGeocoder = __decorate([\n    Injectable({ providedIn: 'root' }),\n    __metadata(\"design:paramtypes\", [MapsAPILoader])\n], AgmGeocoder);\n\nclass WindowRef {\n    getNativeWindow() { return window; }\n}\nclass DocumentRef {\n    getNativeDocument() { return document; }\n}\nconst BROWSER_GLOBALS_PROVIDERS = [WindowRef, DocumentRef];\n\nvar GoogleMapsScriptProtocol;\n(function (GoogleMapsScriptProtocol) {\n    GoogleMapsScriptProtocol[GoogleMapsScriptProtocol[\"HTTP\"] = 1] = \"HTTP\";\n    GoogleMapsScriptProtocol[GoogleMapsScriptProtocol[\"HTTPS\"] = 2] = \"HTTPS\";\n    GoogleMapsScriptProtocol[GoogleMapsScriptProtocol[\"AUTO\"] = 3] = \"AUTO\";\n})(GoogleMapsScriptProtocol || (GoogleMapsScriptProtocol = {}));\n/**\n * Token for the config of the LazyMapsAPILoader. Please provide an object of type {@link\n * LazyMapsAPILoaderConfig}.\n */\nconst LAZY_MAPS_API_CONFIG = new InjectionToken('angular-google-maps LAZY_MAPS_API_CONFIG');\nlet LazyMapsAPILoader = class LazyMapsAPILoader extends MapsAPILoader {\n    constructor(config = null, w, d, localeId) {\n        super();\n        this.localeId = localeId;\n        this._SCRIPT_ID = 'agmGoogleMapsApiScript';\n        this.callbackName = `agmLazyMapsAPILoader`;\n        this._config = config || {};\n        this._windowRef = w;\n        this._documentRef = d;\n    }\n    load() {\n        const window = this._windowRef.getNativeWindow();\n        if (window.google && window.google.maps) {\n            // Google maps already loaded on the page.\n            return Promise.resolve();\n        }\n        if (this._scriptLoadingPromise) {\n            return this._scriptLoadingPromise;\n        }\n        // this can happen in HMR situations or Stackblitz.io editors.\n        const scriptOnPage = this._documentRef.getNativeDocument().getElementById(this._SCRIPT_ID);\n        if (scriptOnPage) {\n            this._assignScriptLoadingPromise(scriptOnPage);\n            return this._scriptLoadingPromise;\n        }\n        const script = this._documentRef.getNativeDocument().createElement('script');\n        script.type = 'text/javascript';\n        script.async = true;\n        script.defer = true;\n        script.id = this._SCRIPT_ID;\n        script.src = this._getScriptSrc(this.callbackName);\n        this._assignScriptLoadingPromise(script);\n        this._documentRef.getNativeDocument().body.appendChild(script);\n        return this._scriptLoadingPromise;\n    }\n    _assignScriptLoadingPromise(scriptElem) {\n        this._scriptLoadingPromise = new Promise((resolve, reject) => {\n            this._windowRef.getNativeWindow()[this.callbackName] = () => {\n                resolve();\n            };\n            scriptElem.onerror = (error) => {\n                reject(error);\n            };\n        });\n    }\n    _getScriptSrc(callbackName) {\n        let protocolType = (this._config && this._config.protocol) || GoogleMapsScriptProtocol.HTTPS;\n        let protocol;\n        switch (protocolType) {\n            case GoogleMapsScriptProtocol.AUTO:\n                protocol = '';\n                break;\n            case GoogleMapsScriptProtocol.HTTP:\n                protocol = 'http:';\n                break;\n            case GoogleMapsScriptProtocol.HTTPS:\n                protocol = 'https:';\n                break;\n        }\n        const hostAndPath = this._config.hostAndPath || 'maps.googleapis.com/maps/api/js';\n        const queryParams = {\n            v: this._config.apiVersion || 'quarterly',\n            callback: callbackName,\n            key: this._config.apiKey,\n            client: this._config.clientId,\n            channel: this._config.channel,\n            libraries: this._config.libraries,\n            region: this._config.region,\n            language: this._config.language || this.localeId !== 'en-US' ? this.localeId : null,\n        };\n        const params = Object.keys(queryParams)\n            .filter((k) => queryParams[k] != null)\n            .filter((k) => {\n            // remove empty arrays\n            return !Array.isArray(queryParams[k]) ||\n                (Array.isArray(queryParams[k]) && queryParams[k].length > 0);\n        })\n            .map((k) => {\n            // join arrays as comma seperated strings\n            let i = queryParams[k];\n            if (Array.isArray(i)) {\n                return { key: k, value: i.join(',') };\n            }\n            return { key: k, value: queryParams[k] };\n        })\n            .map((entry) => {\n            return `${entry.key}=${entry.value}`;\n        })\n            .join('&');\n        return `${protocol}//${hostAndPath}?${params}`;\n    }\n};\nLazyMapsAPILoader.ctorParameters = () => [\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [LAZY_MAPS_API_CONFIG,] }] },\n    { type: WindowRef },\n    { type: DocumentRef },\n    { type: String, decorators: [{ type: Inject, args: [LOCALE_ID,] }] }\n];\nLazyMapsAPILoader = __decorate([\n    Injectable(),\n    __param(0, Optional()), __param(0, Inject(LAZY_MAPS_API_CONFIG)),\n    __param(3, Inject(LOCALE_ID)),\n    __metadata(\"design:paramtypes\", [Object, WindowRef, DocumentRef, String])\n], LazyMapsAPILoader);\n\n/**\n * When using the NoOpMapsAPILoader, the Google Maps API must be added to the page via a `<script>`\n * Tag.\n * It's important that the Google Maps API script gets loaded first on the page.\n */\nclass NoOpMapsAPILoader {\n    load() {\n        if (!window.google || !window.google.maps) {\n            throw new Error('Google Maps API not loaded on page. Make sure window.google.maps is available!');\n        }\n        return Promise.resolve();\n    }\n}\n\n// exported map types\n\nvar AgmCoreModule_1;\n/**\n * @internal\n */\nfunction coreDirectives() {\n    return [\n        AgmBicyclingLayer,\n        AgmCircle,\n        AgmDataLayer,\n        AgmFitBounds,\n        AgmInfoWindow,\n        AgmKmlLayer,\n        AgmMap,\n        AgmMarker,\n        AgmPolygon,\n        AgmPolyline,\n        AgmPolylineIcon,\n        AgmPolylinePoint,\n        AgmRectangle,\n        AgmTransitLayer,\n    ];\n}\n/**\n * The angular-google-maps core module. Contains all Directives/Services/Pipes\n * of the core module. Please use `AgmCoreModule.forRoot()` in your app module.\n */\nlet AgmCoreModule = AgmCoreModule_1 = class AgmCoreModule {\n    /**\n     * Please use this method when you register the module at the root level.\n     */\n    static forRoot(lazyMapsAPILoaderConfig) {\n        return {\n            ngModule: AgmCoreModule_1,\n            providers: [\n                ...BROWSER_GLOBALS_PROVIDERS, { provide: MapsAPILoader, useClass: LazyMapsAPILoader },\n                { provide: LAZY_MAPS_API_CONFIG, useValue: lazyMapsAPILoaderConfig },\n            ],\n        };\n    }\n};\nAgmCoreModule = AgmCoreModule_1 = __decorate([\n    NgModule({ declarations: coreDirectives(), exports: coreDirectives() })\n], AgmCoreModule);\n\n// main modules\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { AgmBicyclingLayer, AgmCircle, AgmCoreModule, AgmDataLayer, AgmFitBounds, AgmGeocoder, AgmInfoWindow, AgmKmlLayer, AgmMap, AgmMarker, AgmPolygon, AgmPolyline, AgmPolylineIcon, AgmPolylinePoint, AgmRectangle, AgmTransitLayer, CircleManager, ControlPosition, DataLayerManager, FitBoundsAccessor, GeocoderLocationType, GeocoderStatus, GoogleMapsAPIWrapper, GoogleMapsScriptProtocol, InfoWindowManager, KmlLayerManager, LAZY_MAPS_API_CONFIG, LayerManager, LazyMapsAPILoader, MapTypeId, MapsAPILoader, MarkerManager, NoOpMapsAPILoader, PolygonManager, PolylineManager, RectangleManager, ScaleControlStyle, ZoomControlStyle, FitBoundsService as ɵa, coreDirectives as ɵb, WindowRef as ɵc, DocumentRef as ɵd, BROWSER_GLOBALS_PROVIDERS as ɵe };\n//# sourceMappingURL=agm-core.js.map\n","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","<div class=\"visionpi-container-main\">\n  <div class=\"visionpi-container\">\n    <div class=\"visionpi-column\">\n      <h3 class=\"visionpi-header\" i18n>Geolocalization > Administration > Account List </h3>\n    </div>\n    <div class=\"visionpi-column visionpi-column-items-end\">\n      <div class=\"\">\n        <button routerLink=\"/home/geolocalization/administration/account\" class=\"visionpi-button\"> <mat-icon class=\"visionpi-button-icon\">person_add</mat-icon>Add account</button>\n        <button routerLink=\"/home/geolocalization/administration/tracker\" class=\"visionpi-button\"> <mat-icon class=\"visionpi-button-icon\">satellite</mat-icon>Tracker</button>\n      </div>\n    </div>\n  </div>\n  <!--\n  <header class=\"account-list-header\">\n    <h3></h3>\n    <h3>Account List</h3>\n  </header>-->\n  <mat-divider></mat-divider>\n  <div class=\"visionpi-container\">\n    <div class=\"visionpi-column\">\n      <table mat-table [dataSource]=\"data\" class=\"visionpi-table\"\n         matSort matSortActive=\"created\" matSortDisableClear matSortDirection=\"desc\">\n         <!-- account Column -->\n         <ng-container matColumnDef=\"account\">\n           <th mat-header-cell *matHeaderCellDef i18n>Account</th>\n           <td mat-cell *matCellDef=\"let row\">{{row.account}}</td>\n         </ng-container>\n\n         <!-- device Column -->\n         <ng-container matColumnDef=\"description\">\n           <th mat-header-cell *matHeaderCellDef i18n>Description</th>\n           <td mat-cell *matCellDef=\"let row\">{{row.description}}</td>\n         </ng-container>\n\n         <!-- type Column -->\n         <ng-container matColumnDef=\"status\">\n           <th mat-header-cell *matHeaderCellDef i18n>Status</th>\n           <td mat-cell *matCellDef=\"let row\">{{row.status}}</td>\n         </ng-container>\n\n         <!-- account Column -->\n         <ng-container matColumnDef=\"fleets\">\n           <th mat-header-cell *matHeaderCellDef i18n>Matrix</th>\n           <td mat-cell *matCellDef=\"let row\">{{row.matrix}}</td>\n         </ng-container>\n\n         <!-- status Column -->\n         <ng-container matColumnDef=\"routes\">\n           <th mat-header-cell *matHeaderCellDef i18n>Routes</th>\n           <td mat-cell *matCellDef=\"let row\">{{row.routes}}</td>\n         </ng-container>\n\n         <!-- status Column -->\n         <ng-container matColumnDef=\"vehicles\">\n           <th mat-header-cell *matHeaderCellDef i18n>Operators</th>\n           <td mat-cell *matCellDef=\"let row\">{{row.operators}}</td>\n         </ng-container>\n\n         <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n         <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\n       </table>\n       <mat-paginator [length]=\"resultsLength\" [pageSize]=\"30\" class=\"visionpi-paginator\"></mat-paginator>\n    </div>\n  </div>\n </div>\n","import { Component, OnInit, AfterViewInit } from '@angular/core';\n/* Services */\nimport { AccountService } from '../services/account.service';\n\n@Component({\n  selector: 'account-list',\n  templateUrl: './account-list.component.html',\n  styleUrls: ['./account-list.component.scss']\n})\nexport class AccountListComponent implements AfterViewInit {\n\n  displayedColumns: string[] = ['account', 'description', 'status', 'fleets', 'routes', 'vehicles'];\n  data: any;\n  resultsLength = 0;\n\n  constructor(private accountService: AccountService) { }\n\n  ngOnInit() {\n  }\n\n  ngAfterViewInit() {\n    this.loadAccounts();\n  }\n\n  loadAccounts() {\n    this.accountService.getAccounts()\n    .subscribe(data => {\n      this.data = data;\n      console.log(\"Load Accounts success! \" );\n    });\n  }\n\n}\n","<div class=\"visionpi-container-main\">\n  <div class=\"visionpi-container\">\n    <div class=\"visionpi-column\">\n      <header class=\"visionpi-header\">\n        <h3 i18n>Geolocalization > Administration > Account Register</h3>\n      </header>\n    </div>\n    <div class=\"visionpi-column visionpi-column-items-end\">\n      <button routerLink=\"/home/geolocalization/administration/account-list\" class=\"visionpi-button\"> <mat-icon class=\"visionpi-button-icon\">group</mat-icon>Account List</button>\n      <button routerLink=\"/home/geolocalization/administration/tracker\" class=\"visionpi-button\"> <mat-icon class=\"visionpi-button-icon\">satellite</mat-icon>Tracker</button>\n    </div>\n  </div>\n\n  <mat-divider></mat-divider>\n  <form class=\"visionpi-form\" [formGroup]=\"accountRegisterForm\">\n    <h5 i18n>Account Information</h5>\n    <div class=\"visionpi-container\">\n      <div class=\"visionpi-column\">\n        <div class=\"visionpi-container\">\n          <div class=\"visionpi-column\">\n            <div class=\"account-register-search\">\n              <input type=\"search\" id=\"search\" placeholder=\"Search Account or User ...\" formControlName=\"accountSearch\" i18n>\n              <button class=\"icon\" (click)=\"searchAccount(accountSearch.value)\"><mat-icon>search</mat-icon></button>\n            </div>\n          </div>\n        </div>\n      </div>\n      <div class=\"visionpi-column\">\n        <div class=\"visionpi-container\">\n          <div class=\"visionpi-column\">\n            <input matInput placeholder=\"Account\" formControlName=\"account\" class=\"account-register-input\" i18n>\n          </div>\n          <!--<div *ngIf=\"user.invalid && (user.dirty || user.touched)\" class=\"account-register-column account-register-input-error\">\n            <div *ngIf=\"user.errors.required\">\n              User is required.\n            </div>\n          </div>-->\n        </div>\n      </div>\n      <div class=\"visionpi-column\">\n        <div class=\"visionpi-container\">\n          <div class=\"visionpi-column\">\n            <input matInput placeholder=\"User\" formControlName=\"user\" class=\"account-register-input\" i18n>\n          </div>\n          <!--<div *ngIf=\"user.invalid && (user.dirty || user.touched)\" class=\"account-register-column account-register-input-error\">\n            <div *ngIf=\"user.errors.required\">\n              User is required.\n            </div>\n          </div>-->\n        </div>\n      </div>\n    </div>\n    <div class=\"visionpi-container\">\n      <div class=\"visionpi-column\">\n        <div class=\"visionpi-container\">\n          <div class=\"visionpi-column\">\n            <input matInput placeholder=\"Description\" formControlName=\"description\" class=\"account-register-input\" maxlength=\"25\" i18n>\n          </div>\n          <div *ngIf=\"description.invalid && (description.dirty || description.touched)\" class=\"visionpi-column account-register-input-error\">\n            <div *ngIf=\"description.errors.required\" i18n>\n              Description is required.\n            </div>\n          </div>\n        </div>\n      </div>\n      <div class=\"visionpi-column\">\n        <div class=\"visionpi-container\">\n          <div class=\"visionpi-column\">\n            <div class='vertical-align'>\n              <div class='btns'>\n                <label>\n                  <span class='btn user-register-paragraph' i18n>Status</span>\n                </label>\n                <label>\n                  <input type='radio' [value]=\"true\" formControlName=\"status\">\n                    <span class='btn' i18n>Active</span>\n                </label>\n                <!--<label>\n                  <input type='radio' [value]=\"inactivo\" formControlName=\"status\">\n                    <span class='btn'>Inactivo</span>\n                </label>-->\n              </div>\n            </div>\n          </div>\n          <!--<div *ngIf=\"user.invalid && (user.dirty || user.touched)\" class=\"account-register-column account-register-input-error\">\n            <div *ngIf=\"user.errors.required\">\n              User is required.\n            </div>\n          </div>-->\n        </div>\n      </div>\n      <div class=\"visionpi-column\">\n        <div class=\"visionpi-container\">\n          <div class=\"visionpi-column\">\n            <mat-form-field>\n              <mat-select [(value)]=\"selectedServiceType\" formControlName=\"serviceType\">\n                <mat-option value=\"none\" i18n>Select Service Type</mat-option>\n                <mat-option *ngFor=\"let serType of serviceTypes\" [value]=\"serType.name\">\n                  {{serType.description}}\n                </mat-option>\n              </mat-select>\n            </mat-form-field>\n          </div>\n          <div *ngIf=\"serviceType.invalid && (serviceType.dirty || serviceType.touched)\" class=\"visionpi-column account-register-input-error\">\n            <div *ngIf=\"serviceType.errors.required\" i18n>\n              Service Type is required.\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n    <h5 i18n>Matrix Information</h5>\n    <div class=\"visionpi-container\" formGroupName=\"matrix\">\n      <div class=\"visionpi-column\">\n        <div class=\"visionpi-container\">\n          <div class=\"visionpi-column\">\n            <input matInput placeholder=\"Identifier\" formControlName=\"identifier\" class=\"account-register-input\" maxlength=\"10\" i18n>\n          </div>\n          <div *ngIf=\"identifier.invalid && (identifier.dirty || identifier.touched)\" class=\"visionpi-column account-register-input-error\">\n            <div *ngIf=\"identifier.errors.required\" i18n>\n              Identifier is required.\n            </div>\n          </div>\n        </div>\n      </div>\n      <div class=\"visionpi-column\">\n        <div class=\"visionpi-container\">\n          <div class=\"visionpi-column\">\n            <input matInput placeholder=\"Name\" formControlName=\"name\" class=\"account-register-input\" maxlength=\"25\" i18n>\n          </div>\n          <div *ngIf=\"name.invalid && (name.dirty || name.touched)\" class=\"visionpi-column account-register-input-error\">\n            <div *ngIf=\"name.errors.required\" i18n>\n              Name is required.\n            </div>\n          </div>\n        </div>\n      </div>\n      <div class=\"visionpi-column\">\n        <div class=\"visionpi-container\">\n          <div class=\"visionpi-column\">\n            <input matInput placeholder=\"Description\" formControlName=\"matrixDescription\" class=\"account-register-input\" maxlength=\"25\" i18n>\n          </div>\n          <div *ngIf=\"matrixDescription.invalid && (matrixDescription.dirty || matrixDescription.touched)\" class=\"visionpi-column account-register-input-error\">\n            <div *ngIf=\"matrixDescription.errors.required\" i18n>\n              Matrix description is required.\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n    <h5 i18n>Route Information</h5>\n    <div class=\"visionpi-container\" formGroupName=\"route\">\n      <div class=\"visionpi-column\">\n        <div class=\"visionpi-container\">\n          <div class=\"visionpi-column\">\n            <input matInput placeholder=\"Route Identifier\" formControlName=\"routeIdentifier\" class=\"account-register-input\" maxlength=\"10\" i18n>\n          </div>\n          <div *ngIf=\"routeIdentifier.invalid && (routeIdentifier.dirty || routeIdentifier.touched)\" class=\"visionpi-column account-register-input-error\">\n            <div *ngIf=\"routeIdentifier.errors.required\" i18n>\n              Route Identifier is required.\n            </div>\n          </div>\n        </div>\n      </div>\n      <div class=\"visionpi-column\">\n        <div class=\"visionpi-container\">\n          <div class=\"visionpi-column\">\n            <input matInput placeholder=\"Route Name\" formControlName=\"routeName\" class=\"account-register-input\" maxlength=\"25\" i18n>\n          </div>\n          <div *ngIf=\"routeName.invalid && (routeName.dirty || routeName.touched)\" class=\"visionpi-column account-register-input-error\">\n            <div *ngIf=\"routeName.errors.required\" i18n>\n              Route Name is required.\n            </div>\n          </div>\n        </div>\n      </div>\n      <div class=\"visionpi-column\">\n        <div class=\"visionpi-container\">\n          <div class=\"visionpi-column\">\n            <input matInput placeholder=\"Route Description\" formControlName=\"routeDescription\" class=\"account-register-input\" maxlength=\"25\" i18n>\n          </div>\n          <div *ngIf=\"routeDescription.invalid && (routeDescription.dirty || routeDescription.touched)\" class=\"visionpi-column account-register-input-error\">\n            <div *ngIf=\"routeDescription.errors.required\" i18n>\n              Route description is required.\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n    <h5 i18n>Operator Information</h5>\n    <div class=\"visionpi-container\" formGroupName=\"operator\">\n      <div class=\"visionpi-column\">\n        <div class=\"visionpi-container\">\n          <div class=\"visionpi-column\">\n            <div class=\"visionpi-container\">\n              <div class=\"visionpi-column\">\n                <input matInput placeholder=\"Operator Identifier\" formControlName=\"operatorCode\" class=\"account-register-input\" maxlength=\"10\" i18n>\n              </div>\n              <div *ngIf=\"operatorCode.invalid && (operatorCode.dirty || operatorCode.touched)\" class=\"visionpi-column account-register-input-error\">\n                <div *ngIf=\"operatorCode.errors.required\" i18n>\n                  Operator Code is required.\n                </div>\n              </div>\n            </div>\n          </div>\n          <div class=\"visionpi-column\">\n            <div class=\"visionpi-container\">\n              <div class=\"visionpi-column\">\n                <input matInput placeholder=\"Operator Name\" formControlName=\"operatorName\" class=\"account-register-input\" maxlength=\"25\" i18n>\n              </div>\n              <div *ngIf=\"operatorName.invalid && (operatorName.dirty || operatorName.touched)\" class=\"visionpi-column account-register-input-error\">\n                <div *ngIf=\"operatorName.errors.required\" i18n>\n                  Operator Name is required.\n                </div>\n              </div>\n            </div>\n          </div>\n          <div class=\"visionpi-column\">\n            <div class=\"visionpi-container\">\n              <div class=\"visionpi-column\">\n                <input matInput placeholder=\"LastName\" formControlName=\"operatorLastName\" class=\"account-register-input\" maxlength=\"25\" i18n>\n              </div>\n              <div *ngIf=\"operatorLastName.invalid && (operatorLastName.dirty || operatorLastName.touched)\" class=\"visionpi-column account-register-input-error\">\n                <div *ngIf=\"operatorLastName.errors.required\" i18n>\n                  Operator LastName is required.\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n        <div class=\"visionpi-container\">\n          <div class=\"visionpi-column\">\n            <div class=\"visionpi-container\">\n              <div class=\"visionpi-column\">\n                <mat-form-field>\n                  <mat-select [(value)]=\"selectedOperatorType\" formControlName=\"operatorType\">\n                    <mat-option value=\"none\" i18n>Select Type</mat-option>\n                    <mat-option *ngFor=\"let opType of operatorTypes\" [value]=\"opType\">\n                      {{opType.name}}\n                    </mat-option>\n                  </mat-select>\n                </mat-form-field>\n              </div>\n              <div *ngIf=\"operatorType.invalid && (operatorType.dirty || operatorType.touched)\" class=\"visionpi-column account-register-input-error\">\n                <div *ngIf=\"operatorType.errors.required\" i18n>\n                  Operator Type is required.\n                </div>\n              </div>\n            </div>\n          </div>\n          <div class=\"visionpi-column\">\n            <div class=\"visionpi-container\">\n              <div class=\"visionpi-column\">\n                <mat-form-field class=\"visionpi-input-date\">\n                  <input matInput [matDatepicker]=\"DateAdmissionPicker\" placeholder=\"Date Admission\" formControlName=\"operatorDateAdmission\">\n                  <mat-datepicker-toggle matSuffix [for]=\"DateAdmissionPicker\"></mat-datepicker-toggle>\n                  <mat-datepicker #DateAdmissionPicker disabled=\"false\"></mat-datepicker>\n                </mat-form-field>\n              </div>\n              <div *ngIf=\"operatorDateAdmission.invalid && (operatorDateAdmission.dirty || operatorDateAdmission.touched)\" class=\"visionpi-column account-register-input-error\">\n                <div *ngIf=\"operatorDateAdmission.errors.required\" i18n>\n                  Date Admission is required.\n                </div>\n              </div>\n            </div>\n          </div>\n          <div class=\"visionpi-column\">\n            <div class=\"visionpi-container\">\n              <div class=\"visionpi-column\">\n                <input matInput placeholder=\"Vehicle\" class=\"account-register-input\" maxlength=\"25\" i18n>\n              </div>\n              <div class=\"visionpi-column\">\n                <button class=\"visionpi-button\" (click)=\"addVehicle()\"><mat-icon class=\"visionpi-button-icon\">add</mat-icon></button>\n              </div>\n              <!--\n              <div *ngIf=\"operatorDateAdmission.invalid && (operatorDateAdmission.dirty || operatorDateAdmission.touched)\" class=\"visionpi-column account-register-input-error\">\n                <div *ngIf=\"operatorDateAdmission.errors.required\">\n                  Date Admission is required.\n                </div>\n              </div>\n              -->\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n    <div class=\"visionpi-container\">\n      <div class=\"visionpi-column\">\n\n      </div>\n      <div class=\"visionpi-column visionpi-column-items-end\">\n        <button class=\"visionpi-button visionpi-button-save\" [disabled]=\"!accountRegisterForm.valid\" (click)=\"registerAccount()\" i18n>Save</button>\n        <button class=\"visionpi-button visionpi-button-cancel\" i18n>Cancel</button>\n      </div>\n    </div>\n  </form>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormControl, FormArray, FormGroup, Validators } from '@angular/forms';\n/* Services */\nimport { AccountService } from '../services/account.service';\nimport { OperatorType } from '../interfaces/operator-type';\nimport { ServiceType } from '../interfaces/service-type';\nimport { Vehicle } from '../interfaces/vehicle';\n/* Dialog */\nimport { MatDialog, MatDialogConfig, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { AddVehicleComponent } from '../messages/add-vehicle/add-vehicle.component';\nimport { RegisterSuccessComponent } from '../messages/register-success/register-success.component';\n\n@Component({\n  selector: 'account-register',\n  templateUrl: './account-register.component.html',\n  styleUrls: ['./account-register.component.scss']\n})\nexport class AccountRegisterComponent implements OnInit {\n\n  accountRegisterForm;\n  vehicleInformation: Vehicle;\n  selectedServiceType: string;\n  selectedOperatorType: string;\n  serviceTypes: ServiceType[] = [\n    { code: '1', name: 'Transport_Service', description: 'Transport Service' },\n    { code: '2', name: 'Collector_Service', description: 'Collector Service' },\n  ];\n  operatorTypes: OperatorType[] = [\n    { code: '1', name: 'Transport', description: 'Transport type' },\n    { code: '2', name: 'Collector', description: 'Collector type' },\n  ];\n\n  constructor(private formBuilder: FormBuilder, private accountService: AccountService, public matDialog: MatDialog) {\n    this.accountRegisterForm = this.formBuilder.group({\n      accountSearch: new FormControl('', [\n        /*Validators.required*/\n      ]),\n      account: new FormControl({value: '', disabled: true}, [\n        /*Validators.required*/\n      ]),\n      user: new FormControl({value: '', disabled: true}, [\n\n      ]),\n      description: new FormControl('', [\n\n      ]),\n      status: new FormControl(false, [\n\n      ]),\n      serviceType: new FormControl('', [\n\n      ]),\n      matrix: this.formBuilder.group({\n        identifier: new FormControl('', [\n\n        ]),\n        name: new FormControl('', [\n\n        ]),\n        matrixDescription: new FormControl('', [\n\n        ])\n      }),\n      route: this.formBuilder.group({\n        routeIdentifier: new FormControl('', [\n\n        ]),\n        routeName: new FormControl('', [\n\n        ]),\n        routeDescription: new FormControl('', [\n\n        ]),\n        routeStatus: new FormControl(true, [\n\n        ]),\n      }),\n      operator: this.formBuilder.group({\n        operatorCode: new FormControl('', [\n\n        ]),\n        operatorName: new FormControl('', [\n\n        ]),\n        operatorLastName: new FormControl('', [\n\n        ]),\n        operatorType: new FormControl('', [\n\n        ]),\n        operatorIdentification: new FormControl('', [\n\n        ]),\n        operatorDateAdmission: new FormControl('', [\n\n        ])\n      }),\n    })\n  }\n\n  ngOnInit() {\n  }\n\n  /* ---------- Load Information ----- */\n  searchAccount(userAccount) {\n    this.accountService.getAccountsByUserAccount(userAccount)\n    .subscribe(data => {\n      this.accountRegisterForm.patchValue({\n        account: data[0].account,\n        user: data[0].username,\n      });\n      console.log(\"Get account success! \" );\n    });\n  }\n\n  addVehicle(): void {\n    this.openAddVehicle();\n    /*this.cameras = this.accountRegisterForm.get('cameras') as FormArray;\n    this.cameras.push(this.createCamera());*/\n  }\n\n  /* ---------- Save ----------------- */\n  registerAccount() {\n    //TEST\n    /*console.log(this.accountRegisterForm.value);\n    console.log(\"raw value\");\n    console.log(this.accountRegisterForm.getRawValue());\n\n\n    this.openSuccesRegister(\"12345\");*/\n    const accountForm = this.accountRegisterForm.getRawValue();\n    accountForm.operator.vehicle = this.vehicleInformation;\n    this.accountService.registerAccount(accountForm)\n    .subscribe(data => {\n\n      this.openSuccesRegister(this.accountRegisterForm.getRawValue().account);\n      this.accountRegisterForm.reset();\n      console.log(\"Get account success! \" );\n    });\n  }\n\n  cancelRegisterAccount() {\n    this.accountRegisterForm.reset();\n  }\n\n  /* ---------- Dialog --------------- */\n  openSuccesRegister(message) {\n    const session = JSON.parse(localStorage.getItem('session'));\n    const dialogConfig = new MatDialogConfig();\n    // The user can't close the dialog by clicking outside its body\n    dialogConfig.disableClose = true;\n    dialogConfig.id = \"register-success-message\";\n    dialogConfig.height = \"20em\";\n    dialogConfig.width = \"30em\";\n    dialogConfig.data = {title: session.clientId, message: message};\n    // https://material.angular.io/components/dialog/overview\n    const modalDialog = this.matDialog.open(RegisterSuccessComponent, dialogConfig);\n  }\n\n  openAddVehicle() {\n    const dialogVehicleConfig = new MatDialogConfig();\n    // The user can't close the dialog by clicking outside its body\n    dialogVehicleConfig.disableClose = true;\n    dialogVehicleConfig.id = \"add-vehicle\";\n    dialogVehicleConfig.height = \"30em\";\n    dialogVehicleConfig.width = \"50em\";\n    dialogVehicleConfig.data = {};\n    // https://material.angular.io/components/dialog/overview\n    const modalVehicleDialog = this.matDialog.open(AddVehicleComponent, dialogVehicleConfig);\n\n    modalVehicleDialog.afterClosed().subscribe(data => {\n      console.log('The dialog was closed');\n      console.log(data);\n      if (data != undefined) {\n        this.vehicleInformation = data\n      }\n    });\n  }\n\n  /* ----------  Form attributes ----- */\n  get accountSearch() { return this.accountRegisterForm.get('accountSearch'); }\n  get account() { return this.accountRegisterForm.get('account'); }\n  get user() { return this.accountRegisterForm.get('user'); }\n  get description() { return this.accountRegisterForm.get('description'); }\n  get status() { return this.accountRegisterForm.get('status'); }\n  get serviceType() { return this.accountRegisterForm.get('serviceType'); }\n  get identifier() { return this.accountRegisterForm.get('matrix').get('identifier'); }\n  get name() { return this.accountRegisterForm.get('matrix').get('name'); }\n  get matrixDescription() { return this.accountRegisterForm.get('matrix').get('matrixDescription'); }\n  get routeIdentifier() { return this.accountRegisterForm.get('route').get('routeIdentifier'); }\n  get routeName() { return this.accountRegisterForm.get('route').get('routeName'); }\n  get routeDescription() { return this.accountRegisterForm.get('route').get('routeDescription'); }\n  get operatorCode() { return this.accountRegisterForm.get('operator').get('operatorCode'); }\n  get operatorName() { return this.accountRegisterForm.get('operator').get('operatorName'); }\n  get operatorLastName() { return this.accountRegisterForm.get('operator').get('operatorLastName'); }\n  get operatorType() { return this.accountRegisterForm.get('operator').get('operatorType'); }\n  get operatorDateAdmission() { return this.accountRegisterForm.get('operator').get('operatorDateAdmission'); }\n\n}\n","<div class=\"visionpi-container\">\n  <div class=\"visionpi-column\">\n    <mat-card class=\"visionpi-card\">\n      <router-outlet></router-outlet>\n    </mat-card>\n  </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'administration',\n  templateUrl: './administration.component.html',\n  styleUrls: ['./administration.component.scss']\n})\nexport class AdministrationComponent implements OnInit {\n\n  constructor(public router: Router) { }\n\n  ngOnInit() {\n    this.router.navigate(['/home/geolocalization/administration/account-list']);\n  }\n\n}\n","<div class=\"visionpi-container\">\n  <div class=\"visionpi-column\">\n    <mat-card class=\"visionpi-card\">\n      <router-outlet></router-outlet>\n    </mat-card>\n  </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'command-base',\n  templateUrl: './command-base.component.html',\n  styleUrls: ['./command-base.component.scss']\n})\nexport class CommandBaseComponent implements OnInit {\n\n  constructor(public router: Router) { }\n\n  ngOnInit() {\n    this.router.navigate(['/home/geolocalization/base/track-list']);\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { GeolocalizationComponent } from './geolocalization.component';\nimport { AdministrationComponent } from './administration/administration.component';\nimport { AccountRegisterComponent } from './account-register/account-register.component';\nimport { AccountListComponent } from './account-list/account-list.component';\nimport { TrackerComponent } from './tracker/tracker.component';\nimport { TrackAccountComponent } from './track-account/track-account.component';\nimport { TrackAccountsComponent } from './track-accounts/track-accounts.component';\nimport { CommandBaseComponent } from './command-base/command-base.component';\nimport { TrackListComponent } from './track-list/track-list.component';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: GeolocalizationComponent,\n    //canActivate: [AuthGuard],\n    children: [\n      {\n        path: 'administration',\n        component: AdministrationComponent,\n        children: [\n          {\n            path: 'account',\n            component: AccountRegisterComponent\n          },\n          {\n            path: 'account-list',\n            component: AccountListComponent\n          },\n          {\n            path: 'tracker',\n            component: TrackerComponent,\n            children: [\n              /*{\n                path: 'track-account',\n                component: TrackAccountComponent\n              },*/\n              {\n                path: 'track-accounts',\n                component: TrackAccountsComponent\n              }\n            ]\n          }\n        ]\n      },\n      {\n        path: 'base',\n        component: CommandBaseComponent,\n        children: [\n          {\n            path: 'track-account',\n            component: TrackAccountComponent\n          },\n          {\n            path: 'track-list',\n            component: TrackListComponent\n          }\n        ]\n      }\n    ]\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class GeolocalizationRoutingModule { }\n","<!-- Add Content Here -->\n<router-outlet></router-outlet>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-geolocalization',\n  templateUrl: './geolocalization.component.html',\n  styleUrls: ['./geolocalization.component.scss']\n})\nexport class GeolocalizationComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","import { NgModule, CUSTOM_ELEMENTS_SCHEMA } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { GeolocalizationRoutingModule } from './geolocalization-routing.module';\nimport { AdministrationComponent } from './administration/administration.component';\nimport { ConfigurationComponent } from './configuration/configuration.component';\nimport { GeolocalizationComponent } from './geolocalization.component';\nimport { MapComponent } from './map/map.component';\nimport { TrackerComponent } from './tracker/tracker.component';\nimport { AngularMaterialModule } from '../angular-material/angular-material.module';\nimport { ReactiveFormsModule }    from '@angular/forms';\nimport { AgmCoreModule } from '@agm/core';\nimport { AccountRegisterComponent } from './account-register/account-register.component';\nimport { RegisterSuccessComponent } from './messages/register-success/register-success.component';\nimport { AccountListComponent } from './account-list/account-list.component';\nimport { TrackAccountComponent } from './track-account/track-account.component';\nimport { TrackAccountsComponent } from './track-accounts/track-accounts.component';\nimport { TrackAccountsSearchComponent } from './messages/track-accounts-search/track-accounts-search.component';\nimport { CommandBaseComponent } from './command-base/command-base.component';\nimport { TrackListComponent } from './track-list/track-list.component';\nimport { AddVehicleComponent } from './messages/add-vehicle/add-vehicle.component';\n\n@NgModule({\n  declarations: [\n    AdministrationComponent,\n    ConfigurationComponent,\n    GeolocalizationComponent,\n    MapComponent,\n    TrackerComponent,\n    AccountRegisterComponent,\n    RegisterSuccessComponent,\n    AccountListComponent,\n    TrackAccountComponent,\n    TrackAccountsComponent,\n    TrackAccountsSearchComponent,\n    CommandBaseComponent,\n    TrackListComponent,\n    AddVehicleComponent\n  ],\n  imports: [\n    CommonModule,\n    GeolocalizationRoutingModule,\n    AngularMaterialModule,\n    ReactiveFormsModule,\n    AgmCoreModule.forRoot({\n      apiKey: 'AIzaSyAayFvx8P7QhqlUt-GbyOZ6InBVNNZPa5k'\n    }),\n  ],\n  exports: [ TrackListComponent ],\n  entryComponents: [RegisterSuccessComponent, TrackAccountsSearchComponent, AddVehicleComponent],\n  schemas: [CUSTOM_ELEMENTS_SCHEMA]\n})\nexport class GeolocalizationModule { }\n","<div class=\"map-container\">\n  <div class=\"map-column\">\n    <agm-map [zoom]=\"zoom\" [latitude]=\"lat\" [longitude]=\"lng\">\n    \t<agm-marker\n        *ngFor=\"let point of checkpoints\"\n        [latitude]=\"point.lat\"\n        [longitude]=\"point.lng\"\n        [label]=\"point.checkpoint\"\n        [title]=\"point.operator\">\n      </agm-marker>\n      <agm-polyline [editable]=\"false\">\n        <agm-polyline-point\n          *ngFor=\"let line of checkpointsLines\"\n          [latitude]=\"line.lat\"\n          [longitude]=\"line.lng\">\n        </agm-polyline-point>\n      </agm-polyline>\n    </agm-map>\n  </div>\n</div>\n<div *ngIf=\"infoBottomShow\" class=\"map-container\">\n  <div class=\"map-column\">\n    <p> Operator: <span>{{lastCheckpoint.operator}}</span></p>\n    <p> Date:\n      <span> {{lastCheckpoint.registerDate}} </span>\n      <!--<span> -- {{lastCheckpoint.operator}} </span>\n      <span> -- {{lastCheckpoint.updated_at}} </span>-->\n    </p>\n  </div>\n  <div class=\"map-column map-column-items-end\">\n    <button mat-icon-button class=\"refresh-button\" (click)=\"loadCheckpoints()\" >\n      <mat-icon>refresh</mat-icon>\n    </button>\n    <button mat-icon-button class=\"more-button\" [matMenuTriggerFor]=\"menu\" aria-label=\"Toggle menu\">\n      <mat-icon>more_vert</mat-icon>\n    </button>\n    <mat-menu #menu=\"matMenu\" xPosition=\"before\">\n      <button mat-menu-item i18n>Video</button>\n      <button mat-menu-item i18n>Revisión</button>\n      <button mat-menu-item i18n>Notificación</button>\n    </mat-menu>\n  </div>\n</div>\n<div *ngIf=\"searchBottomShow\" class=\"map-container\">\n  <div class=\"map-column map-column-items-end\">\n    <button mat-icon-button class=\"refresh-button\" (click)=\"loadCheckpoints()\" >\n      <mat-icon>refresh</mat-icon>\n    </button>\n    <button mat-icon-button class=\"more-button\" [matMenuTriggerFor]=\"menu\" aria-label=\"Toggle menu\">\n      <mat-icon>more_vert</mat-icon>\n    </button>\n    <mat-menu #menu=\"matMenu\" xPosition=\"before\">\n      <button mat-menu-item i18n>Video</button>\n      <button mat-menu-item i18n>Revisión</button>\n      <button mat-menu-item i18n>Notificación</button>\n    </mat-menu>\n  </div>\n</div>\n","import { Component, OnInit, Input } from '@angular/core';\nimport { GeolocalizationService } from './../services/geolocalization.service';\nimport { Checkpoint } from './../interfaces/checkpoint';\nimport { map } from 'rxjs/operators';\n//import * as io from \"socket.io-client\";\nimport { environment } from '../../../environments/environment';\n\n@Component({\n  selector: 'map',\n  templateUrl: './map.component.html',\n  styleUrls: ['./map.component.scss']\n})\nexport class MapComponent implements OnInit {\n\n  @Input() public routeName: string;\n  @Input() public operator: string;\n  @Input() public checkpointsList: Checkpoint[] = [];\n  @Input() public type: string;\n\n  zoom: number = 15;\n  center: string;\n  checkpoints: Checkpoint[] = [];\n  checkpointsLines: Checkpoint[] = [];\n  chats: any;\n  joinned: boolean = false;\n  newUser = { user: '', fleet: '' };\n  msgData = { fleet: '', user: '', checkpoint: '' };\n  //socket = io(environment.apiUrl);\n  newCheckpoint: Checkpoint;\n  lastCheckpoint: Checkpoint;\n  lat: number;\n  lng: number;\n  infoBottomShow: boolean = true;\n  searchBottomShow: boolean = false;\n\n  constructor(private geolocalizationService: GeolocalizationService) {\n\n  }\n\n  ngOnInit() {\n    //this.joinRoom();\n    var user = JSON.parse(localStorage.getItem(\"currentUser\"));\n    /*this.socket.on('event', function (data) {\n      if(data.message.user === user.username && data.message.route == this.routeId) {\n        this.newCheckpoint = data.message;\n        this.checkpoints.push(this.newCheckpoint);\n      }\n    }.bind(this));*/\n\n  \tthis.loadCheckpoints();\n\n  }\n\n  loadCheckpoints() {\n    if (this.type == \"1\") {\n      this.checkpoints = this.checkpointsList,\n      this.lastCheckpoint = this.checkpointsList[this.checkpointsList.length - 1];\n      this.lat = this.lastCheckpoint.lat;\n      this.lng = this.lastCheckpoint.lng;\n      this.center = this.checkpointsList[0].lat + \", \" + this.checkpointsList[0].lng;\n      this.zoom =14;\n      this.infoBottomShow = false;\n      this.searchBottomShow = true;\n    } else {\n      this.checkpoints = this.checkpointsList,\n      this.checkpointsLines = this.checkpointsList,\n      this.lastCheckpoint = this.checkpointsList[this.checkpointsList.length - 1];\n      this.lat = this.lastCheckpoint.lat;\n      this.lng = this.lastCheckpoint.lng;\n      this.center = this.checkpointsList[0].lat + \", \" + this.checkpointsList[0].lng;\n    }\n  }\n\n  joinRoom() {\n    var date = new Date();\n    var user = JSON.parse(localStorage.getItem(\"currentUser\"));\n    this.joinned = true;\n    //this.socket.emit('connectionUserGpx', { room: user.username, username: user.username, message: 'Join this room', updated_at: date });\n  }\n\n}\n","<div class=\"visionpi-message-container-main\">\n  <div class=\"visionpi-container\" style=\"height:4em;\">\n    <div class=\"visionpi-column\">\n      <h5 class=\"visionpi-form-header\" i18n>Add Vehicle</h5>\n    </div>\n    <div class=\"visionpi-column visionpi-column-items-end\">\n      <button class=\"visionpi-button visionpi-button-save\" [disabled]=\"!addVehicleForm.valid\" (click)=\"addVehicle()\" i18n>Add</button>\n      <button class=\"visionpi-button visionpi-button-cancel\" (click)=\"close()\" i18n>Cancel</button>\n    </div>\n  </div>\n  <mat-divider></mat-divider>\n  <form class=\"visionpi-form\" [formGroup]=\"addVehicleForm\">\n    <div class=\"visionpi-container\">\n      <div class=\"visionpi-column\">\n        <div class=\"visionpi-container\">\n          <div class=\"visionpi-column\">\n            <input formControlName=\"code\" placeholder=\"Code\" class=\"visionpi-input\" i18n>\n          </div>\n          <div class=\"visionpi-column\">\n            <input formControlName=\"brand\" placeholder=\"Brand\" class=\"visionpi-input\" i18n>\n          </div>\n        </div>\n        <div class=\"visionpi-container\">\n          <div class=\"visionpi-column\">\n            <input formControlName=\"model\" placeholder=\"Model\" class=\"visionpi-input\" i18n>\n          </div>\n          <div class=\"visionpi-column\">\n            <input formControlName=\"year\" placeholder=\"Year\" class=\"visionpi-input\" i18n>\n          </div>\n        </div>\n        <div class=\"visionpi-container\">\n          <div class=\"visionpi-column\">\n            <input formControlName=\"type\" placeholder=\"Type\" class=\"visionpi-input\" i18n>\n          </div>\n          <div class=\"visionpi-column\">\n\n          </div>\n        </div>\n      </div>\n      <mat-divider></mat-divider>\n    </div>\n  </form>\n</div>\n","import { Component, OnInit, Inject } from '@angular/core';\nimport { FormBuilder, FormControl, FormArray, FormGroup, Validators } from '@angular/forms';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { Vehicle } from '../../interfaces/vehicle';\n\n@Component({\n  selector: 'add-vehicle',\n  templateUrl: './add-vehicle.component.html',\n  styleUrls: ['./add-vehicle.component.scss']\n})\nexport class AddVehicleComponent implements OnInit {\n\n  addVehicleForm;\n\n  constructor(private formBuilder: FormBuilder, public dialogRef: MatDialogRef<AddVehicleComponent>,\n    @Inject(MAT_DIALOG_DATA) public data: Vehicle) {\n    this.addVehicleForm = this.formBuilder.group({\n      code: new FormControl('', [\n\n      ]),\n      brand: new FormControl('', [\n\n      ]),\n      model: new FormControl('', [\n\n      ]),\n      year: new FormControl('', [\n\n      ]),\n      type: new FormControl('', [\n\n      ])\n    });\n  }\n\n  ngOnInit() {\n  }\n\n  addVehicle() {\n    console.log(\"raw value\");\n    console.log(this.addVehicleForm.getRawValue());\n    this.dialogRef.close(this.addVehicleForm.getRawValue());\n  }\n\n  // If the user clicks the cancel button a.k.a. the go back button, then\\\n  // just close the modal\n  close() {\n    this.dialogRef.close();\n  }\n\n  get code() { return this.addVehicleForm.get('vehicle').get('code'); }\n  get brand() { return this.addVehicleForm.get('vehicle').get('brand'); }\n  get model() { return this.addVehicleForm.get('vehicle').get('model'); }\n  get year() { return this.addVehicleForm.get('vehicle').get('year'); }\n  get type() { return this.addVehicleForm.get('vehicle').get('type'); }\n\n}\n","La {{data.message}} cuenta fue registrada con éxito!","import { Component, OnInit , Inject} from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { RegisterSuccessMessage } from '../interfaces/register-success-message'\n\n@Component({\n  selector: 'register-success',\n  templateUrl: './register-success.component.html',\n  styleUrls: ['./register-success.component.scss']\n})\nexport class RegisterSuccessComponent implements OnInit {\n\n  constructor(public dialogRef: MatDialogRef<RegisterSuccessComponent>,\n              @Inject(MAT_DIALOG_DATA) public data: RegisterSuccessMessage) { }\n\n  ngOnInit() {\n  }\n\n  // When the user clicks the action button a.k.a. the logout button in the\\\n  // modal, show an alert and followed by the closing of the modal\n  action() {\n    this.close();\n  }\n\n  // If the user clicks the cancel button a.k.a. the go back button, then\\\n  // just close the modal\n  close() {\n    this.dialogRef.close();\n  }\n\n}\n","<div class=\"track-accounts-search-container\">\n  <div class=\"track-accounts-search-column\">\n    <header class=\"track-accounts-search-header\">\n      <h2></h2>\n      <h2 i18n>Search by Account</h2>\n    </header>\n  </div>\n  <div class=\"track-accounts-search-column track-accounts-search-column-items-end\">\n    <button class=\"track-accounts-search-button-search\" (click)=\"search($event)\"><mat-icon>search</mat-icon></button>\n  </div>\n</div>\n<div class=\"track-accounts-search-container\">\n  <div class=\"track-accounts-search-column\">\n    <div class=\"track-accounts-search-select-container\">\n      <mat-form-field>\n        <!--<mat-label>Account</mat-label>-->\n        <mat-select panelClass=\"track-accounts-search-select-panel\" [(value)]=\"selectedAccount\" (selectionChange)=\"loadFleets()\">\n          <mat-option value=\"none\" i18n>Select Account</mat-option>\n          <mat-option *ngFor=\"let account of accounts\" [value]=\"account.account\">\n            {{account.account}}\n          </mat-option>\n        </mat-select>\n      </mat-form-field>\n    </div>\n  </div>\n</div>\n<div class=\"track-accounts-search-container\">\n  <div class=\"track-accounts-search-column\">\n    <div class=\"track-accounts-search-select-container\">\n      <mat-form-field>\n        <!--<mat-label>Fleet</mat-label>-->\n        <mat-select panelClass=\"track-accounts-search-select-panel\"\n                    [(value)]=\"selectedFleet\"\n                    (selectionChange)=\"loadRoutes()\"\n                    [disabled]=\"disableFleet\">\n          <mat-option value=\"none\" i18n>Select Fleet</mat-option>\n          <mat-option *ngFor=\"let fleet of fleets\" [value]=\"fleet.id\">\n            {{fleet.name}}\n          </mat-option>\n        </mat-select>\n      </mat-form-field>\n    </div>\n  </div>\n</div>\n<div class=\"track-accounts-search-container\">\n  <div class=\"track-accounts-search-column\">\n    <div class=\"track-accounts-search-select-container\">\n      <mat-form-field>\n        <!--<mat-label>Route</mat-label>-->\n        <mat-select panelClass=\"track-accounts-search-select-panel\"\n                    [(value)]=\"selectedRoute\"\n                    [disabled]=\"disableRoute\">\n          <mat-option value=\"none\" i18n>Select Route</mat-option>\n          <mat-option *ngFor=\"let route of routes\" [value]=\"route.id\">\n            {{route.name}}\n          </mat-option>\n        </mat-select>\n      </mat-form-field>\n    </div>\n  </div>\n</div>\n","import { Component, OnInit, Inject, ViewEncapsulation } from '@angular/core';\nimport { MatBottomSheet, MatBottomSheetRef, MAT_BOTTOM_SHEET_DATA } from '@angular/material/bottom-sheet';\n\n@Component({\n  selector: 'track-accounts-search',\n  templateUrl: './track-accounts-search.component.html',\n  styleUrls: ['./track-accounts-search.component.scss'],\n  encapsulation: ViewEncapsulation.None\n})\nexport class TrackAccountsSearchComponent implements OnInit {\n\n  disableSearch: boolean;\n  disableAccount: boolean;\n  disableFleet: boolean;\n  disableRoute: boolean;\n  selectedAccount: string;\n  selectedFleet: string;\n  selectedRoute: string;\n  accounts;\n  fleets;\n  routes;\n  vehicles;\n\n  constructor(private _bottomSheetRef: MatBottomSheetRef<TrackAccountsSearchComponent>,\n              @Inject(MAT_BOTTOM_SHEET_DATA) public data: any) { }\n\n  ngOnInit() {\n    this.disableSearch = true;\n    this.disableAccount = true;\n    this.disableFleet = true;\n    this.disableRoute = true;\n    this.selectedAccount = 'none';\n    this.loadAccounts();\n  }\n\n  search(event: MouseEvent): void {\n    this._bottomSheetRef.dismiss(this.selectedRoute);\n    event.preventDefault();\n  }\n\n  loadAccounts() {\n    this.accounts = this.data.accounts;\n    this.selectedFleet = 'none';\n    this.disableFleet = false;\n  }\n\n  loadFleets() {\n    let accountInfo = this.accounts.filter(it => it.account == this.selectedAccount);\n    this.fleets = accountInfo[0].fleets;\n    this.selectedRoute = 'none';\n    this.disableRoute = false;\n  }\n\n  loadRoutes() {\n    let fleetInfo = this.fleets.filter(it => it.id == this.selectedFleet);\n    this.routes = fleetInfo[0].routes;\n    this.disableSearch = false;\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { catchError } from 'rxjs/operators';\n//import { HttpErrorHandler, HandleError } from './http-error-handler.service';\nimport { Checkpoint } from '../interfaces/checkpoint';\nimport { Account } from '../interfaces/account';\nimport { environment } from '../../../environments/environment';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AccountService {\n\n  constructor(private http: HttpClient) { }\n\n  getAccounts() {\n      return this.http.get<Account[]>(environment.apiGeolocalization + \"/accounts\");\n  }\n\n  getAccountsDetails() {\n      return this.http.get<Account[]>(environment.apiGeolocalization + \"/accounts/details\");\n  }\n\n  getAccountsByUserAccount(userAccount: Account) {\n      return this.http.get<Account[]>(environment.apiUsers + \"/account/\" + userAccount);\n  }\n\n  getAccountDetailsByAccount(userAccount: string) {\n      return this.http.get<any>(environment.apiGeolocalization + \"/accounts/\" + userAccount);\n  }\n\n  registerAccount(account: Account) {\n      return this.http.post(environment.apiGeolocalization + \"/accounts\", account);\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { catchError } from 'rxjs/operators';\n//import { HttpErrorHandler, HandleError } from './http-error-handler.service';\nimport { Checkpoint } from '../interfaces/checkpoint';\nimport { CheckpointAccount } from '../interfaces/checkpoint-account';\nimport { Route } from '../interfaces/route';\nimport { environment } from '../../../environments/environment';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class GeolocalizationService {\n  //private handleError: HandleError;\n\n  constructor(private http: HttpClient /*, httpErrorHandler: HttpErrorHandler*/) {\n  \t//this.handleError = httpErrorHandler.createHandleError('GpxService');\n  }\n\n  getAllRoutes(): Observable<Route[]> {\n    return this.http.get<Route[]>(environment.apiGeolocalization + '/checkpoints');\n  }\n\n  getAllCheckpoints(): Observable<Checkpoint[]> {\n    return this.http.get<Checkpoint[]>(environment.apiGeolocalization + '/checkpoints');\n  }\n\n  getCheckpointsByRoute(route): Observable<Route[]> {\n    return this.http.get<Route[]>(environment.apiGeolocalization + '/checkpoints/' + route);\n  }\n\n  getCheckpointsByAccount(account): Observable<CheckpointAccount[]> {\n    return this.http.get<CheckpointAccount[]>(environment.apiGeolocalization + '/checkpoints/account/' + account);\n  }\n\n}\n","<div class=\"visionpi-container-main\">\n  <div class=\"visionpi-container\">\n    <div class=\"visionpi-column\">\n      <header class=\"visionpi-header\">\n        <h3 i18n>Geolocalization > Tracker </h3>\n      </header>\n    </div>\n    <div class=\"visionpi-column visionpi-column-items-end\">\n      <button routerLink=\"/home/geolocalization/base/track-list\" class=\"visionpi-button\" i18n> <mat-icon class=\"visionpi-button-icon\">group</mat-icon>Track List</button>\n    </div>\n  </div>\n  <mat-divider></mat-divider>\n  <div class=\"visionpi-container\">\n    <div class=\"visionpi-column\" *ngFor=\"let vehicle of vehicles\">\n      <div class=\"track-accounts-vehicle-container\">\n        <map  [checkpointsList]=\"vehicle.checkpoints\"\n              [routeName]=\"vehicle.route\"\n              [operator]=\"vehicle.fleet\"\n              [type]=\"vehicle.type\">\n        </map>\n      </div>\n    </div>\n  </div>\n</div>\n","import { Component, OnInit, AfterViewInit, ViewEncapsulation } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { GeolocalizationService } from '../services/geolocalization.service';\nimport { CheckpointAccount } from './../interfaces/checkpoint-account';\nimport { CryptoTool } from '../../core/crypto/crypto-tool'\n\n@Component({\n  selector: 'track-account',\n  templateUrl: './track-account.component.html',\n  styleUrls: ['./track-account.component.scss'],\n  encapsulation: ViewEncapsulation.None\n})\nexport class TrackAccountComponent implements AfterViewInit {\n\n  vehicles;\n  checkpoints: CheckpointAccount[] = [];\n\n  constructor(private route: ActivatedRoute, private geolocalizationService: GeolocalizationService, private cryptoTool: CryptoTool) { }\n\n  ngOnInit() {\n  }\n\n  ngAfterViewInit() {\n    //this.loadCheckpoints();\n    this.loadCheckpointsByAccount();\n  }\n\n  loadCheckpoints() {\n    let routeParam = this.route.snapshot.paramMap.get('route');\n    this.geolocalizationService.getCheckpointsByRoute(routeParam)\n    .subscribe(data => {\n      this.vehicles = data;\n      console.log(\"Load Checkpoints success! \" );\n    })\n  }\n\n  loadCheckpointsByAccount() {\n    const account = this.cryptoTool.decryptString(localStorage.getItem('vp'));\n    //let routeParam = this.route.snapshot.paramMap.get('route');\n    this.geolocalizationService.getCheckpointsByAccount(account)\n    .subscribe(data => {\n      for (let point of data) {\n        this.checkpoints.push(point.last_point)\n      }\n      this.vehicles = [{route:\"\", fleet:\"\", checkpoints:this.checkpoints, type:\"1\"}];\n      console.log(\"Load Checkpoints success! \" );\n    })\n  }\n\n}\n","<div class=\"visionpi-container-main\">\n  <div class=\"visionpi-container\">\n    <div class=\"visionpi-column\">\n      <header class=\"visionpi-header\">\n        <h3 i18n>Geolocalization > Administration > Tracker > Track Accounts</h3>\n      </header>\n    </div>\n    <div class=\"visionpi-column visionpi-column-items-end\">\n      <button routerLink=\"/home/geolocalization/administration/account\" class=\"visionpi-button\" i18n> <mat-icon class=\"visionpi-button-icon\">person_add</mat-icon>Add account</button>\n      <button routerLink=\"/home/geolocalization/administration/account-list\" class=\"visionpi-button\" i18n> <mat-icon class=\"visionpi-button-icon\">group</mat-icon>Account List</button>\n      <button class=\"track-accounts-button-search \" (click)=\"openAccountSearch()\" i18n><mat-icon>search</mat-icon>Search</button>\n    </div>\n  </div>\n  <mat-divider></mat-divider>\n  <div class=\"visionpi-container\">\n    <div class=\"visionpi-column\" *ngFor=\"let vehicle of vehicles\">\n      <div class=\"track-accounts-vehicle-container\">\n        <map  [checkpointsList]=\"vehicle.checkpoints\"\n              [routeName]=\"vehicle.route\"\n              [operator]=\"vehicle.fleet\">\n        </map>\n      </div>\n    </div>\n  </div>\n</div>\n","import { Component, OnInit, AfterViewInit, ViewEncapsulation } from '@angular/core';\nimport { MatBottomSheet, MatBottomSheetRef } from '@angular/material/bottom-sheet';\nimport { AccountService } from '../services/account.service';\nimport { GeolocalizationService } from '../services/geolocalization.service';\nimport { TrackAccountsSearchComponent } from '../messages/track-accounts-search/track-accounts-search.component';\n\n@Component({\n  selector: 'track-accounts',\n  templateUrl: './track-accounts.component.html',\n  styleUrls: ['./track-accounts.component.scss'],\n  encapsulation: ViewEncapsulation.None\n})\nexport class TrackAccountsComponent implements AfterViewInit {\n  disableSelectAccounts = true;\n  accounts;\n  vehicles;\n\n  constructor(private _bottomSheet: MatBottomSheet,\n              private accountService: AccountService,\n              private geolocalizationService: GeolocalizationService) { }\n\n  ngOnInit() {  }\n\n  ngAfterViewInit() {\n    this.loadAccounts();\n  }\n\n  openAccountSearch(): void {\n    this._bottomSheet.open(TrackAccountsSearchComponent, {\n      data: { accounts: this.accounts }, disableClose: true\n    }).afterDismissed().subscribe(data => {\n      this.loadCheckpoints(data);\n      console.log('Data =' + data);\n    });\n  }\n\n  loadAccounts() {\n    this.accountService.getAccountsDetails()\n    .subscribe(data => {\n      this.accounts = data;\n      this.openAccountSearch();\n      console.log(\"Load Accounts success! \" );\n    });\n  }\n\n  loadCheckpoints(route) {\n    this.geolocalizationService.getCheckpointsByRoute(route)\n    .subscribe(data => {\n      this.vehicles = data;\n      console.log(\"Load Checkpoints success! \" );\n    })\n  }\n\n}\n","<div class=\"visionpi-container-main\">\n  <div class=\"visionpi-container\">\n    <div class=\"visionpi-column\">\n      <h3 class=\"visionpi-header\" i18n>Geolocalization </h3>\n    </div>\n    <div class=\"visionpi-column visionpi-column-items-end\">\n      <div class=\"\">\n        <!-- <button routerLink=\"/home/video-surveillance/administration/account-register\" class=\"visionpi-button\"> <mat-icon class=\"visionpi-button-icon\">playlist_add</mat-icon>Add account</button> -->\n        <!-- <button routerLink=\"/home/video-surveillance/administration/cctv\" class=\"visionpi-button\"> <mat-icon class=\"visionpi-button-icon\">videocam</mat-icon>CCTV</button> -->\n      </div>\n    </div>\n  </div>\n  <!--\n  <header class=\"account-list-header\">\n    <h3></h3>\n    <h3>Account List</h3>\n  </header>-->\n  <mat-divider></mat-divider>\n  <div class=\"visionpi-container\">\n    <div class=\"visionpi-column\">\n      <table mat-table [dataSource]=\"data\" class=\"visionpi-table\"\n         matSort matSortActive=\"created\" matSortDisableClear matSortDirection=\"desc\">\n\n         <!-- Generic column definition -->\n         <!--\n         <ng-container *ngFor=\"let column of columns\" [cdkColumnDef]=\"column.columnDef\">\n           <mat-header-cell *cdkHeaderCellDef>{{ column.header }}</mat-header-cell>\n           <mat-cell *cdkCellDef=\"let row\">{{ column.cell(row) }}</mat-cell>\n         </ng-container>\n         -->\n\n         <ng-container *ngFor=\"let column of columns; let colIndex = index\" [cdkColumnDef]=\"column.columnDef\">\n           <th mat-header-cell *cdkHeaderCellDef i18n>{{ column.header }}</th>\n           <td mat-cell *cdkCellDef=\"let row\">\n             <ng-template [ngIf]=\"colIndex == 0 || colIndex == 1 || colIndex == 2 \">\n               {{ row[colIndex] }}\n             </ng-template>\n             <ng-template [ngIf]=\"colIndex == 3 && row[colIndex]\">\n               <div class=\"\">\n                 <mat-icon class=\"visionpi-table-icon-good\">check</mat-icon>\n               </div>\n             </ng-template>\n             <ng-template [ngIf]=\"colIndex == 3 && !row[colIndex]\">\n               <div class=\"\">\n                 <mat-icon class=\"visionpi-table-icon-bad\">remove</mat-icon>\n               </div>\n             </ng-template>\n             <ng-template [ngIf]=\"colIndex == 4\">\n               <button mat-icon-button>\n                 <mat-icon class=\"visionpi-table-icon-bad\">edit</mat-icon>\n               </button>\n             </ng-template>\n             <ng-template [ngIf]=\"colIndex == 5\">\n               <button mat-icon-button [disabled]=\"!row[3]\"\n                       [routerLink]=\"['/home/geolocalization/base/track-account']\">\n                 <mat-icon>rv_hookup</mat-icon>\n               </button>\n             </ng-template>\n           </td>\n         </ng-container>\n\n         <!-- Account Column -->\n         <!--<ng-container matColumnDef=\"{{title}}\" *ngFor=\"let title of displayedColumns\">\n           <th mat-header-cell *matHeaderCellDef >{{title}}</th>\n           <td mat-cell *matCellDef=\"let row\">{{row.fleet}}</td>\n         </ng-container>-->\n\n         <!-- Equipment Column -->\n         <!--\n         <ng-container matColumnDef=\"route\">\n           <th mat-header-cell *matHeaderCellDef>Route</th>\n           <td mat-cell *matCellDef=\"let row\">{{row.route}}</td>\n         </ng-container>\n         -->\n\n         <!-- Status Column -->\n         <!--\n         <ng-container matColumnDef=\"status\">\n           <th mat-header-cell *matHeaderCellDef>Status</th>\n           <td mat-cell *matCellDef=\"let row\">\n             <ng-template [ngIf]=\"row.status\">\n               <div class=\"\">\n                 <mat-icon class=\"visionpi-table-icon-good\">check</mat-icon>\n               </div>\n             </ng-template>\n             <ng-template [ngIf]=\"!row.status\">\n               <div class=\"\">\n                 <mat-icon class=\"visionpi-table-icon-bad\">remove</mat-icon>\n               </div>\n             </ng-template>\n           </td>-->\n           <!--<td mat-cell *matCellDef=\"let row\">{{row.status}}</td>-->\n         <!--</ng-container>-->\n\n         <!-- Cameras Column -->\n         <!--\n         <ng-container matColumnDef=\"vehicles\">\n           <th mat-header-cell *matHeaderCellDef>Vehicles</th>\n           <td mat-cell *matCellDef=\"let row\">{{row.vehicles}}</td>\n         </ng-container>\n         -->\n\n         <!-- Edit Column -->\n         <!--\n         <ng-container matColumnDef=\"edit\">\n           <th mat-header-cell *matHeaderCellDef></th>\n           <td mat-cell *matCellDef=\"let row\">\n             <button mat-icon-button>\n               <mat-icon>edit</mat-icon>\n             </button>\n           </td>\n         </ng-container>\n         -->\n\n         <!-- Play Column -->\n         <!--\n         <ng-container matColumnDef=\"play\">\n           <th mat-header-cell *matHeaderCellDef></th>\n           <td mat-cell *matCellDef=\"let row\">\n             <button mat-icon-button [disabled]=\"!row.status\"\n                     [routerLink]=\"['/home/geolocalization/base/track-account',row.routeId]\">\n               <mat-icon>rv_hookup</mat-icon>\n             </button>\n           </td>\n         </ng-container>\n         -->\n\n         <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n         <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\n       </table>\n       <mat-paginator [length]=\"resultsLength\" [pageSizeOptions]=\"[5, 10, 20]\" class=\"visionpi-paginator\"></mat-paginator>\n    </div>\n  </div>\n </div>\n","import { Component, OnInit, AfterViewInit, ViewChild } from '@angular/core';\nimport {MatPaginator} from '@angular/material/paginator';\nimport {MatTableDataSource} from '@angular/material/table';\nimport {MatSort} from '@angular/material/sort';\n/* Services */\nimport { AccountService } from '../services/account.service';\nimport { Track } from '../interfaces/track';\nimport { CryptoTool } from '../../core/crypto/crypto-tool'\n\n@Component({\n  selector: 'track-list',\n  templateUrl: './track-list.component.html',\n  styleUrls: ['./track-list.component.scss']\n})\nexport class TrackListComponent implements AfterViewInit {\n\n  @ViewChild(MatPaginator, {static: true}) paginator: MatPaginator;\n  @ViewChild(MatSort, {static: false}) sort: MatSort;\n  //displayedColumns: string[] = ['fleet', 'route', 'status', 'vehicles', 'play'];\n  data: any;\n  resultsLength = 0;\n  trackDescription: string = \"\"\n  trackList: Track[] = [];\n  //columns: [] = [];\n  displayedColumns : string [] = [];\n  columns : object [] = [];\n  tableData : string [] = [];\n\n  constructor(private accountService: AccountService, private cryptoTool: CryptoTool) { }\n\n  ngOnInit() {\n  }\n\n  ngAfterViewInit() {\n    //this.updateTableData();\n    this.loadAccount();\n  }\n\n  loadAccount() {\n    const account = localStorage.getItem('vp')\n    this.accountService.getAccountDetailsByAccount(this.cryptoTool.decryptString(account))\n    .subscribe(data => {\n      const headers = data.service.settings.tables.parameters.table.headers;\n      //this.displayedColumns = data.service.settings.tables.parameters.table.headers;\n      this.displayedColumns = this.generateHeaders(headers);\n      //this.trackDescription = data.description;\n      this.columns = this.generateColumns(headers);\n      this.tableData = this.generateData(headers, data);\n      //this.generateColumns(data.service.settings.tables.parameters.table);\n      this.generateDataToTable(data);\n      //this.data = new MatTableDataSource<Track>(this.trackList);\n      this.data = new MatTableDataSource<String>(this.tableData);\n      this.data.paginator = this.paginator;\n      console.log(\"Load Accounts success! \" );\n    });\n  }\n\n  generateDataToTable(matrixData: any){\n    matrixData.matrix.forEach(matrix => {\n      matrix.routes.forEach(route => {\n        const track = {\n          matrix: matrix.name,\n          route: route.name,\n          status: route.status,\n          operators: route.operators.length,\n          account: matrixData.account,\n          routeId: route.id\n        };\n        this.trackList.push(track);\n      });\n    });\n  }\n\n  /*generateColumns(tables: any){\n    tables.headers.forEach(item => {\n      this.columns.push({ columnDef: item.header, header: item.header, cell: (element: Element) => `${element.position}` })\n    });\n    this.displayedColumns = this.columns.map(c => c.columnDef);\n  }*/\n\n  updateTableData(){\n    //this.displayedColumns = this.generateHeaders(this.columnSliderValue);\n    //this.columns = this.generateColumns(this.columnSliderValue);\n    //this.tableData = this.generateData(this.columnSliderValue, this.rowSliderValue);\n\n    //this._dataSubject.next(this.tableData)\n  }\n\n  // Create headers, this is just a array of strings\n  generateHeaders(tableColumns : any){\n    var innerIndex : number = 0;\n    var displayedColumns : string [] = [];\n\n    do{\n      displayedColumns.push(tableColumns[innerIndex])\n    }\n    while (innerIndex++ < tableColumns.length);\n\n    return displayedColumns;\n\n  }\n\n  // Create columns, this is an array of objects. The object the holds the headingName, Label and Cell\n  generateColumns(tableColumns : any){\n    var innerIndex : number = 0;\n    var columnObj : object;\n    var columns : object[] = [];\n\n    do{\n      columnObj = new function(){\n        this.columnDef = tableColumns[innerIndex];\n        this.header    = tableColumns[innerIndex];\n        this.cell      = [];\n      }\n      columns.push(columnObj)\n    }\n\n    while (innerIndex++ < tableColumns.length);\n\n    return columns;\n\n  }\n\n  // Create table data, this is just a 2d array of sequential numbers\n  generateData (tableColumns : any, tableRows : any){\n    var innerIndex : number = 0;\n    var outerIndex : number = 0;\n    var value : number;\n    var tableRow : string [] = [];\n    var tableData : any [] = [];\n\n    /*do{\n      innerIndex = 1;\n      do{\n        value = outerIndex * 10 + innerIndex\n        tableRow.push(value.toString())\n      }\n      while (innerIndex++ < tableColumns.length);\n\n      tableData.push(tableRow);\n      tableRow = [];\n\n    }\n    while (outerIndex++ < tableRows.length - 1);*/\n    tableRows.matrix.forEach(matrix => {\n      matrix.routes.forEach(route => {\n        const track = [\n          matrix.name,\n          route.name,\n          route.operators.length,\n          route.status,\n          tableRows.account,\n          route.code\n        ];\n        tableData.push(track);\n      });\n    });\n\n    return tableData;\n\n  }\n\n\n}\n","<div class=\"tracker-container-principal\">\n  <!--\n  <div class=\"tracker-container\">\n    <div class=\"tracker-column\">\n      <header class=\"tracker-header\">\n        <h2>Tracker</h2>\n      </header>\n    </div>\n  -->\n    <!-- Only all accounts for the moment\n    <div class=\"tracker-column\">\n      <div class=\"\">\n        <button routerLink=\"/home/geolocalization/administration/tracker/track-account\" class=\"button\"> <mat-icon class=\"button-icon\">airport_shuttle</mat-icon>Track by account</button>\n        <button routerLink=\"/home/geolocalization/administration/tracker/track-accounts\" class=\"button\"> <mat-icon class=\"button-icon\">art_track</mat-icon>Track all accounts</button>\n      </div>\n    </div>\n    -->\n  <!--\n  </div>\n  <mat-divider></mat-divider>\n  -->\n  <div class=\"tracker-container\">\n    <div class=\"tracker-column\">\n      <mat-card class=\"tracker-card-content\">\n        <!-- Only all accounts for the moment\n        <router-outlet></router-outlet>\n        -->\n        <track-accounts></track-accounts>\n      </mat-card>\n    </div>\n  </div>\n</div>\n\n<!--<div class=\"grid-container\">\n  <-<h1 class=\"mat-h1\">Geolocalización > Monitoreo de Rutas</h1>->\n  <mat-grid-list cols=\"2\" rowHeight=\"350px\">\n    <mat-grid-tile *ngFor=\"let map of maps | async\" [colspan]=\"map.cols\" [rowspan]=\"map.rows\">\n    \t<map  [checkpointsList]=\"map.checkpoints\"\n            [routeName]=\"map.routeName\"\n            [operator]=\"map.operator\">\n      </map>\n    </mat-grid-tile>\n  </mat-grid-list>\n</div>-->\n","import { Component, OnInit, AfterViewInit } from '@angular/core';\n\n@Component({\n  selector: 'tracker',\n  templateUrl: './tracker.component.html',\n  styleUrls: ['./tracker.component.scss']\n})\nexport class TrackerComponent implements OnInit {\n\n  constructor() {}\n\n  ngOnInit() {  }\n\n}\n"],"sourceRoot":"webpack:///"}