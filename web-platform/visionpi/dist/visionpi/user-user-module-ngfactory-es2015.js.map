{"version":3,"sources":["./node_modules/@angular/material/expansion/typings/index.d.ts.MatExpansionPanel.html","./node_modules/@angular/material/expansion/typings/index.d.ts.MatExpansionPanelHeader.html","./src/app/user/administration/administration.component.html","./src/app/user/administration/administration.component.ts","./src/app/user/messages/successful-registration.component.html","./src/app/user/messages/successful-registration.component.ts","./src/app/user/user-list/user-list.component.html","./src/app/user/user-list/user-list.component.ts","./src/app/user/user-register/user-register.component.html","./src/app/user/user-register/user-register.component.ts","./src/app/user/user-routing.module.ts","./src/app/user/user.component.html","./src/app/user/user.component.ts","./src/app/user/user.module.ts","./src/app/user/user.service.ts"],"names":[],"mappings":"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","file":"user-user-module-ngfactory-es2015.js","sourcesContent":["<ng-content select=\"mat-expansion-panel-header\"></ng-content><div class=\"mat-expansion-panel-content\" role=\"region\" [@bodyExpansion]=\"_getExpandedState()\" (@bodyExpansion.done)=\"_bodyAnimationDone.next($event)\" [attr.aria-labelledby]=\"_headerId\" [id]=\"id\" #body><div class=\"mat-expansion-panel-body\"><ng-content></ng-content><ng-template [cdkPortalOutlet]=\"_portal\"></ng-template></div><ng-content select=\"mat-action-row\"></ng-content></div>","<span class=\"mat-content\"><ng-content select=\"mat-panel-title\"></ng-content><ng-content select=\"mat-panel-description\"></ng-content><ng-content></ng-content></span><span [@indicatorRotate]=\"_getExpandedState()\" *ngIf=\"_showToggle()\" class=\"mat-expansion-indicator\"></span>","<div class=\"visionpi-container\">\n  <div class=\"visionpi-column\">\n    <mat-card class=\"visionpi-card\">\n      <router-outlet></router-outlet>\n    </mat-card>\n  </div>\n</div>\n","import { Component, OnInit, ViewChild, AfterViewInit } from '@angular/core';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-administration',\n  templateUrl: './administration.component.html',\n  styleUrls: ['./administration.component.scss']\n})\nexport class AdministrationComponent  {\n\n  constructor(public router: Router) {\n  }\n\n  ngOnInit() {\n    this.router.navigate(['/home/user/administration/user-register']);\n  }\n\n}\n","<div class=\"register-success-container\">\r\n    <header id=\"register-success-header\">\r\n        <h1 id=\"register-success-title\">Hi {{data.user}}</h1>\r\n    </header>\r\n    <section id=\"register-success-body\">\r\n        <p>The registration of the new user \"{{data.newUser}}\" was successful!</p>\r\n    </section>\r\n    <footer id=\"register-success-footer\">\r\n      <div class=\"register-success-button-container\">\r\n        <div class=\"register-success-button-column\">\r\n\r\n        </div>\r\n        <div class=\"register-success-button-column\">\r\n          <!--<button mat-raised-button id=\"register-success-action-button\" (click)=\"action()\">Logout</button>-->\r\n          <button class=\"visionpi-button visionpi-button-save\" [mat-dialog-close]=\"\" (click)=\"close()\">Cheers!</button>\r\n        </div>\r\n      </div>\r\n    </footer>\r\n</div>\r\n","import {Component, Inject} from '@angular/core';\r\nimport {MatDialog, MatDialogRef, MAT_DIALOG_DATA} from '@angular/material/dialog';\r\nimport {SuccessfulRegistrationData} from '../interfaces/successful-registration-data'\r\n\r\n@Component({\r\n  selector: 'successful-registration',\r\n  templateUrl: 'successful-registration.component.html',\r\n  styleUrls: ['./successful-registration.component.scss']\r\n})\r\nexport class SuccessfulRegistration {\r\n\r\n  constructor(\r\n    public dialogRef: MatDialogRef<SuccessfulRegistration>,\r\n    @Inject(MAT_DIALOG_DATA) public data: SuccessfulRegistrationData) {}\r\n\r\n  onNoClick(): void {\r\n    this.dialogRef.close();\r\n  }\r\n\r\n  close(): void {\r\n    this.dialogRef.close();\r\n  }\r\n\r\n}\r\n","<div class=\"visionpi-container-main\">\n  <div class=\"visionpi-container\">\n    <div class=\"visionpi-column\">\n      <h3 class=\"visionpi-header\" i18n>Users > Administration > User List</h3>\n    </div>\n    <div class=\"visionpi-column visionpi-column-items-end\">\n      <button routerLink=\"/home/user/administration/user-register\" class=\"visionpi-button\" i18n> <mat-icon class=\"visionpi-button-icon\">person_add</mat-icon>Add user</button>\n      <button class=\"visionpi-button\" (click)=\"updateUsers()\" >\n        <mat-icon class=\"visionpi-button-icon\">refresh</mat-icon>\n      </button>\n    </div>\n  </div>\n  <mat-divider></mat-divider>\n  <div class=\"visionpi-container\">\n    <div class=\"visionpi-column\">\n      <table mat-table [dataSource]=\"data\" class=\"visionpi-table\"\n         matSort matSortActive=\"created\" matSortDisableClear matSortDirection=\"desc\">\n         <!-- User Column -->\n         <ng-container matColumnDef=\"user\">\n           <th mat-header-cell *matHeaderCellDef i18n>User</th>\n           <td mat-cell *matCellDef=\"let row\">{{row.username}}</td>\n         </ng-container>\n\n         <!-- FirstName Column -->\n         <ng-container matColumnDef=\"firstname\">\n           <th mat-header-cell *matHeaderCellDef i18n>FirstName</th>\n           <td mat-cell *matCellDef=\"let row\">{{row.firstname}}</td>\n         </ng-container>\n\n         <!-- LastName Column -->\n         <ng-container matColumnDef=\"lastname\">\n           <th mat-header-cell *matHeaderCellDef i18n>LastName</th>\n           <td mat-cell *matCellDef=\"let row\">{{row.lastname}}</td>\n         </ng-container>\n\n         <!-- Email Column -->\n         <ng-container matColumnDef=\"email\">\n           <th mat-header-cell *matHeaderCellDef i18n>Email</th>\n           <td mat-cell *matCellDef=\"let row\">{{row.email}}</td>\n         </ng-container>\n\n         <!-- Profile Column -->\n         <ng-container matColumnDef=\"profile\">\n           <th mat-header-cell *matHeaderCellDef i18n>Profile</th>\n           <td mat-cell *matCellDef=\"let row\">{{row.profile}}</td>\n         </ng-container>\n\n         <!-- Created Column -->\n         <ng-container matColumnDef=\"created\">\n           <th mat-header-cell *matHeaderCellDef mat-sort-header disableClear i18n>\n             Created\n           </th>\n           <td mat-cell *matCellDef=\"let row\">{{row.createdAt | date}}</td>\n         </ng-container>\n\n         <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n         <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\n       </table>\n       <mat-paginator [pageSizeOptions]=\"[5, 10, 20]\" showFirstLastButtons class=\"visionpi-paginator\"></mat-paginator>\n    </div>\n  </div>\n </div>\n","import { Component, OnInit, AfterViewInit, ViewChild } from '@angular/core';\nimport {MatPaginator} from '@angular/material/paginator';\nimport {MatTableDataSource} from '@angular/material/table';\nimport {MatSort} from '@angular/material/sort';\nimport { UserService } from '../user.service';\nimport { User } from '../models/user'\n\n@Component({\n  selector: 'user-list',\n  templateUrl: './user-list.component.html',\n  styleUrls: ['./user-list.component.scss']\n})\nexport class UserListComponent implements AfterViewInit  {\n  @ViewChild(MatPaginator, {static: true}) paginator: MatPaginator;\n  @ViewChild(MatSort, {static: false}) sort: MatSort;\n  displayedColumns: string[] = ['user', 'firstname', 'lastname', 'email', 'profile', 'created'];\n  /*dataSource = new MatTableDataSource<User>(ELEMENT_DATA);*/\n  //data = new MatTableDataSource<PeriodicElement>(ELEMENT_DATA);\n  data: any;\n  hide = true;\n  resultsLength = 0;\n  isLoadingResults = true;\n  isRateLimitReached = false;\n\n  constructor(public userService: UserService) { }\n\n  ngOnInit() {\n  }\n\n  ngAfterViewInit() {\n    this.userService.getAll()\n    .subscribe(data => {\n      this.data = new MatTableDataSource<User>(data);\n      this.data.paginator = this.paginator;\n      console.log(\"user admin service: \" + this.data)\n    });\n  }\n\n  applyFilter(filterValue: string) {\n    this.data.filter = filterValue.trim().toLowerCase();\n\n    if (this.data.paginator) {\n      this.data.paginator.firstPage();\n    }\n  }\n\n  updateUsers() {\n    this.userService.getAll()\n    .subscribe(data => {\n      this.data = data;\n      console.log(\"update users\");\n    });\n  }\n\n}\n","<div class=\"visionpi-container-main\">\n  <div class=\"visionpi-container\">\n    <div class=\"visionpi-column\">\n      <h3 class=\"visionpi-header\" i18n>User > Administration > User Register</h3>\n    </div>\n    <div class=\"visionpi-column visionpi-column-items-end\">\n      <button routerLink=\"/home/user/administration/user-list\" class=\"visionpi-button\" i18n> <mat-icon class=\"visionpi-button-icon\">person_add</mat-icon>User list</button>\n    </div>\n  </div>\n  <mat-divider></mat-divider>\n  <div class=\"visionpi-container\">\n    <div class=\"visionpi-column\">\n      <form class=\"visionpi-form\" [formGroup]=\"userForm\">\n        <mat-accordion class=\"example-headers-align\">\n          <mat-expansion-panel [expanded]=\"step === 0\" (opened)=\"setStep(0)\" hideToggle>\n            <mat-expansion-panel-header>\n              <mat-panel-title i18n>\n                Personal data\n              </mat-panel-title>\n              <mat-panel-description i18n>\n                Type your name and age.....\n                <mat-icon>account_circle</mat-icon>\n              </mat-panel-description>\n            </mat-expansion-panel-header>\n\n            <div class=\"visionpi-container\">\n              <div class=\"visionpi-column\">\n                <div class=\"visionpi-container\">\n                  <div class=\"visionpi-column\">\n                    <input placeholder=\"Firstname\" formControlName=\"firstname\" class=\"visionpi-input\" maxlength=\"25\" required i18n>\n                  </div>\n                  <div *ngIf=\"firstname.invalid && (firstname.dirty || firstname.touched)\" class=\"visionpi-column visionpi-input-error\">\n                    <div *ngIf=\"firstname.errors.required\" i18n>\n                      Firstname is required.\n                    </div>\n                    <div *ngIf=\"firstname.errors.minlength\" i18n>\n                      Firstname must be at least 5 characters long.\n                    </div>\n                    <div *ngIf=\"firstname.errors.maxlength\" i18n>\n                      Firstname must be a maximum of 25 characters in length.\n                    </div>\n                  </div>\n                </div>\n              </div>\n              <div class=\"visionpi-column\">\n                <div class=\"visionpi-container\">\n                  <div class=\"visionpi-column\">\n                    <input placeholder=\"Last name(s)\" formControlName=\"lastname\" class=\"visionpi-input\" maxlength=\"25\" i18n>\n                  </div>\n                  <div *ngIf=\"lastname.invalid && (lastname.dirty || lastname.touched)\" class=\"visionpi-column visionpi-input-error\">\n                    <div *ngIf=\"lastname.errors.required\" i18n>\n                      Lastname is required.\n                    </div>\n                    <div *ngIf=\"lastname.errors.minlength\" i18n>\n                      Lastname must be at least 5 characters long.\n                    </div>\n                    <div *ngIf=\"firstname.errors.maxlength\" i18n>\n                      Lastname must be a maximum of 25 characters in length.\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n            <div class=\"visionpi-container\">\n              <div class=\"visionpi-column\">\n                <div class=\"visionpi-container\">\n                  <div class=\"visionpi-column\">\n                    <div class=\"visionpi-container\">\n                      <div class=\"visionpi-column-small\">\n                        <label>\n                          <span class='visionpi-input-title' i18n>Gender</span>\n                        </label>\n                      </div>\n                      <div class=\"visionpi-column\">\n                        <div class='visionpi-checks-container'>\n                          <div class='visionpi-checks'>\n                            <label *ngFor=\"let genre of genres\" >\n                              <input name='gender' type='radio' [value]=\"genre\" formControlName=\"gender\">\n                                <span class='visionpi-check' i18n>{{genre}}</span>\n                            </label>\n                          </div>\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                  <div *ngIf=\"gender.invalid && (gender.dirty || gender.touched)\" class=\"visionpi-column visionpi-input-error\">\n                    <div *ngIf=\"gender.errors.required\" i18n>\n                      Gender is required.\n                    </div>\n                  </div>\n                </div>\n              </div>\n              <div class=\"visionpi-column\">\n                <div class=\"visionpi-container\">\n                  <div class=\"visionpi-column\">\n                    <div class=\"visionpi-container\">\n                      <div class=\"visionpi-column-small\">\n                        <label>\n                          <span class='visionpi-input-title' i18n>Profile</span>\n                        </label>\n                      </div>\n                      <div class=\"visionpi-column\">\n                        <div class='visionpi-checks-container'>\n                          <div class='visionpi-checks'>\n                            <label *ngFor=\"let profile of profiles\" >\n                              <input name='profile' type='radio' [value]=\"profile.value\" formControlName=\"profile\">\n                                <span class='visionpi-check' i18n>{{profile.viewValue}}</span>\n                            </label>\n                          </div>\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                  <div *ngIf=\"profile.invalid && (profile.dirty || profile.touched)\" class=\"visionpi-column visionpi-input-error\">\n                    <div *ngIf=\"profile.errors.required\" i18n>\n                      Profile is required.\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n            <div class=\"visionpi-container\">\n              <div class=\"visionpi-column\">\n                <div class=\"visionpi-container\">\n                  <div class=\"visionpi-column\">\n                    <mat-form-field class=\"visionpi-input-date\">\n                      <input matInput [matDatepicker]=\"BirthdatePicker\" placeholder=\"Birthday\" formControlName=\"birthday\" disabled>\n                      <mat-datepicker-toggle matSuffix [for]=\"BirthdatePicker\"></mat-datepicker-toggle>\n                      <mat-datepicker #BirthdatePicker disabled=\"false\"></mat-datepicker>\n                    </mat-form-field>\n                  </div>\n                  <div *ngIf=\"birthday.invalid && (birthday.dirty || birthday.touched)\" class=\"visionpi-column visionpi-input-error\">\n                    <div *ngIf=\"birthday.errors.required\" i18n>\n                      Birthday is required.\n                    </div>\n                  </div>\n                </div>\n              </div>\n              <div class=\"visionpi-column\">\n                <div class=\"visionpi-container\">\n                  <div class=\"visionpi-column\">\n                    <input placeholder=\"Email\" formControlName=\"email\" class=\"visionpi-input\" required i18n>\n                  </div>\n                  <div *ngIf=\"email.invalid && (email.dirty || email.touched)\" class=\"visionpi-column visionpi-input-error\">\n                    <div *ngIf=\"email.errors.required\" i18n>\n                      Email is required.\n                    </div>\n                    <div *ngIf=\"email.errors.email && !email.errors.required\" i18n>\n                      Please enter a valid email address\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n\n            <mat-action-row>\n              <button class=\"visionpi-button\" (click)=\"nextStep()\" i18n>Next</button>\n            </mat-action-row>\n          </mat-expansion-panel>\n\n          <mat-expansion-panel [expanded]=\"step === 1\" (opened)=\"setStep(1)\" hideToggle>\n            <mat-expansion-panel-header>\n              <mat-panel-title i18n>\n                Credentials\n              </mat-panel-title>\n              <mat-panel-description i18n>\n                Type the user and password.....\n                <mat-icon>lock</mat-icon>\n              </mat-panel-description>\n            </mat-expansion-panel-header>\n\n            <div class=\"visionpi-container\">\n              <div class=\"visionpi-column\">\n                <input placeholder=\"Username\" formControlName=\"username\" class=\"visionpi-input\" maxlength=\"10\" i18n>\n              </div>\n              <div *ngIf=\"username.invalid && (username.dirty || username.touched)\" class=\"visionpi-column visionpi-input-error\">\n                <div *ngIf=\"username.errors.required\" i18n>\n                  Username is required.\n                </div>\n                <div *ngIf=\"username.errors.minlength\" i18n>\n                  Username must be at least 5 characters long.\n                </div>\n                <div *ngIf=\"username.errors.maxlength\" i18n>\n                  Username must be a maximum of 10 characters in length.\n                </div>\n              </div>\n            </div>\n            <div class=\"visionpi-container\">\n              <div class=\"visionpi-column\">\n                <div class=\"visionpi-container\">\n                  <div class=\"visionpi-column\">\n                    <div class=\"visionpi-container\">\n                      <div class=\"visionpi-column\">\n                        <input placeholder=\"Enter your password\" [type]=\"hide ? 'password' : 'text'\" formControlName=\"password\" class=\"visionpi-input\" maxlength=\"10\" i18n>\n                      </div>\n                      <div class=\"visionpi-column-small-right\">\n                        <button class=\"visionpi-button-password\" (click)=\"hide = !hide\" [attr.aria-label]=\"'Hide password'\" [attr.aria-pressed]=\"hide\">\n                          <mat-icon>{{hide ? 'visibility_off' : 'visibility'}}</mat-icon>\n                        </button>\n                      </div>\n                    </div>\n                  </div>\n                  <div *ngIf=\"password.invalid && (password.dirty || password.touched)\" class=\"visionpi-column visionpi-input-error\">\n                    <div *ngIf=\"password.errors.required\" i18n>\n                      Password is required.\n                    </div>\n                    <div *ngIf=\"password.errors.minlength\" i18n>\n                      8 characters please.\n                    </div>\n                    <div *ngIf=\"password.errors.maxlength\" i18n>\n                      Password must be a maximum of 10 characters in length.\n                    </div>\n                  </div>\n                </div>\n              </div>\n              <div class=\"visionpi-column\">\n                <div class=\"visionpi-container\">\n                  <div class=\"visionpi-column\">\n                    <div class=\"visionpi-container\">\n                      <div class=\"visionpi-column\">\n                        <input placeholder=\"Confirm your password\" [type]=\"hide ? 'password' : 'text'\" formControlName=\"confirmPassword\" class=\"visionpi-input\" maxlength=\"10\" i18n>\n                      </div>\n                      <div class=\"visionpi-column-small-right\">\n                        <button mat-icon-button matSuffix (click)=\"hide = !hide\" [attr.aria-label]=\"'Hide password'\" [attr.aria-pressed]=\"hide\">\n                          <mat-icon>{{hide ? 'visibility_off' : 'visibility'}}</mat-icon>\n                        </button>\n                      </div>\n                    </div>\n                  </div>\n                  <div *ngIf=\"confirmPassword.invalid && (confirmPassword.dirty || confirmPassword.touched)\" class=\"visionpi-column visionpi-input-error\">\n                    <div *ngIf=\"confirmPassword.errors.required\" i18n>\n                      Password is required.\n                    </div>\n                    <div *ngIf=\"confirmPassword.errors.minlength\" i18n>\n                      8 characters please.\n                    </div>\n                    <div *ngIf=\"confirmPassword.errors.maxlength\" i18n>\n                      Password must be a maximum of 10 characters in length.\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n\n            <mat-action-row>\n              <button class=\"visionpi-button visionpi-button-cancel\" (click)=\"prevStep()\" i18n>Previous</button>\n              <button class=\"visionpi-button\" (click)=\"nextStep()\" i18n>Next</button>\n            </mat-action-row>\n          </mat-expansion-panel>\n\n          <mat-expansion-panel [expanded]=\"step === 2\" (opened)=\"setStep(2)\" hideToggle>\n            <mat-expansion-panel-header>\n              <mat-panel-title i18n>\n                Address\n              </mat-panel-title>\n              <mat-panel-description i18n>\n                Type the street, city, etc.....\n                <mat-icon>map</mat-icon>\n              </mat-panel-description>\n            </mat-expansion-panel-header>\n\n            <div class=\"visionpi-container\">\n              <div class=\"visionpi-column\">\n                <div class=\"visionpi-container\">\n                  <div class=\"visionpi-column\">\n                    <input placeholder=\"Street\" formControlName=\"street\" class=\"visionpi-input\" maxlength=\"25\" i18n>\n                  </div>\n                  <div *ngIf=\"street.invalid && (street.dirty || street.touched)\" class=\"visionpi-column visionpi-input-error\">\n                    <div *ngIf=\"street.errors.required\" i18n>\n                      Street is required.\n                    </div>\n                    <div *ngIf=\"street.errors.minlength\" i18n>\n                      Street must be at least 5 characters long.\n                    </div>\n                    <div *ngIf=\"street.errors.maxlength\" i18n>\n                      Street must be a maximum of 25 characters in length.\n                    </div>\n                  </div>\n                </div>\n              </div>\n              <div class=\"visionpi-column\">\n                <div class=\"visionpi-container\">\n                  <div class=\"visionpi-column\">\n                    <input placeholder=\"City\" formControlName=\"city\" class=\"visionpi-input\" maxlength=\"25\" i18n>\n                  </div>\n                  <div *ngIf=\"city.invalid && (city.dirty || city.touched)\" class=\"visionpi-column visionpi-input-error\">\n                    <div *ngIf=\"city.errors.required\" i18n>\n                      City is required.\n                    </div>\n                    <div *ngIf=\"city.errors.minlength\" i18n>\n                      City must be at least 5 characters long.\n                    </div>\n                    <div *ngIf=\"city.errors.maxlength\" i18n>\n                      City must be a maximum of 25 characters in length.\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n            <div class=\"visionpi-container\">\n              <div class=\"visionpi-column\">\n                <div class=\"visionpi-container\">\n                  <div class=\"visionpi-column\">\n                    <input placeholder=\"State/Province\" formControlName=\"state\" class=\"visionpi-input\" maxlength=\"25\" i18n>\n                  </div>\n                  <div *ngIf=\"state.invalid && (state.dirty || state.touched)\" class=\"visionpi-column visionpi-input-error\">\n                    <div *ngIf=\"state.errors.required\" i18n>\n                      State/Province is required.\n                    </div>\n                    <div *ngIf=\"state.errors.minlength\" i18n>\n                      State/Province must be at least 5 characters long.\n                    </div>\n                    <div *ngIf=\"state.errors.maxlength\" i18n>\n                      State/Province must be a maximum of 25 characters in length.\n                    </div>\n                  </div>\n                </div>\n              </div>\n              <div class=\"visionpi-column\">\n                <div class=\"visionpi-container\">\n                  <div class=\"visionpi-column\">\n                    <input placeholder=\"Country\" formControlName=\"country\" class=\"visionpi-input\" maxlength=\"25\" i18n>\n                  </div>\n                  <div *ngIf=\"country.invalid && (country.dirty || country.touched)\" class=\"visionpi-column visionpi-input-error\">\n                    <div *ngIf=\"country.errors.required\" i18n>\n                      Country is required.\n                    </div>\n                    <div *ngIf=\"country.errors.minlength\" i18n>\n                      Country must be at least 5 characters long.\n                    </div>\n                    <div *ngIf=\"country.errors.maxlength\" i18n>\n                      Country must be a maximum of 25 characters in length.\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n            <div class=\"visionpi-container\">\n              <div class=\"visionpi-column\">\n                <div class=\"visionpi-container\">\n                  <div class=\"visionpi-column\">\n                    <input #postalCode placeholder=\"Postal Code\" formControlName=\"postalCode\" class=\"visionpi-input\" maxlength=\"5\" i18n>\n                    <mat-hint align=\"end\">{{postalCode.value.length}} / 5</mat-hint>\n                  </div>\n                  <div *ngIf=\"postalCode.invalid && (postalCode.dirty || postalCode.touched)\" class=\"visionpi-column visionpi-input-error\">\n                    <div *ngIf=\"postalCode.errors.required\" i18n>\n                      Postal Code is required.\n                    </div>\n                    <div *ngIf=\"postalCode.errors.minlength\" i18n>\n                      Postal Code must be at least 5 characters long.\n                    </div>\n                    <div *ngIf=\"firstname.errors.maxlength\"i18n>\n                      Postal Code must be a maximum of 5 characters in length.\n                    </div>\n                  </div>\n                </div>\n              </div>\n              <div class=\"visionpi-column\">\n\n              </div>\n            </div>\n            <mat-action-row>\n              <button class=\"visionpi-button visionpi-button-cancel\" (click)=\"prevStep()\" i18n>Previous</button>\n              <button class=\"visionpi-button\" (click)=\"nextStep()\" i18n>Next</button>\n            </mat-action-row>\n          </mat-expansion-panel>\n\n          <mat-expansion-panel [expanded]=\"step === 3\" (opened)=\"setStep(3)\" hideToggle>\n            <mat-expansion-panel-header>\n              <mat-panel-title i18n>\n                Platforms\n              </mat-panel-title>\n              <mat-panel-description i18n>\n                Inform the services and platforms ....\n                <mat-icon>phonelink</mat-icon>\n              </mat-panel-description>\n            </mat-expansion-panel-header>\n\n            <div class=\"\" formGroupName=\"platforms\">\n              <div class=\"visionpi-container\">\n                <div class=\"visionpi-column\">\n                  <div class=\"visionpi-container\">\n                    <div class=\"visionpi-column-small\">\n                      <label>\n                        <span class='visionpi-input-title' i18n>Services</span>\n                      </label>\n                    </div>\n                    <div class=\"visionpi-column\">\n                      <div class='visionpi-checks-container'>\n                        <div class='visionpi-checks'>\n                          <label formArrayName=\"services\" *ngFor=\"let service of userForm.controls.platforms.controls.services.controls; let i = index\" >\n                            <input type='checkbox' [formControlName]=\"i\">\n                              <span class=\"visionpi-check\"><mat-icon>{{services[i].icon}}</mat-icon></span>\n                          </label>\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n                <!--<div *ngIf=\"gender.invalid && (gender.dirty || gender.touched)\" class=\"visionpi-column visionpi-input-error\">\n                  <div *ngIf=\"gender.errors.required\">\n                    Gender is required.\n                  </div>\n                </div>-->\n              </div>\n              <div class=\"visionpi-container\">\n                <div class=\"visionpi-column\">\n                  <div class=\"visionpi-container\">\n                    <div class=\"visionpi-column-small\">\n                      <label>\n                        <span class='visionpi-input-title' i18n>Permissions:</span>\n                      </label>\n                    </div>\n                    <div class=\"visionpi-column\">\n                      <div class='visionpi-checks-container'>\n                        <div class='visionpi-checks'>\n                          <label *ngFor=\"let permission of permissions\" >\n                            <input type='checkbox'>\n                              <span class='visionpi-check' i18n>{{permission}}</span>\n                          </label>\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n                <!--<div *ngIf=\"gender.invalid && (gender.dirty || gender.touched)\" class=\"visionpi-column visionpi-input-error\">\n                  <div *ngIf=\"gender.errors.required\">\n                    Gender is required.\n                  </div>\n                </div>-->\n              </div>\n              <div class=\"visionpi-container\">\n                <div class=\"visionpi-column\">\n                  <div class=\"visionpi-container\">\n                    <div class=\"visionpi-column-small\">\n                      <label>\n                        <span class='visionpi-input-title' i18n>Notifications:</span>\n                      </label>\n                    </div>\n                    <div class=\"visionpi-column\">\n                      <div class='visionpi-checks-container'>\n                        <div class='visionpi-checks'>\n                          <label *ngFor=\"let notification of notifications\" >\n                            <input type='checkbox'>\n                              <span class='visionpi-check' i18n>{{notification}}</span>\n                          </label>\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n                <!--<div *ngIf=\"gender.invalid && (gender.dirty || gender.touched)\" class=\"visionpi-column visionpi-input-error\">\n                  <div *ngIf=\"gender.errors.required\">\n                    Gender is required.\n                  </div>\n                </div>-->\n              </div>\n            </div>\n\n            <mat-action-row>\n              <button class=\"visionpi-button visionpi-button-cancel\" (click)=\"prevStep()\" i18n>Previous</button>\n              <button class=\"visionpi-button visionpi-button-save\" (click)=\"onSubmit(userForm.value)\" i18n>Finish</button>\n            </mat-action-row>\n          </mat-expansion-panel>\n\n        </mat-accordion>\n      </form>\n    </div>\n  </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport {HttpClient} from '@angular/common/http';\nimport {merge, Observable, of as observableOf} from 'rxjs';\nimport {catchError, map, startWith, switchMap} from 'rxjs/operators';\nimport { UserService } from '../user.service';\nimport { FormBuilder, FormControl, FormArray, FormGroup, Validators } from '@angular/forms';\nimport {MatDialog, MatDialogRef, MAT_DIALOG_DATA} from '@angular/material/dialog';\nimport { SuccessfulRegistration } from '../messages/successful-registration.component'\n\nexport interface Profile {\n  value: string;\n  viewValue: string;\n}\n\n@Component({\n  selector: 'user-register',\n  templateUrl: './user-register.component.html',\n  styleUrls: ['./user-register.component.scss']\n})\nexport class UserRegisterComponent implements OnInit {\n  genres: string[] = ['Female', 'Male', 'LGBT+'];\n  profiles: Profile[] = [\n    {value: 'Deus', viewValue: 'Deus'},\n    {value: 'Warrior', viewValue: 'Warrior'},\n    {value: 'Mortal', viewValue: 'Mortal'}\n  ];\n  services = [\n    { id:1, description:'Dashboard', icon:'dashboard' },\n    { id:2, description:'User', icon:'people' },\n    { id:3, description:'Geolocalization', icon:'my_location' },\n    { id:4, description:'Monitoring', icon:'alarm' },\n    { id:5, description:'Surveillance', icon:'videocam' }\n  ];\n  permissions: string[] = ['Read', 'Write'];\n  notifications: string[] = ['Telephone', 'Email', 'SMS'];\n  userForm;\n  emailFormControl = new FormControl('', [\n    Validators.required,\n    Validators.email,\n  ]);\n\n  step = 0;\n  hide: boolean = true;\n\n  constructor(private formBuilder: FormBuilder, public userService: UserService,\n              public dialog: MatDialog) {\n    this.userForm = this.formBuilder.group({\n      account: new FormControl('', []),\n      firstname: new FormControl('', [\n        Validators.required,\n        Validators.minLength(5),\n        Validators.maxLength(25)\n      ]),\n      lastname: new FormControl('', [\n        Validators.required,\n        Validators.minLength(5),\n        Validators.maxLength(25)\n      ]),\n      gender: new FormControl('', [\n        Validators.required,\n      ]),\n      birthday: new FormControl('', [\n        Validators.required,\n      ]),\n      profile: new FormControl('', [\n        Validators.required,\n      ]),\n      email: new FormControl('', [\n        Validators.required,\n        Validators.email,\n      ]),\n      username: new FormControl('', [\n        Validators.required,\n        Validators.minLength(5),\n        Validators.maxLength(10)\n      ]),\n      password: new FormControl('', [\n        Validators.required,\n        Validators.minLength(5),\n        Validators.maxLength(10)\n      ]),\n      confirmPassword: new FormControl('', [\n        Validators.required,\n        Validators.minLength(5),\n        Validators.maxLength(10)\n      ]),\n      street: new FormControl('', [\n        Validators.required,\n        Validators.minLength(5),\n        Validators.maxLength(25)\n      ]),\n      city: new FormControl('', [\n        Validators.required,\n        Validators.minLength(5),\n        Validators.maxLength(25)\n      ]),\n      state: new FormControl('', [\n        Validators.required,\n        Validators.minLength(5),\n        Validators.maxLength(25)\n      ]),\n      country: new FormControl('', [\n        Validators.required,\n        Validators.minLength(5),\n        Validators.maxLength(25)\n      ]),\n      postalCode: new FormControl('', [\n        Validators.required,\n        Validators.minLength(5),\n        Validators.maxLength(5)\n      ]),\n      platforms: new FormGroup({\n        services: new FormArray([]),\n        permissions: new FormArray([]),\n        notifications: new FormArray([])\n      })\n    });\n\n    this.addServices();\n  }\n\n  ngOnInit() {\n  }\n\n  setStep(index: number) { this.step = index; }\n\n  nextStep() { this.step++; }\n\n  prevStep() { this.step--; }\n\n\n  onSubmit(userData) {\n    console.log('userdata: ' + userData);\n    const selectedServices = this.userForm.controls.platforms.value.services\n      .map((v, i) => v ? this.services[i].description : null)\n      .filter(v => v !== null);\n    console.log(selectedServices);\n    userData.platforms.services = selectedServices;\n    userData.account = this.generateAccount(userData.username);\n    this.userService.register(userData)\n    .subscribe(data => {\n      this.openDialog(userData.username);\n    });\n    \n  }\n\n  get account() { return this.userForm.get('account'); }\n  get email() { return this.userForm.get('email'); }\n  get firstname() { return this.userForm.get('firstname'); }\n  get lastname() { return this.userForm.get('lastname'); }\n  get gender() { return this.userForm.get('gender'); }\n  get birthday() { return this.userForm.get('birthday'); }\n  get profile() { return this.userForm.get('profile'); }\n  get username() { return this.userForm.get('username'); }\n  get password() { return this.userForm.get('password'); }\n  get confirmPassword() { return this.userForm.get('confirmPassword'); }\n  get street() { return this.userForm.get('street'); }\n  get city() { return this.userForm.get('city'); }\n  get state() { return this.userForm.get('state'); }\n  get country() { return this.userForm.get('country'); }\n  get postalCode() { return this.userForm.get('postalCode'); }\n\n  private addServices() {\n    this.services.forEach((o, i) => {\n      const control = new FormControl();\n      (this.userForm.controls.platforms.controls.services as FormArray).push(control);\n    });\n  }\n\n  private openDialog(username) {\n    const session = JSON.parse(localStorage.getItem('session'));\n    const dialogRef = this.dialog.open(SuccessfulRegistration, {\n      width: '30em',\n      data: {user: session.clientId, newUser: username},\n      disableClose: true\n    });\n\n    dialogRef.afterClosed().subscribe(result => {\n      console.log('The dialog was closed');\n      this.userForm.reset();\n      //this.updateUsers();\n      //this.newUser = result;\n    });\n  }\n\n  generateAccount(name){\n    const initialLetters ='VP';\n    const number = Math.floor(Math.random() * 5000) + 1000;\n    const account = initialLetters + name.toUpperCase() + number;\n    return account;\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { UserComponent } from './user.component';\nimport { AdministrationComponent } from './administration/administration.component';\nimport { UserListComponent } from './user-list/user-list.component';\nimport { UserRegisterComponent } from './user-register/user-register.component';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: UserComponent,\n    //canActivate: [AuthGuard],\n    children: [\n      {\n        path: 'administration',\n        component: AdministrationComponent,\n        children: [\n          {\n            path: 'user-list',\n            component: UserListComponent\n          },\n          {\n            path: 'user-register',\n            component: UserRegisterComponent\n          }\n        ]\n      },\n    ]\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class UserRoutingModule { }\n","<!-- Add Content Here -->\n<router-outlet></router-outlet>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-user',\n  templateUrl: './user.component.html',\n  styleUrls: ['./user.component.scss']\n})\nexport class UserComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","import { NgModule, CUSTOM_ELEMENTS_SCHEMA } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { UserRoutingModule } from './user-routing.module';\nimport { AngularMaterialModule } from '../angular-material/angular-material.module';\nimport { ReactiveFormsModule }    from '@angular/forms';\nimport { AdministrationComponent } from './administration/administration.component';\nimport { UserComponent } from './user.component';\nimport { SuccessfulRegistration } from './messages/successful-registration.component';\nimport { UserListComponent } from './user-list/user-list.component';\nimport { UserRegisterComponent } from './user-register/user-register.component'\n\n\n@NgModule({\n  declarations: [AdministrationComponent, UserComponent, SuccessfulRegistration, UserListComponent, UserRegisterComponent],\n  imports: [\n    CommonModule,\n    UserRoutingModule,\n    ReactiveFormsModule,\n    AngularMaterialModule\n  ],\n  entryComponents: [SuccessfulRegistration],\n  schemas: [CUSTOM_ELEMENTS_SCHEMA]\n})\nexport class UserModule { }\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable, of } from 'rxjs';\nimport { tap, delay, map } from 'rxjs/operators';\nimport { environment } from '../../environments/environment';\nimport { User } from './models/user';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UserService {\n\n  constructor(private http: HttpClient) { }\n\n  getAll() {\n      return this.http.get<User[]>(environment.apiUsers + '/user');\n  }\n\n  register(user: User) {\n      return this.http.post(environment.apiUsers + '/user', user);\n  }\n\n}\n"],"sourceRoot":"webpack:///"}