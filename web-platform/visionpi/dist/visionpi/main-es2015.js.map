{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/angular-material/angular-material.module.ts","./src/app/app-routing.module.ts","./src/app/app.component.html","./src/app/app.component.ts","./src/app/app.module.ts","./src/app/core/core.module.ts","./src/app/core/interceptors/auth-interceptor.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport {\n   MatButtonModule,\n   MatToolbarModule,\n   MatIconModule,\n   MatBadgeModule,\n   MatSidenavModule,\n   MatListModule,\n   MatGridListModule,\n   MatFormFieldModule,\n   MatInputModule,\n   MatMenuModule,\n   MatSelectModule,\n   MatRadioModule,\n   MatDatepickerModule,\n   MatNativeDateModule,\n   MatChipsModule,\n   MatTooltipModule,\n   MatTableModule,\n   MatPaginatorModule,\n   MatExpansionModule,\n   MatTabsModule,\n   MatCheckboxModule,\n   MatDialogModule\n} from '@angular/material';\nimport {MatBottomSheetModule} from '@angular/material/bottom-sheet';\nimport { CdkTableModule } from '@angular/cdk/table';\n\n@NgModule({\n  declarations: [],\n  imports: [\n    CommonModule,\n    MatButtonModule,\n    MatToolbarModule,\n    MatIconModule,\n    MatSidenavModule,\n    MatBadgeModule,\n    MatListModule,\n    MatGridListModule,\n    MatFormFieldModule,\n    MatInputModule,\n    MatMenuModule,\n    MatSelectModule,\n    MatRadioModule,\n    MatDatepickerModule,\n    MatNativeDateModule,\n    MatChipsModule,\n    MatTooltipModule,\n    MatTableModule,\n    MatPaginatorModule,\n    MatExpansionModule,\n    MatTabsModule,\n    MatCheckboxModule,\n    MatDialogModule,\n    MatBottomSheetModule,\n    CdkTableModule\n  ],\n  exports: [\n    MatButtonModule,\n    MatToolbarModule,\n    MatIconModule,\n    MatSidenavModule,\n    MatBadgeModule,\n    MatListModule,\n    MatGridListModule,\n    MatInputModule,\n    MatFormFieldModule,\n    MatMenuModule,\n    MatSelectModule,\n    MatRadioModule,\n    MatDatepickerModule,\n    MatChipsModule,\n    MatTooltipModule,\n    MatTableModule,\n    MatPaginatorModule,\n    MatExpansionModule,\n    MatTabsModule,\n    MatCheckboxModule,\n    MatDialogModule,\n    MatBottomSheetModule,\n    CdkTableModule\n  ],\n  providers: [\n    MatDatepickerModule,\n  ]\n})\nexport class AngularMaterialModule { }\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\n\nconst routes: Routes = [\n  { path: '', pathMatch: 'full', redirectTo: 'login' },\n  {\n    path: 'login',\n    loadChildren: () => import('./auth/auth.module').then(mod => mod.AuthModule)\n  },\n  {\n    path: 'home',\n    loadChildren: () => import('./home/home.module').then(mod => mod.HomeModule)\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes, { useHash: true })],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","<router-outlet></router-outlet>\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  title = 'visionpi';\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule, CUSTOM_ELEMENTS_SCHEMA } from '@angular/core';\n// Modules\nimport { AppRoutingModule } from './app-routing.module';\nimport { CoreModule } from './core/index'\nimport { AngularMaterialModule } from './angular-material/angular-material.module';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { FlexLayoutModule } from '@angular/flex-layout';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n// Components\nimport { AppComponent } from './app.component';\n\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    BrowserModule,\n    CoreModule,\n    AppRoutingModule,\n    BrowserAnimationsModule,\n    AngularMaterialModule,\n    FlexLayoutModule,\n    FormsModule,\n    ReactiveFormsModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent],\n  schemas: [CUSTOM_ELEMENTS_SCHEMA]\n})\nexport class AppModule { }\n","import { NgModule, Optional, SkipSelf } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { HTTP_INTERCEPTORS, HttpClientModule } from '@angular/common/http';\nimport { AuthInterceptor } from './interceptors/auth-interceptor';\n\n@NgModule({\n  declarations: [],\n  imports: [\n    CommonModule,\n    HttpClientModule\n  ],\n  providers: [\n    { provide: HTTP_INTERCEPTORS, useClass: AuthInterceptor, multi: true }\n  ]\n})\nexport class CoreModule {\n  /* make sure CoreModule is imported only by one NgModule the AppModule */\n  constructor(\n    @Optional() @SkipSelf() parentModule: CoreModule\n  ) {\n    if (parentModule) {\n      throw new Error('CoreModule is already loaded. Import only in AppModule');\n    }\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpInterceptor, HttpRequest, HttpHandler, HttpEvent } from '@angular/common/http';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthInterceptor implements HttpInterceptor {\n\n  constructor() {}\n\n  intercept(req: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\n\n    const session = JSON.parse(localStorage.getItem('session'));\n    let code = localStorage.getItem('code');\n\n    let request = req;\n\n    if (session) {\n      request = req.clone({\n        setHeaders: {\n          authorization: `Bearer ${ session.accessToken }`,\n          'Content-Type': 'application/json'\n        }\n      });\n    } else {\n      if (code) {\n        request = request.clone({\n            setHeaders: {\n              'Content-Type': 'application/x-www-form-urlencoded',\n              Authorization: `Basic ${code}`\n            }\n        });\n      }\n    }\n\n    return next.handle(request);\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n const urlDev = 'https://127.0.0.1:80';\n// const urlDev = 'https://www.visionpi-security.com';\n\nexport const environment = {\n  production: false,\n  apiUrl: urlDev,\n  apiAuthentication: urlDev + '/auth/access_token',\n  apiUsers: urlDev + '/v1/users',\n  apiGeolocalization: urlDev + '/v1/geolocalization',\n  apiSecurity: urlDev + '/v1/security',\n  apiMonitoring: urlDev + '/v1/monitoring',\n  apiAdministration: urlDev + '/api/administration',\n  apiVideoSurveillance: urlDev + '/v1/video-surveillance',\n  streamingServer: 'https://visionpi-streaming.appspot.com',\n  cryptoSecret: 'visionpi$ecurity%2020'\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import 'hammerjs';\nimport { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}